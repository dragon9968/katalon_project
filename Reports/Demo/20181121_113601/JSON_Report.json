{"devicePlatform":"","logFolder":"E:\\WORK\\Katalon_CURA Testproject\\Reports\\Demo\\20181121_113601","runData":{"hostName":"longnguyen - LONGNGUYEN.vodc.lan","os":"Windows 10 64bit","katalonVersion":"5.8.6.1","browser":"Chrome 70.0.3538.102","dbServerInfo":"Microsoft SQL Server 12.00.4100","hostAddress":"10.10.10.62","sessionId":"d40860f734bd397244565df3fc5bf68c","seleniumVersion":"3.7.1","proxyInformation":"ProxyInformation{proxyOption\u003dNO_PROXY, proxyServerType\u003dHTTP, password\u003d, proxyServerAddress\u003d, proxyServerPort\u003d0}","platform":"Windows 10"},"type":"TEST_SUITE","name":"Demo","id":"Test Suites/Demo","source":"","message":"Test Cases/Demo/DataTable","description":"","startTime":1542774966910,"endTime":1542774996211,"childRecords":[{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/DataTable","id":"Test Cases/Demo/DataTable","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\DataTable.tc","message":"Test Cases/Demo/DataTable","description":"","startTime":1542774969136,"endTime":1542774996211,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1542774969197,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1542774969204,"endTime":1542774969586,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1542774969299,"endTime":1542774969308,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1542774969309,"endTime":1542774969584,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - print \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1542774970328,"endTime":1542774970329,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1542774970331,"endTime":1542774977264,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1542774977263,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1542774977264,"endTime":1542774978959,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1542774978958,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1542774978959,"endTime":1542774980268,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1542774980266,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"scrollToPosition","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","description":"","startTime":1542774980268,"endTime":1542774980906,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","startTime":1542774980905,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - driver \u003d com.kms.katalon.core.webui.driver.DriverFactory.getWebDriver()","description":"","startTime":1542774980907,"endTime":1542774980924,"childRecords":[],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1542774980926,"endTime":1542774981156,"childRecords":[],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1542774981156,"endTime":1542774981158,"childRecords":[],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows are : \" + row_count)","description":"","startTime":1542774981159,"endTime":1542774981185,"childRecords":[],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1542774981186,"endTime":1542774996210,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774981187,"endTime":1542774981334,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774981334,"endTime":1542774981337,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774981337,"endTime":1542774981339,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1542774981339,"endTime":1542774984471,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774981340,"endTime":1542774981423,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774981424,"endTime":1542774981425,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1542774981425,"endTime":1542774982901,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1542774982869,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774982905,"endTime":1542774983363,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774983363,"endTime":1542774983364,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1542774983364,"endTime":1542774983744,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1542774983743,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774983745,"endTime":1542774983793,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774983794,"endTime":1542774983798,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1542774983798,"endTime":1542774983912,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1542774983910,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774983912,"endTime":1542774984006,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774984006,"endTime":1542774984007,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1542774984007,"endTime":1542774984214,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1542774984214,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774984214,"endTime":1542774984256,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774984257,"endTime":1542774984257,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1542774984258,"endTime":1542774984287,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1542774984286,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774984287,"endTime":1542774984318,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774984319,"endTime":1542774984353,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1542774984353,"endTime":1542774984471,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1542774984471,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774984472,"endTime":1542774984517,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774984517,"endTime":1542774984517,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774984518,"endTime":1542774984519,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1542774984519,"endTime":1542774986265,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774984520,"endTime":1542774984549,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774984550,"endTime":1542774984550,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1542774984550,"endTime":1542774984747,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1542774984747,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774984748,"endTime":1542774984792,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774984792,"endTime":1542774984793,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1542774984793,"endTime":1542774984912,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1542774984911,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774984912,"endTime":1542774985012,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774985013,"endTime":1542774985013,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542774985014,"endTime":1542774985049,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542774985048,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774985049,"endTime":1542774985086,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774985087,"endTime":1542774985087,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1542774985087,"endTime":1542774985289,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1542774985289,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774985289,"endTime":1542774985408,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774985409,"endTime":1542774985409,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1542774985409,"endTime":1542774985717,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1542774985716,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774985718,"endTime":1542774985824,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774985825,"endTime":1542774985825,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1542774985826,"endTime":1542774986265,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1542774986264,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774986266,"endTime":1542774986335,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774986336,"endTime":1542774986336,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774986336,"endTime":1542774986337,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1542774986337,"endTime":1542774987879,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774986337,"endTime":1542774986476,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774986476,"endTime":1542774986479,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1542774986479,"endTime":1542774986828,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1542774986827,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774986828,"endTime":1542774986885,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774986886,"endTime":1542774986886,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1542774986887,"endTime":1542774987084,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1542774987084,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774987085,"endTime":1542774987127,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774987127,"endTime":1542774987128,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542774987128,"endTime":1542774987385,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542774987385,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774987385,"endTime":1542774987426,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774987427,"endTime":1542774987429,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1542774987429,"endTime":1542774987623,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1542774987622,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774987623,"endTime":1542774987662,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774987662,"endTime":1542774987662,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1542774987663,"endTime":1542774987687,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1542774987687,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774987687,"endTime":1542774987767,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774987767,"endTime":1542774987768,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1542774987768,"endTime":1542774987879,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1542774987878,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774987879,"endTime":1542774987904,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774987904,"endTime":1542774987904,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774987905,"endTime":1542774987905,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1542774987905,"endTime":1542774988921,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774987905,"endTime":1542774987933,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774987934,"endTime":1542774987934,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1542774987934,"endTime":1542774988071,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1542774988070,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774988071,"endTime":1542774988141,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774988141,"endTime":1542774988141,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1542774988142,"endTime":1542774988171,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1542774988171,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774988171,"endTime":1542774988260,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774988261,"endTime":1542774988261,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542774988261,"endTime":1542774988380,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542774988379,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774988380,"endTime":1542774988410,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774988410,"endTime":1542774988412,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1542774988412,"endTime":1542774988451,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1542774988451,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774988452,"endTime":1542774988649,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774988650,"endTime":1542774988650,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1542774988650,"endTime":1542774988682,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1542774988682,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774988683,"endTime":1542774988731,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774988737,"endTime":1542774988738,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1542774988738,"endTime":1542774988921,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1542774988921,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774988921,"endTime":1542774988946,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774988946,"endTime":1542774988946,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774988947,"endTime":1542774988947,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1542774988947,"endTime":1542774990012,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774988948,"endTime":1542774988979,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774988980,"endTime":1542774988980,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1542774988980,"endTime":1542774989097,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1542774989097,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774989097,"endTime":1542774989184,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774989184,"endTime":1542774989186,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1542774989187,"endTime":1542774989224,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1542774989224,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774989224,"endTime":1542774989312,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774989312,"endTime":1542774989312,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542774989313,"endTime":1542774989426,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542774989426,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774989426,"endTime":1542774989455,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774989455,"endTime":1542774989456,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1542774989456,"endTime":1542774989484,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1542774989484,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774989484,"endTime":1542774989561,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774989561,"endTime":1542774989562,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1542774989562,"endTime":1542774989843,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1542774989843,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774989843,"endTime":1542774989929,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774989930,"endTime":1542774989931,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1542774989931,"endTime":1542774990012,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1542774990012,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774990013,"endTime":1542774990106,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774990106,"endTime":1542774990106,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774990106,"endTime":1542774990107,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1542774990107,"endTime":1542774991675,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774990107,"endTime":1542774990167,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774990167,"endTime":1542774990168,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1542774990168,"endTime":1542774990392,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1542774990392,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774990392,"endTime":1542774990464,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774990464,"endTime":1542774990465,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1542774990465,"endTime":1542774990601,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1542774990600,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774990601,"endTime":1542774991140,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774991141,"endTime":1542774991142,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542774991142,"endTime":1542774991190,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542774991190,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774991190,"endTime":1542774991223,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774991224,"endTime":1542774991224,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1542774991224,"endTime":1542774991404,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1542774991404,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774991404,"endTime":1542774991432,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774991432,"endTime":1542774991432,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1542774991433,"endTime":1542774991455,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1542774991455,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774991456,"endTime":1542774991594,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774991595,"endTime":1542774991595,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1542774991595,"endTime":1542774991675,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1542774991675,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774991676,"endTime":1542774991701,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774991702,"endTime":1542774991702,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774991703,"endTime":1542774991704,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1542774991704,"endTime":1542774992692,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774991704,"endTime":1542774991743,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774991743,"endTime":1542774991743,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1542774991744,"endTime":1542774991937,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1542774991937,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774991937,"endTime":1542774991968,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774991968,"endTime":1542774991968,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1542774991969,"endTime":1542774992001,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1542774992001,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774992001,"endTime":1542774992168,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774992168,"endTime":1542774992168,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542774992169,"endTime":1542774992205,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542774992204,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774992205,"endTime":1542774992345,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774992345,"endTime":1542774992346,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1542774992346,"endTime":1542774992442,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1542774992442,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774992442,"endTime":1542774992470,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774992471,"endTime":1542774992471,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1542774992471,"endTime":1542774992502,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1542774992499,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774992503,"endTime":1542774992563,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774992563,"endTime":1542774992563,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1542774992564,"endTime":1542774992692,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1542774992691,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774992692,"endTime":1542774992742,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774992743,"endTime":1542774992743,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774992744,"endTime":1542774992744,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1542774992745,"endTime":1542774993804,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774992745,"endTime":1542774992802,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774992802,"endTime":1542774992803,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1542774992803,"endTime":1542774992961,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1542774992960,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774992961,"endTime":1542774992990,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774992990,"endTime":1542774992991,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1542774992991,"endTime":1542774993012,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1542774993012,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774993012,"endTime":1542774993131,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774993131,"endTime":1542774993132,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1542774993132,"endTime":1542774993237,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1542774993237,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774993238,"endTime":1542774993450,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774993451,"endTime":1542774993451,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1542774993451,"endTime":1542774993533,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1542774993532,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774993533,"endTime":1542774993563,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774993564,"endTime":1542774993564,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1542774993564,"endTime":1542774993747,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1542774993747,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774993747,"endTime":1542774993782,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774993782,"endTime":1542774993783,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1542774993783,"endTime":1542774993804,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1542774993804,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774993804,"endTime":1542774993912,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774993912,"endTime":1542774993912,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774993912,"endTime":1542774993915,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1542774993915,"endTime":1542774995151,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774993915,"endTime":1542774994026,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774994026,"endTime":1542774994027,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1542774994027,"endTime":1542774994050,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1542774994050,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774994050,"endTime":1542774994098,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774994098,"endTime":1542774994099,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1542774994099,"endTime":1542774994394,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1542774994394,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774994394,"endTime":1542774994823,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774994824,"endTime":1542774994824,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542774994824,"endTime":1542774994859,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542774994859,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774994859,"endTime":1542774994886,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774994887,"endTime":1542774994887,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1542774994887,"endTime":1542774994914,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1542774994914,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774994914,"endTime":1542774995012,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774995012,"endTime":1542774995013,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1542774995013,"endTime":1542774995101,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1542774995101,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774995102,"endTime":1542774995131,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774995132,"endTime":1542774995132,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1542774995132,"endTime":1542774995151,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1542774995151,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542774995152,"endTime":1542774995217,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542774995217,"endTime":1542774995217,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542774995217,"endTime":1542774995218,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1542774995218,"endTime":1542774996210,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774995218,"endTime":1542774995317,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774995317,"endTime":1542774995317,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1542774995317,"endTime":1542774995422,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1542774995422,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774995422,"endTime":1542774995492,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774995493,"endTime":1542774995493,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1542774995493,"endTime":1542774995621,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1542774995621,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774995621,"endTime":1542774995651,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774995652,"endTime":1542774995652,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542774995652,"endTime":1542774995682,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542774995682,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774995682,"endTime":1542774995811,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774995811,"endTime":1542774995811,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1542774995812,"endTime":1542774995919,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1542774995919,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774995919,"endTime":1542774995950,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774995950,"endTime":1542774995950,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1542774995950,"endTime":1542774995975,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1542774995975,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542774995975,"endTime":1542774996062,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and \" + column + \" is \" + cell_text)","description":"","startTime":1542774996062,"endTime":1542774996062,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1542774996063,"endTime":1542774996209,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1542774996209,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/DataTable","startTime":1542774996210,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}