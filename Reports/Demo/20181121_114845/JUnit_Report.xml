<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Demo" time="26" tests="0" failures="1" errors="0">
   <testsuite name="Demo" tests="0" failures="1" errors="0" time="26" timestamp="2018-11-21 11:48:51" hostname="longnguyen - LONGNGUYEN.vodc.lan" id="Test Suites/Demo">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="E:\\WORK\\Katalon_CURA Testproject\\Reports\\Demo\\20181121_114845"/>
         <property name="logFiles" value="E:\\WORK\\Katalon_CURA Testproject\\Reports\\Demo\\20181121_114845\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="longnguyen - LONGNGUYEN.vodc.lan"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="5.8.6.1"/>
         <property name="browser" value="Chrome 70.0.3538.102"/>
         <property name="dbServerInfo" value="Microsoft SQL Server 12.00.4100"/>
         <property name="hostAddress" value="10.10.10.62"/>
         <property name="sessionId" value="a028b638231cd8394c843744487fad03"/>
         <property name="seleniumVersion" value="3.7.1"/>
         <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/Demo/DataTable" classname="Test Cases/Demo/DataTable" status="FAILED">
         <failure type="FAILED" message="(Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text 'London' and expected text 'Saigon' (Root cause: Actual text 'London' and expected text 'Saigon' are not matched)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:61)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:46)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at Script1542702721131.run(Script1542702721131.groovy:51)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1542775725530.run(TempTestSuite1542775725530.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)"/>
         <system-out><![CDATA[2018-11-21 11:48:52 - [TEST_CASE][FAILED] - Test Cases/Demo/DataTable: Test Cases/Demo/DataTable FAILED because (of) (Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text 'London' and expected text 'Saigon' (Root cause: Actual text 'London' and expected text 'Saigon' are not matched)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:61)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:46)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at Script1542702721131.run(Script1542702721131.groovy:51)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1542775725530.run(TempTestSuite1542775725530.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)

2018-11-21 11:48:52 - [TEST_STEP][PASSED] - Start listener action : sampleBeforeTestCase: Invoke 'com.kms.katalon.core.annotation.BeforeTestCase' method: 'NewTestListener.sampleBeforeTestCase(...)' completed.

2018-11-21 11:48:52 - [TEST_STEP][PASSED] - Statement - println(testCaseContext.getTestCaseId()): null

2018-11-21 11:48:52 - [TEST_STEP][PASSED] - Statement - println(testCaseContext.getTestCaseVariables()): Invoke 'com.kms.katalon.core.annotation.BeforeTestCase' method: 'NewTestListener.sampleBeforeTestCase(...)' completed.

2018-11-21 11:48:53 - [TEST_STEP][PASSED] - Statement - print = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2018-11-21 11:48:53 - [TEST_STEP][PASSED] - openBrowser: Browser is opened with url: ''

2018-11-21 11:48:58 - [MESSAGE][PASSED] - Browser is opened with url: ''

2018-11-21 11:48:58 - [TEST_STEP][PASSED] - navigateToUrl: Navigate to 'file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html' successfully

2018-11-21 11:48:59 - [MESSAGE][PASSED] - Navigate to 'file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html' successfully

2018-11-21 11:48:59 - [TEST_STEP][PASSED] - maximizeWindow: Current window maximized

2018-11-21 11:49:01 - [MESSAGE][PASSED] - Current window maximized

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - scrollToPosition: Browser is scrolled to position x = 250, y = 250

2018-11-21 11:49:01 - [MESSAGE][PASSED] - Browser is scrolled to position x = 250, y = 250

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - driver = com.kms.katalon.core.webui.driver.DriverFactory.getWebDriver(): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - row_table = driver.findElements(org.openqa.selenium.By.xpath(".//*[@id='example']/tbody/tr")): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - row_count = row_table.size(): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - println("No of rows are : " + row_count): null

2018-11-21 11:49:01 - [TEST_STEP][FAILED] - Statement - For ([row = 0, row < row_count, (row++)]): Actual text '$205,500' and expected text '$205,500' are matched 

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$162,700' and expected text '$162,700' are matched 

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:01 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Airi Satou' and expected text 'Airi Satou' are matched 

2018-11-21 11:49:02 - [MESSAGE][PASSED] - Actual text 'Airi Satou' and expected text 'Airi Satou' are matched 

2018-11-21 11:49:02 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:02 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:02 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Accountant' and expected text 'Accountant' are matched 

2018-11-21 11:49:02 - [MESSAGE][PASSED] - Actual text 'Accountant' and expected text 'Accountant' are matched 

2018-11-21 11:49:02 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:02 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:02 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Tokyo' and expected text 'Tokyo' are matched 

2018-11-21 11:49:03 - [MESSAGE][PASSED] - Actual text 'Tokyo' and expected text 'Tokyo' are matched 

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - verifyMatch: Actual text '33' and expected text '33' are matched 

2018-11-21 11:49:03 - [MESSAGE][PASSED] - Actual text '33' and expected text '33' are matched 

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2008/11/28' and expected text '2008/11/28' are matched 

2018-11-21 11:49:03 - [MESSAGE][PASSED] - Actual text '2008/11/28' and expected text '2008/11/28' are matched 

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:03 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$162,700' and expected text '$162,700' are matched 

2018-11-21 11:49:04 - [MESSAGE][PASSED] - Actual text '$162,700' and expected text '$162,700' are matched 

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:04 - [TEST_STEP][FAILED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$1,200,000' and expected text '$1,200,000' are matched 

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Angelica Ramos' and expected text 'Angelica Ramos' are matched 

2018-11-21 11:49:04 - [MESSAGE][PASSED] - Actual text 'Angelica Ramos' and expected text 'Angelica Ramos' are matched 

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Chief Executive Officer (CEO)' and expected text 'Chief Executive Officer (CEO)' are matched 

2018-11-21 11:49:04 - [MESSAGE][PASSED] - Actual text 'Chief Executive Officer (CEO)' and expected text 'Chief Executive Officer (CEO)' are matched 

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:04 - [TEST_STEP][FAILED] - verifyMatch: Unable to verify match between actual text 'London' and expected text 'Saigon' (Root cause: Actual text 'London' and expected text 'Saigon' are not matched)

2018-11-21 11:49:04 - [MESSAGE][FAILED] - Unable to verify match between actual text 'London' and expected text 'Saigon' (Root cause: Actual text 'London' and expected text 'Saigon' are not matched)

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - verifyMatch: Actual text '47' and expected text '47' are matched 

2018-11-21 11:49:04 - [MESSAGE][PASSED] - Actual text '47' and expected text '47' are matched 

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:04 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2009/10/09' and expected text '2009/10/09' are matched 

2018-11-21 11:49:05 - [MESSAGE][PASSED] - Actual text '2009/10/09' and expected text '2009/10/09' are matched 

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$1,200,000' and expected text '$1,200,000' are matched 

2018-11-21 11:49:05 - [MESSAGE][PASSED] - Actual text '$1,200,000' and expected text '$1,200,000' are matched 

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$86,000' and expected text '$86,000' are matched 

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Ashton Cox' and expected text 'Ashton Cox' are matched 

2018-11-21 11:49:05 - [MESSAGE][PASSED] - Actual text 'Ashton Cox' and expected text 'Ashton Cox' are matched 

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:05 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Junior Technical Author' and expected text 'Junior Technical Author' are matched 

2018-11-21 11:49:06 - [MESSAGE][PASSED] - Actual text 'Junior Technical Author' and expected text 'Junior Technical Author' are matched 

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:06 - [MESSAGE][PASSED] - Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - verifyMatch: Actual text '66' and expected text '66' are matched 

2018-11-21 11:49:06 - [MESSAGE][PASSED] - Actual text '66' and expected text '66' are matched 

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:06 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2009/01/12' and expected text '2009/01/12' are matched 

2018-11-21 11:49:07 - [MESSAGE][PASSED] - Actual text '2009/01/12' and expected text '2009/01/12' are matched 

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$86,000' and expected text '$86,000' are matched 

2018-11-21 11:49:07 - [MESSAGE][PASSED] - Actual text '$86,000' and expected text '$86,000' are matched 

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$132,000' and expected text '$132,000' are matched 

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Bradley Greer' and expected text 'Bradley Greer' are matched 

2018-11-21 11:49:07 - [MESSAGE][PASSED] - Actual text 'Bradley Greer' and expected text 'Bradley Greer' are matched 

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Software Engineer' and expected text 'Software Engineer' are matched 

2018-11-21 11:49:07 - [MESSAGE][PASSED] - Actual text 'Software Engineer' and expected text 'Software Engineer' are matched 

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'London' and expected text 'London' are matched 

2018-11-21 11:49:07 - [MESSAGE][PASSED] - Actual text 'London' and expected text 'London' are matched 

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:07 - [TEST_STEP][PASSED] - verifyMatch: Actual text '41' and expected text '41' are matched 

2018-11-21 11:49:08 - [MESSAGE][PASSED] - Actual text '41' and expected text '41' are matched 

2018-11-21 11:49:08 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:08 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:08 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2012/10/13' and expected text '2012/10/13' are matched 

2018-11-21 11:49:08 - [MESSAGE][PASSED] - Actual text '2012/10/13' and expected text '2012/10/13' are matched 

2018-11-21 11:49:08 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:08 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:08 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$132,000' and expected text '$132,000' are matched 

2018-11-21 11:49:09 - [MESSAGE][PASSED] - Actual text '$132,000' and expected text '$132,000' are matched 

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$206,850' and expected text '$206,850' are matched 

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Brenden Wagner' and expected text 'Brenden Wagner' are matched 

2018-11-21 11:49:09 - [MESSAGE][PASSED] - Actual text 'Brenden Wagner' and expected text 'Brenden Wagner' are matched 

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Software Engineer' and expected text 'Software Engineer' are matched 

2018-11-21 11:49:09 - [MESSAGE][PASSED] - Actual text 'Software Engineer' and expected text 'Software Engineer' are matched 

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:09 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:10 - [MESSAGE][PASSED] - Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - verifyMatch: Actual text '28' and expected text '28' are matched 

2018-11-21 11:49:10 - [MESSAGE][PASSED] - Actual text '28' and expected text '28' are matched 

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2011/06/07' and expected text '2011/06/07' are matched 

2018-11-21 11:49:10 - [MESSAGE][PASSED] - Actual text '2011/06/07' and expected text '2011/06/07' are matched 

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$206,850' and expected text '$206,850' are matched 

2018-11-21 11:49:10 - [MESSAGE][PASSED] - Actual text '$206,850' and expected text '$206,850' are matched 

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$372,000' and expected text '$372,000' are matched 

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Brielle Williamson' and expected text 'Brielle Williamson' are matched 

2018-11-21 11:49:10 - [MESSAGE][PASSED] - Actual text 'Brielle Williamson' and expected text 'Brielle Williamson' are matched 

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:10 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Integration Specialist' and expected text 'Integration Specialist' are matched 

2018-11-21 11:49:11 - [MESSAGE][PASSED] - Actual text 'Integration Specialist' and expected text 'Integration Specialist' are matched 

2018-11-21 11:49:11 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:11 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:11 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'New York' and expected text 'New York' are matched 

2018-11-21 11:49:12 - [MESSAGE][PASSED] - Actual text 'New York' and expected text 'New York' are matched 

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - verifyMatch: Actual text '61' and expected text '61' are matched 

2018-11-21 11:49:12 - [MESSAGE][PASSED] - Actual text '61' and expected text '61' are matched 

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2012/12/02' and expected text '2012/12/02' are matched 

2018-11-21 11:49:12 - [MESSAGE][PASSED] - Actual text '2012/12/02' and expected text '2012/12/02' are matched 

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:12 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$372,000' and expected text '$372,000' are matched 

2018-11-21 11:49:13 - [MESSAGE][PASSED] - Actual text '$372,000' and expected text '$372,000' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$106,450' and expected text '$106,450' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Caesar Vance' and expected text 'Caesar Vance' are matched 

2018-11-21 11:49:13 - [MESSAGE][PASSED] - Actual text 'Caesar Vance' and expected text 'Caesar Vance' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Pre-Sales Support' and expected text 'Pre-Sales Support' are matched 

2018-11-21 11:49:13 - [MESSAGE][PASSED] - Actual text 'Pre-Sales Support' and expected text 'Pre-Sales Support' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'New York' and expected text 'New York' are matched 

2018-11-21 11:49:13 - [MESSAGE][PASSED] - Actual text 'New York' and expected text 'New York' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - verifyMatch: Actual text '21' and expected text '21' are matched 

2018-11-21 11:49:13 - [MESSAGE][PASSED] - Actual text '21' and expected text '21' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2011/12/12' and expected text '2011/12/12' are matched 

2018-11-21 11:49:13 - [MESSAGE][PASSED] - Actual text '2011/12/12' and expected text '2011/12/12' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$106,450' and expected text '$106,450' are matched 

2018-11-21 11:49:13 - [MESSAGE][PASSED] - Actual text '$106,450' and expected text '$106,450' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$433,060' and expected text '$433,060' are matched 

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:13 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Cedric Kelly' and expected text 'Cedric Kelly' are matched 

2018-11-21 11:49:14 - [MESSAGE][PASSED] - Actual text 'Cedric Kelly' and expected text 'Cedric Kelly' are matched 

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Senior Javascript Developer' and expected text 'Senior Javascript Developer' are matched 

2018-11-21 11:49:14 - [MESSAGE][PASSED] - Actual text 'Senior Javascript Developer' and expected text 'Senior Javascript Developer' are matched 

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Edinburgh' and expected text 'Edinburgh' are matched 

2018-11-21 11:49:14 - [MESSAGE][PASSED] - Actual text 'Edinburgh' and expected text 'Edinburgh' are matched 

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - verifyMatch: Actual text '22' and expected text '22' are matched 

2018-11-21 11:49:14 - [MESSAGE][PASSED] - Actual text '22' and expected text '22' are matched 

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:14 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2012/03/29' and expected text '2012/03/29' are matched 

2018-11-21 11:49:15 - [MESSAGE][PASSED] - Actual text '2012/03/29' and expected text '2012/03/29' are matched 

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$433,060' and expected text '$433,060' are matched 

2018-11-21 11:49:15 - [MESSAGE][PASSED] - Actual text '$433,060' and expected text '$433,060' are matched 

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$470,600' and expected text '$470,600' are matched 

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Charde Marshall' and expected text 'Charde Marshall' are matched 

2018-11-21 11:49:15 - [MESSAGE][PASSED] - Actual text 'Charde Marshall' and expected text 'Charde Marshall' are matched 

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:15 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Regional Director' and expected text 'Regional Director' are matched 

2018-11-21 11:49:16 - [MESSAGE][PASSED] - Actual text 'Regional Director' and expected text 'Regional Director' are matched 

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:16 - [MESSAGE][PASSED] - Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - verifyMatch: Actual text '36' and expected text '36' are matched 

2018-11-21 11:49:16 - [MESSAGE][PASSED] - Actual text '36' and expected text '36' are matched 

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2008/10/16' and expected text '2008/10/16' are matched 

2018-11-21 11:49:16 - [MESSAGE][PASSED] - Actual text '2008/10/16' and expected text '2008/10/16' are matched 

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$470,600' and expected text '$470,600' are matched 

2018-11-21 11:49:16 - [MESSAGE][PASSED] - Actual text '$470,600' and expected text '$470,600' are matched 

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - column_table = row_table.get(row).findElements(org.openqa.selenium.By.tagName("td")): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - column_count = column_table.size(): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - println("No of cell in rows : " + row + " are " + column_count): null

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - For ([column = 0, column < column_count, (column++)]): Actual text '$205,500' and expected text '$205,500' are matched 

2018-11-21 11:49:16 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Colleen Hurst' and expected text 'Colleen Hurst' are matched 

2018-11-21 11:49:17 - [MESSAGE][PASSED] - Actual text 'Colleen Hurst' and expected text 'Colleen Hurst' are matched 

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'Javascript Developer' and expected text 'Javascript Developer' are matched 

2018-11-21 11:49:17 - [MESSAGE][PASSED] - Actual text 'Javascript Developer' and expected text 'Javascript Developer' are matched 

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - verifyMatch: Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:17 - [MESSAGE][PASSED] - Actual text 'San Francisco' and expected text 'San Francisco' are matched 

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - verifyMatch: Actual text '39' and expected text '39' are matched 

2018-11-21 11:49:17 - [MESSAGE][PASSED] - Actual text '39' and expected text '39' are matched 

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - verifyMatch: Actual text '2009/09/15' and expected text '2009/09/15' are matched 

2018-11-21 11:49:17 - [MESSAGE][PASSED] - Actual text '2009/09/15' and expected text '2009/09/15' are matched 

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - cell_text = column_table.get(column).getText(): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - Statement - println("Cell value of row : " + row + " and " + column + " is " + cell_text): null

2018-11-21 11:49:17 - [TEST_STEP][PASSED] - verifyMatch: Actual text '$205,500' and expected text '$205,500' are matched 

2018-11-21 11:49:18 - [MESSAGE][PASSED] - Actual text '$205,500' and expected text '$205,500' are matched]]></system-out>
         <system-err><![CDATA[2018-11-21 11:48:52 - [TEST_CASE][FAILED] - Test Cases/Demo/DataTable: Test Cases/Demo/DataTable FAILED because (of) (Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text 'London' and expected text 'Saigon' (Root cause: Actual text 'London' and expected text 'Saigon' are not matched)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:61)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:46)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at Script1542702721131.run(Script1542702721131.groovy:51)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1542775725530.run(TempTestSuite1542775725530.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-err>
      </testcase>
      <system-out><![CDATA[2018-11-21 11:48:51 - [TEST_SUITE][FAILED] - Demo: Test Cases/Demo/DataTable FAILED because (of) (Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text 'London' and expected text 'Saigon' (Root cause: Actual text 'London' and expected text 'Saigon' are not matched)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:61)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:46)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at Script1542702721131.run(Script1542702721131.groovy:51)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1542775725530.run(TempTestSuite1542775725530.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-out>
      <system-err><![CDATA[2018-11-21 11:48:51 - [TEST_SUITE][FAILED] - Demo: Test Cases/Demo/DataTable FAILED because (of) (Stack trace: com.kms.katalon.core.exception.StepFailedException: Unable to verify match between actual text 'London' and expected text 'Saigon' (Root cause: Actual text 'London' and expected text 'Saigon' are not matched)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:32)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy)
	at com.kms.katalon.core.keyword.internal.KeywordMain.runKeyword(KeywordMain.groovy:56)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.verifyMatch(VerifyMatchKeyword.groovy:61)
	at com.kms.katalon.core.keyword.builtin.VerifyMatchKeyword.execute(VerifyMatchKeyword.groovy:46)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:53)
	at com.kms.katalon.core.keyword.BuiltinKeywords.verifyMatch(BuiltinKeywords.groovy:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)
	at groovy.lang.MetaClassImpl.invokeStaticMethod(MetaClassImpl.java:1469)
	at org.codehaus.groovy.runtime.callsite.StaticMetaClassSite.call(StaticMetaClassSite.java:53)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)
	at Script1542702721131.run(Script1542702721131.groovy:51)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:183)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:108)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:294)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:264)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:256)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:200)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:129)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:112)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:81)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:142)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)
	at TempTestSuite1542775725530.run(TempTestSuite1542775725530.groovy:36)
	at groovy.lang.GroovyShell.runScriptOrMainOrTestOrRunnable(GroovyShell.java:263)
	at groovy.lang.GroovyShell.run(GroovyShell.java:518)
	at groovy.lang.GroovyShell.run(GroovyShell.java:507)
	at groovy.ui.GroovyMain.processOnce(GroovyMain.java:653)
	at groovy.ui.GroovyMain.run(GroovyMain.java:384)
	at groovy.ui.GroovyMain.process(GroovyMain.java:370)
	at groovy.ui.GroovyMain.processArgs(GroovyMain.java:129)
	at groovy.ui.GroovyMain.main(GroovyMain.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.tools.GroovyStarter.rootLoader(GroovyStarter.java:109)
	at org.codehaus.groovy.tools.GroovyStarter.main(GroovyStarter.java:131)
)]]></system-err>
   </testsuite>
</testsuites>
