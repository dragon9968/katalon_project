{"devicePlatform":"","logFolder":"E:\\WORK\\Katalon_CURA Testproject\\Reports\\Demo\\20181122_153237","runData":{"hostName":"longnguyen - LONGNGUYEN.vodc.lan","os":"Windows 10 64bit","katalonVersion":"5.8.6.1","browser":"Chrome 70.0.3538.102","dbServerInfo":"Microsoft SQL Server 12.00.4100","hostAddress":"10.10.10.62","sessionId":"323c698d2934b2ca2861ae02d8733f64","seleniumVersion":"3.7.1","proxyInformation":"ProxyInformation{proxyOption\u003dNO_PROXY, proxyServerType\u003dHTTP, password\u003d, proxyServerAddress\u003d, proxyServerPort\u003d0}","platform":"Windows 10"},"type":"TEST_SUITE","name":"Demo","id":"Test Suites/Demo","source":"","message":"Test Cases/Demo/DataTable","description":"","startTime":1542875561906,"endTime":1542875639571,"childRecords":[{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/DataTable","id":"Test Cases/Demo/DataTable","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\DataTable.tc","message":"Test Cases/Demo/DataTable","description":"","startTime":1542875562755,"endTime":1542875639571,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1542875562804,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1542875562814,"endTime":1542875562952,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1542875562869,"endTime":1542875562906,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1542875562908,"endTime":1542875562940,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d 1","description":"","startTime":1542875563521,"endTime":1542875563526,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1542875563539,"endTime":1542875568337,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1542875568336,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1542875568340,"endTime":1542875569897,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1542875569896,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1542875569905,"endTime":1542875571264,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1542875571262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"scrollToPosition","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","description":"","startTime":1542875571269,"endTime":1542875571480,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","startTime":1542875571479,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - driver \u003d com.kms.katalon.core.webui.driver.DriverFactory.getWebDriver()","description":"","startTime":1542875571480,"endTime":1542875571492,"childRecords":[],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - pagination \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\"example_paginate\"]/span/a\"))","description":"","startTime":1542875571493,"endTime":1542875571708,"childRecords":[],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - size \u003d pagination.size()","description":"","startTime":1542875571709,"endTime":1542875571711,"childRecords":[],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - out.println(\"Total Pages of this site is :\" + size)","description":"","startTime":1542875571711,"endTime":1542875571724,"childRecords":[],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([i \u003d 1, i \u003c\u003d size, (i++)])","description":"","startTime":1542875571725,"endTime":1542875639571,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1542875571731,"endTime":1542875605590,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1542875571733,"endTime":1542875571981,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1542875571982,"endTime":1542875573990,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1542875573991,"endTime":1542875574051,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1542875574052,"endTime":1542875574053,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1542875574053,"endTime":1542875574063,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1542875574063,"endTime":1542875605590,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875574066,"endTime":1542875574234,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875574235,"endTime":1542875574237,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875574237,"endTime":1542875574238,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1542875574238,"endTime":1542875577684,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875574239,"endTime":1542875574407,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875574407,"endTime":1542875574408,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1542875574408,"endTime":1542875575789,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1542875575789,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875575790,"endTime":1542875575921,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875575922,"endTime":1542875575923,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1542875575923,"endTime":1542875576119,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1542875576118,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875576119,"endTime":1542875576191,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875576191,"endTime":1542875576192,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1542875576194,"endTime":1542875576613,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1542875576613,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875576613,"endTime":1542875576818,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875576819,"endTime":1542875576820,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1542875576820,"endTime":1542875577108,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1542875577107,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875577108,"endTime":1542875577203,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875577203,"endTime":1542875577204,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1542875577204,"endTime":1542875577402,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1542875577401,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875577403,"endTime":1542875577456,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875577456,"endTime":1542875577457,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1542875577457,"endTime":1542875577684,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1542875577684,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875577685,"endTime":1542875577685,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875577685,"endTime":1542875577687,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875577687,"endTime":1542875577719,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875577719,"endTime":1542875577720,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875577720,"endTime":1542875577720,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1542875577721,"endTime":1542875582851,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875577721,"endTime":1542875578049,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875578049,"endTime":1542875578050,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1542875578050,"endTime":1542875578581,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1542875578580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875578581,"endTime":1542875578751,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875578751,"endTime":1542875578752,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1542875578752,"endTime":1542875579139,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1542875579136,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875579140,"endTime":1542875579398,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875579399,"endTime":1542875579400,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542875579400,"endTime":1542875579656,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542875579656,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875579656,"endTime":1542875580361,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875580362,"endTime":1542875580364,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1542875580364,"endTime":1542875581573,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1542875581572,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875581574,"endTime":1542875581829,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875581830,"endTime":1542875581831,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1542875581832,"endTime":1542875582093,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1542875582093,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875582093,"endTime":1542875582377,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875582378,"endTime":1542875582378,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1542875582379,"endTime":1542875582851,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1542875582850,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875582851,"endTime":1542875582851,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875582852,"endTime":1542875582852,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875582852,"endTime":1542875583231,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875583231,"endTime":1542875583231,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875583232,"endTime":1542875583232,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1542875583232,"endTime":1542875584991,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875583233,"endTime":1542875583430,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875583430,"endTime":1542875583431,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1542875583431,"endTime":1542875583643,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1542875583643,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875583643,"endTime":1542875583748,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875583749,"endTime":1542875583750,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1542875583750,"endTime":1542875583795,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1542875583795,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875583796,"endTime":1542875583943,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875583943,"endTime":1542875583944,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542875583944,"endTime":1542875584226,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542875584226,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875584227,"endTime":1542875584273,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875584274,"endTime":1542875584274,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1542875584274,"endTime":1542875584510,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1542875584510,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875584510,"endTime":1542875584571,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875584571,"endTime":1542875584572,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1542875584572,"endTime":1542875584764,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1542875584764,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875584764,"endTime":1542875584795,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875584795,"endTime":1542875584796,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1542875584796,"endTime":1542875584991,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1542875584990,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875584991,"endTime":1542875584993,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875584993,"endTime":1542875584993,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875584994,"endTime":1542875585027,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875585028,"endTime":1542875585029,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875585029,"endTime":1542875585029,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1542875585030,"endTime":1542875586111,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875585030,"endTime":1542875585065,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875585068,"endTime":1542875585068,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1542875585069,"endTime":1542875585250,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1542875585250,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875585251,"endTime":1542875585279,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875585279,"endTime":1542875585279,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1542875585280,"endTime":1542875585301,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1542875585301,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875585301,"endTime":1542875585441,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875585441,"endTime":1542875585442,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542875585442,"endTime":1542875585528,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542875585528,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875585528,"endTime":1542875585563,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875585563,"endTime":1542875585565,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1542875585565,"endTime":1542875585815,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1542875585815,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875585815,"endTime":1542875585852,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875585853,"endTime":1542875585853,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1542875585853,"endTime":1542875585940,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1542875585940,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875585941,"endTime":1542875586054,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875586055,"endTime":1542875586055,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1542875586055,"endTime":1542875586111,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1542875586110,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875586111,"endTime":1542875586111,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875586111,"endTime":1542875586112,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875586112,"endTime":1542875586141,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875586141,"endTime":1542875586142,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875586142,"endTime":1542875586142,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1542875586142,"endTime":1542875590035,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875586143,"endTime":1542875586308,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875586309,"endTime":1542875586309,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1542875586309,"endTime":1542875586346,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1542875586346,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875586346,"endTime":1542875586388,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875586388,"endTime":1542875586389,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1542875586389,"endTime":1542875586575,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1542875586575,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875586575,"endTime":1542875586613,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875586614,"endTime":1542875586614,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542875586614,"endTime":1542875586646,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542875586646,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875586646,"endTime":1542875587303,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875587303,"endTime":1542875587304,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1542875587304,"endTime":1542875588907,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1542875588907,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875588907,"endTime":1542875589145,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875589145,"endTime":1542875589146,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1542875589146,"endTime":1542875589576,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1542875589575,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875589576,"endTime":1542875589763,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875589763,"endTime":1542875589763,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1542875589764,"endTime":1542875590035,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1542875590035,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875590036,"endTime":1542875590037,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875590037,"endTime":1542875590037,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875590037,"endTime":1542875590303,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875590303,"endTime":1542875590304,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875590304,"endTime":1542875590304,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1542875590305,"endTime":1542875592198,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875590305,"endTime":1542875590539,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875590539,"endTime":1542875590540,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1542875590540,"endTime":1542875590813,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1542875590812,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875590813,"endTime":1542875590940,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875590940,"endTime":1542875590941,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1542875590941,"endTime":1542875591077,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1542875591076,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875591077,"endTime":1542875591245,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875591245,"endTime":1542875591246,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542875591246,"endTime":1542875591363,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542875591363,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875591363,"endTime":1542875591578,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875591578,"endTime":1542875591579,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1542875591579,"endTime":1542875591648,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1542875591648,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875591648,"endTime":1542875591856,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875591856,"endTime":1542875591856,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1542875591857,"endTime":1542875591912,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1542875591912,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875591912,"endTime":1542875592120,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875592120,"endTime":1542875592120,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1542875592120,"endTime":1542875592198,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1542875592197,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875592198,"endTime":1542875592198,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875592198,"endTime":1542875592199,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875592199,"endTime":1542875592474,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875592474,"endTime":1542875592474,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875592475,"endTime":1542875592475,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1542875592475,"endTime":1542875595100,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875592476,"endTime":1542875592518,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875592518,"endTime":1542875592519,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1542875592519,"endTime":1542875592731,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1542875592731,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875592731,"endTime":1542875592815,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875592815,"endTime":1542875592817,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1542875592818,"endTime":1542875593065,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1542875593065,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875593065,"endTime":1542875593249,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875593250,"endTime":1542875593251,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542875593251,"endTime":1542875593610,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542875593610,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875593610,"endTime":1542875593833,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875593834,"endTime":1542875593835,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1542875593836,"endTime":1542875594078,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1542875594078,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875594078,"endTime":1542875594278,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875594279,"endTime":1542875594279,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1542875594279,"endTime":1542875594718,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1542875594717,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875594718,"endTime":1542875594848,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875594848,"endTime":1542875594849,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1542875594849,"endTime":1542875595099,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1542875595099,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875595100,"endTime":1542875595101,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875595101,"endTime":1542875595101,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875595101,"endTime":1542875595328,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875595328,"endTime":1542875595329,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875595329,"endTime":1542875595329,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1542875595329,"endTime":1542875599257,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875595330,"endTime":1542875595383,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875595384,"endTime":1542875595386,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1542875595386,"endTime":1542875595963,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1542875595963,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875595963,"endTime":1542875596129,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875596129,"endTime":1542875596130,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1542875596130,"endTime":1542875596487,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1542875596487,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875596487,"endTime":1542875596734,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875596735,"endTime":1542875596735,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1542875596735,"endTime":1542875597318,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1542875597317,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875597318,"endTime":1542875597375,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875597375,"endTime":1542875597378,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1542875597378,"endTime":1542875597894,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1542875597893,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875597894,"endTime":1542875598015,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875598015,"endTime":1542875598015,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1542875598016,"endTime":1542875598455,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1542875598454,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875598455,"endTime":1542875598615,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875598615,"endTime":1542875598616,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1542875598618,"endTime":1542875599257,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1542875599257,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875599257,"endTime":1542875599257,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875599257,"endTime":1542875599259,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875599259,"endTime":1542875599638,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875599638,"endTime":1542875599639,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875599639,"endTime":1542875599639,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1542875599639,"endTime":1542875603383,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875599639,"endTime":1542875600078,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875600078,"endTime":1542875600079,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1542875600079,"endTime":1542875600382,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1542875600382,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875600384,"endTime":1542875600642,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875600642,"endTime":1542875600642,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1542875600643,"endTime":1542875601205,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1542875601204,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875601205,"endTime":1542875601275,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875601276,"endTime":1542875601276,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542875601276,"endTime":1542875601862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542875601862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875601863,"endTime":1542875602124,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875602125,"endTime":1542875602125,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1542875602125,"endTime":1542875602628,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1542875602627,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875602628,"endTime":1542875602845,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875602846,"endTime":1542875602846,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1542875602846,"endTime":1542875603148,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1542875603148,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875603149,"endTime":1542875603272,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875603272,"endTime":1542875603273,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1542875603273,"endTime":1542875603383,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1542875603382,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875603383,"endTime":1542875603384,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875603384,"endTime":1542875603384,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875603384,"endTime":1542875603417,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875603417,"endTime":1542875603418,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875603418,"endTime":1542875603418,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1542875603418,"endTime":1542875605589,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875603418,"endTime":1542875603707,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875603707,"endTime":1542875603708,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1542875603708,"endTime":1542875604284,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1542875604283,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875604284,"endTime":1542875604347,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875604347,"endTime":1542875604347,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1542875604348,"endTime":1542875604532,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1542875604532,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875604532,"endTime":1542875604731,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875604732,"endTime":1542875604732,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542875604732,"endTime":1542875604816,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542875604815,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875604817,"endTime":1542875604849,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875604850,"endTime":1542875604851,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1542875604851,"endTime":1542875604923,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1542875604923,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875604924,"endTime":1542875605131,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875605131,"endTime":1542875605132,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1542875605132,"endTime":1542875605356,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1542875605355,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875605356,"endTime":1542875605395,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875605395,"endTime":1542875605396,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1542875605396,"endTime":1542875605589,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1542875605589,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875605589,"endTime":1542875605590,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875605590,"endTime":1542875605590,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1542875605590,"endTime":1542875623205,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1542875605591,"endTime":1542875605909,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1542875605909,"endTime":1542875607910,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1542875607910,"endTime":1542875607942,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1542875607943,"endTime":1542875607943,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1542875607943,"endTime":1542875607944,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1542875607944,"endTime":1542875623205,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875607944,"endTime":1542875608141,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875608141,"endTime":1542875608142,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875608142,"endTime":1542875608142,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1542875608142,"endTime":1542875609189,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875608142,"endTime":1542875608191,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875608192,"endTime":1542875608192,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","description":"","startTime":1542875608192,"endTime":1542875608228,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","startTime":1542875608228,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875608228,"endTime":1542875608349,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875608351,"endTime":1542875608352,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","description":"","startTime":1542875608352,"endTime":1542875608448,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","startTime":1542875608447,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875608448,"endTime":1542875608480,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875608480,"endTime":1542875608480,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1542875608481,"endTime":1542875608653,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1542875608653,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875608653,"endTime":1542875608704,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875608704,"endTime":1542875608704,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","description":"","startTime":1542875608704,"endTime":1542875608756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","startTime":1542875608756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875608756,"endTime":1542875608907,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875608907,"endTime":1542875608908,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","description":"","startTime":1542875608908,"endTime":1542875608956,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","startTime":1542875608956,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875608956,"endTime":1542875609000,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875609000,"endTime":1542875609001,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1542875609001,"endTime":1542875609189,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","startTime":1542875609189,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875609190,"endTime":1542875609190,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875609190,"endTime":1542875609191,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875609192,"endTime":1542875609218,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875609218,"endTime":1542875609218,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875609218,"endTime":1542875609219,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1542875609219,"endTime":1542875610323,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875609219,"endTime":1542875609254,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875609254,"endTime":1542875609255,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","description":"","startTime":1542875609255,"endTime":1542875609457,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","startTime":1542875609457,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875609457,"endTime":1542875609491,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875609492,"endTime":1542875609492,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1542875609492,"endTime":1542875609697,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1542875609697,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875609698,"endTime":1542875609731,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875609732,"endTime":1542875609732,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1542875609732,"endTime":1542875609762,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1542875609762,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875609762,"endTime":1542875609910,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875609910,"endTime":1542875609911,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1542875609911,"endTime":1542875609995,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1542875609995,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875609995,"endTime":1542875610028,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875610028,"endTime":1542875610029,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","description":"","startTime":1542875610029,"endTime":1542875610262,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","startTime":1542875610262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875610262,"endTime":1542875610293,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875610293,"endTime":1542875610294,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1542875610294,"endTime":1542875610323,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","startTime":1542875610322,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875610323,"endTime":1542875610323,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875610323,"endTime":1542875610323,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875610324,"endTime":1542875610529,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875610529,"endTime":1542875610530,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875610530,"endTime":1542875610530,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1542875610530,"endTime":1542875611570,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875610530,"endTime":1542875610568,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875610569,"endTime":1542875610569,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","description":"","startTime":1542875610569,"endTime":1542875610759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","startTime":1542875610759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875610759,"endTime":1542875610807,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875610807,"endTime":1542875610807,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","description":"","startTime":1542875610807,"endTime":1542875610998,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","startTime":1542875610998,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875610999,"endTime":1542875611047,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875611048,"endTime":1542875611048,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542875611048,"endTime":1542875611075,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542875611075,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875611075,"endTime":1542875611247,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875611248,"endTime":1542875611248,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","description":"","startTime":1542875611248,"endTime":1542875611279,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","startTime":1542875611278,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875611279,"endTime":1542875611310,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875611310,"endTime":1542875611311,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","description":"","startTime":1542875611311,"endTime":1542875611495,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","startTime":1542875611495,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875611495,"endTime":1542875611537,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875611538,"endTime":1542875611538,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1542875611538,"endTime":1542875611570,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","startTime":1542875611570,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875611570,"endTime":1542875611570,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875611570,"endTime":1542875611571,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875611571,"endTime":1542875611674,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875611674,"endTime":1542875611675,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875611675,"endTime":1542875611675,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1542875611675,"endTime":1542875612797,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875611675,"endTime":1542875611762,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875611763,"endTime":1542875611763,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","description":"","startTime":1542875611764,"endTime":1542875611811,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","startTime":1542875611811,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875611811,"endTime":1542875611844,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875611844,"endTime":1542875611844,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1542875611845,"endTime":1542875612049,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1542875612048,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875612049,"endTime":1542875612088,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875612088,"endTime":1542875612088,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1542875612089,"endTime":1542875612279,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1542875612279,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875612279,"endTime":1542875612310,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875612311,"endTime":1542875612311,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","description":"","startTime":1542875612311,"endTime":1542875612338,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","startTime":1542875612338,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875612338,"endTime":1542875612461,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875612461,"endTime":1542875612462,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","description":"","startTime":1542875612462,"endTime":1542875612548,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","startTime":1542875612548,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875612548,"endTime":1542875612580,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875612580,"endTime":1542875612581,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1542875612581,"endTime":1542875612797,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","startTime":1542875612797,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875612798,"endTime":1542875612798,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875612798,"endTime":1542875612798,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875612798,"endTime":1542875612831,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875612832,"endTime":1542875612832,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875612832,"endTime":1542875612832,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1542875612833,"endTime":1542875615273,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875612833,"endTime":1542875612908,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875612908,"endTime":1542875612909,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","description":"","startTime":1542875612909,"endTime":1542875613073,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","startTime":1542875613073,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875613073,"endTime":1542875613106,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875613106,"endTime":1542875613107,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","description":"","startTime":1542875613107,"endTime":1542875613369,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","startTime":1542875613369,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875613369,"endTime":1542875613429,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875613429,"endTime":1542875613430,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1542875613430,"endTime":1542875613846,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1542875613846,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875613846,"endTime":1542875613922,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875613922,"endTime":1542875613923,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","description":"","startTime":1542875613923,"endTime":1542875614369,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","startTime":1542875614369,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875614369,"endTime":1542875614490,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875614490,"endTime":1542875614490,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","description":"","startTime":1542875614491,"endTime":1542875614879,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","startTime":1542875614879,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875614879,"endTime":1542875614928,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875614928,"endTime":1542875614928,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1542875614929,"endTime":1542875615273,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","startTime":1542875615273,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875615273,"endTime":1542875615274,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875615274,"endTime":1542875615274,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875615274,"endTime":1542875615316,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875615316,"endTime":1542875615316,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875615317,"endTime":1542875615318,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1542875615318,"endTime":1542875616945,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875615319,"endTime":1542875615355,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875615355,"endTime":1542875615356,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","description":"","startTime":1542875615356,"endTime":1542875615528,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","startTime":1542875615528,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875615528,"endTime":1542875615563,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875615564,"endTime":1542875615564,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","description":"","startTime":1542875615564,"endTime":1542875615606,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","startTime":1542875615606,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875615606,"endTime":1542875615822,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875615822,"endTime":1542875615822,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542875615823,"endTime":1542875615857,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542875615856,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875615857,"endTime":1542875616024,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875616025,"endTime":1542875616025,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1542875616025,"endTime":1542875616064,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1542875616064,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875616065,"endTime":1542875616101,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875616101,"endTime":1542875616101,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","description":"","startTime":1542875616102,"endTime":1542875616881,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","startTime":1542875616881,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875616882,"endTime":1542875616911,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875616911,"endTime":1542875616911,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1542875616912,"endTime":1542875616944,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","startTime":1542875616944,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875616945,"endTime":1542875616945,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875616945,"endTime":1542875616945,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875616946,"endTime":1542875617000,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875617001,"endTime":1542875617001,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875617001,"endTime":1542875617002,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1542875617002,"endTime":1542875618435,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875617002,"endTime":1542875617137,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875617137,"endTime":1542875617138,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","description":"","startTime":1542875617138,"endTime":1542875617164,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","startTime":1542875617164,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875617164,"endTime":1542875617193,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875617193,"endTime":1542875617193,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","description":"","startTime":1542875617194,"endTime":1542875617267,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","startTime":1542875617267,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875617267,"endTime":1542875617417,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875617417,"endTime":1542875617417,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542875617417,"endTime":1542875617450,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542875617450,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875617450,"endTime":1542875617903,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875617903,"endTime":1542875617904,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","description":"","startTime":1542875617904,"endTime":1542875617945,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","startTime":1542875617945,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875617945,"endTime":1542875617980,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875617980,"endTime":1542875617981,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","description":"","startTime":1542875617981,"endTime":1542875618198,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","startTime":1542875618198,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875618199,"endTime":1542875618399,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875618399,"endTime":1542875618400,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1542875618400,"endTime":1542875618434,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","startTime":1542875618434,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875618435,"endTime":1542875618435,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875618435,"endTime":1542875618435,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875618436,"endTime":1542875618590,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875618590,"endTime":1542875618590,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875618591,"endTime":1542875618591,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1542875618591,"endTime":1542875621112,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875618591,"endTime":1542875618671,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875618671,"endTime":1542875618671,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","description":"","startTime":1542875618672,"endTime":1542875619228,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","startTime":1542875619228,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875619228,"endTime":1542875619980,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875619980,"endTime":1542875619980,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1542875619981,"endTime":1542875620368,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1542875620368,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875620369,"endTime":1542875620406,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875620407,"endTime":1542875620408,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1542875620408,"endTime":1542875620595,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1542875620595,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875620595,"endTime":1542875620626,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875620627,"endTime":1542875620627,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1542875620627,"endTime":1542875620658,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1542875620658,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875620660,"endTime":1542875620841,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875620842,"endTime":1542875620842,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","description":"","startTime":1542875620842,"endTime":1542875620873,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","startTime":1542875620872,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875620873,"endTime":1542875620896,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875620897,"endTime":1542875620897,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1542875620897,"endTime":1542875621112,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","startTime":1542875621111,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875621112,"endTime":1542875621112,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875621112,"endTime":1542875621113,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875621113,"endTime":1542875621139,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875621139,"endTime":1542875621139,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875621140,"endTime":1542875621140,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1542875621140,"endTime":1542875622165,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875621140,"endTime":1542875621177,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875621178,"endTime":1542875621178,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","description":"","startTime":1542875621178,"endTime":1542875621370,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","startTime":1542875621370,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875621371,"endTime":1542875621399,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875621399,"endTime":1542875621400,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","description":"","startTime":1542875621400,"endTime":1542875621422,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","startTime":1542875621422,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875621422,"endTime":1542875621447,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875621447,"endTime":1542875621447,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542875621448,"endTime":1542875621655,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542875621655,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875621655,"endTime":1542875621692,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875621692,"endTime":1542875621693,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1542875621693,"endTime":1542875621731,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1542875621731,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875621732,"endTime":1542875621901,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875621901,"endTime":1542875621902,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","description":"","startTime":1542875621902,"endTime":1542875621934,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","startTime":1542875621934,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875621935,"endTime":1542875621979,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875621979,"endTime":1542875621980,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1542875621980,"endTime":1542875622165,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","startTime":1542875622165,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875622166,"endTime":1542875622166,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875622166,"endTime":1542875622166,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875622167,"endTime":1542875622190,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875622190,"endTime":1542875622190,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875622191,"endTime":1542875622191,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1542875622191,"endTime":1542875623204,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875622191,"endTime":1542875622222,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875622222,"endTime":1542875622222,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","description":"","startTime":1542875622223,"endTime":1542875622438,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","startTime":1542875622438,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875622439,"endTime":1542875622467,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875622467,"endTime":1542875622468,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","description":"","startTime":1542875622468,"endTime":1542875622492,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","startTime":1542875622492,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875622492,"endTime":1542875622597,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875622597,"endTime":1542875622597,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542875622597,"endTime":1542875622689,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542875622689,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875622689,"endTime":1542875622715,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875622715,"endTime":1542875622716,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1542875622716,"endTime":1542875622792,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1542875622792,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875622792,"endTime":1542875622871,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875622871,"endTime":1542875622871,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","description":"","startTime":1542875622872,"endTime":1542875622941,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","startTime":1542875622941,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875622941,"endTime":1542875623087,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875623087,"endTime":1542875623087,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1542875623087,"endTime":1542875623204,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","startTime":1542875623204,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875623204,"endTime":1542875623204,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875623205,"endTime":1542875623205,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1542875623205,"endTime":1542875636206,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1542875623205,"endTime":1542875623492,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1542875623492,"endTime":1542875625493,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1542875625493,"endTime":1542875625557,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1542875625557,"endTime":1542875625557,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1542875625558,"endTime":1542875625558,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1542875625558,"endTime":1542875636206,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875625558,"endTime":1542875625594,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875625594,"endTime":1542875625594,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875625595,"endTime":1542875625595,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1542875625595,"endTime":1542875627095,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875625595,"endTime":1542875625638,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875625638,"endTime":1542875625638,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","description":"","startTime":1542875625638,"endTime":1542875625798,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","startTime":1542875625798,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875625798,"endTime":1542875626023,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875626023,"endTime":1542875626023,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1542875626023,"endTime":1542875626291,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1542875626291,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875626291,"endTime":1542875626489,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875626490,"endTime":1542875626490,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","description":"","startTime":1542875626490,"endTime":1542875626709,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","startTime":1542875626709,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875626710,"endTime":1542875626812,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875626812,"endTime":1542875626812,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1542875626812,"endTime":1542875626839,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1542875626839,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875626839,"endTime":1542875626930,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875626930,"endTime":1542875626931,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","description":"","startTime":1542875626931,"endTime":1542875627042,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","startTime":1542875627042,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875627042,"endTime":1542875627070,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875627070,"endTime":1542875627071,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1542875627071,"endTime":1542875627095,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","startTime":1542875627095,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875627095,"endTime":1542875627096,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875627096,"endTime":1542875627096,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875627096,"endTime":1542875627200,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875627200,"endTime":1542875627200,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875627200,"endTime":1542875627201,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1542875627201,"endTime":1542875628064,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875627201,"endTime":1542875627275,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875627275,"endTime":1542875627275,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","description":"","startTime":1542875627275,"endTime":1542875627315,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","startTime":1542875627315,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875627315,"endTime":1542875627345,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875627345,"endTime":1542875627346,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","description":"","startTime":1542875627346,"endTime":1542875627545,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","startTime":1542875627545,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875627545,"endTime":1542875627573,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875627574,"endTime":1542875627574,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542875627574,"endTime":1542875627597,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542875627596,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875627597,"endTime":1542875627622,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875627622,"endTime":1542875627622,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1542875627622,"endTime":1542875627807,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1542875627807,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875627807,"endTime":1542875627838,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875627838,"endTime":1542875627839,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","description":"","startTime":1542875627839,"endTime":1542875627871,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","startTime":1542875627871,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875627872,"endTime":1542875628041,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875628041,"endTime":1542875628042,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1542875628042,"endTime":1542875628064,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","startTime":1542875628064,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875628064,"endTime":1542875628064,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875628064,"endTime":1542875628065,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875628065,"endTime":1542875628090,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875628091,"endTime":1542875628091,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875628091,"endTime":1542875628091,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1542875628091,"endTime":1542875629319,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875628092,"endTime":1542875628206,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875628207,"endTime":1542875628207,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","description":"","startTime":1542875628207,"endTime":1542875628293,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","startTime":1542875628293,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875628293,"endTime":1542875628327,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875628327,"endTime":1542875628328,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1542875628328,"endTime":1542875628352,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1542875628352,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875628352,"endTime":1542875628750,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875628750,"endTime":1542875628751,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1542875628751,"endTime":1542875628789,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1542875628789,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875628789,"endTime":1542875628895,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875628895,"endTime":1542875628895,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","description":"","startTime":1542875628895,"endTime":1542875628994,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","startTime":1542875628994,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875628994,"endTime":1542875629040,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875629041,"endTime":1542875629041,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","description":"","startTime":1542875629041,"endTime":1542875629262,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","startTime":1542875629262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875629262,"endTime":1542875629293,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875629294,"endTime":1542875629294,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1542875629294,"endTime":1542875629318,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","startTime":1542875629318,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875629319,"endTime":1542875629319,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875629319,"endTime":1542875629319,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875629319,"endTime":1542875629420,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875629420,"endTime":1542875629420,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875629420,"endTime":1542875629421,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1542875629421,"endTime":1542875630408,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875629421,"endTime":1542875629515,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875629516,"endTime":1542875629516,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","description":"","startTime":1542875629516,"endTime":1542875629538,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","startTime":1542875629538,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875629538,"endTime":1542875629575,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875629575,"endTime":1542875629575,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","description":"","startTime":1542875629575,"endTime":1542875629746,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","startTime":1542875629746,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875629746,"endTime":1542875629780,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875629780,"endTime":1542875629780,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542875629780,"endTime":1542875629807,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542875629807,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875629807,"endTime":1542875629914,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875629914,"endTime":1542875629914,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","description":"","startTime":1542875629915,"endTime":1542875630014,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","startTime":1542875630013,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875630014,"endTime":1542875630045,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875630045,"endTime":1542875630046,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","description":"","startTime":1542875630046,"endTime":1542875630068,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","startTime":1542875630068,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875630068,"endTime":1542875630173,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875630173,"endTime":1542875630174,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1542875630174,"endTime":1542875630408,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","startTime":1542875630408,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875630408,"endTime":1542875630408,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875630408,"endTime":1542875630409,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875630409,"endTime":1542875630431,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875630431,"endTime":1542875630431,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875630431,"endTime":1542875630431,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1542875630432,"endTime":1542875631213,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875630432,"endTime":1542875630455,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875630456,"endTime":1542875630456,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","description":"","startTime":1542875630456,"endTime":1542875630641,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","startTime":1542875630640,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875630641,"endTime":1542875630664,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875630664,"endTime":1542875630664,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","description":"","startTime":1542875630665,"endTime":1542875630698,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","startTime":1542875630697,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875630698,"endTime":1542875630806,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875630807,"endTime":1542875630807,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1542875630807,"endTime":1542875630906,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1542875630906,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875630906,"endTime":1542875630936,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875630936,"endTime":1542875630936,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1542875630936,"endTime":1542875630956,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1542875630956,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875630956,"endTime":1542875630982,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875630982,"endTime":1542875630983,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","description":"","startTime":1542875630983,"endTime":1542875631162,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","startTime":1542875631162,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875631162,"endTime":1542875631192,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875631193,"endTime":1542875631193,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1542875631193,"endTime":1542875631213,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","startTime":1542875631212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875631213,"endTime":1542875631213,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875631213,"endTime":1542875631213,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875631213,"endTime":1542875631395,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875631396,"endTime":1542875631396,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875631396,"endTime":1542875631396,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1542875631396,"endTime":1542875632211,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875631397,"endTime":1542875631430,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875631430,"endTime":1542875631431,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","description":"","startTime":1542875631431,"endTime":1542875631474,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","startTime":1542875631474,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875631475,"endTime":1542875631583,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875631583,"endTime":1542875631584,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1542875631584,"endTime":1542875631680,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1542875631680,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875631680,"endTime":1542875631707,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875631707,"endTime":1542875631707,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1542875631707,"endTime":1542875631728,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1542875631728,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875631728,"endTime":1542875631774,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875631774,"endTime":1542875631774,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","description":"","startTime":1542875631774,"endTime":1542875631959,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","startTime":1542875631959,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875631959,"endTime":1542875631989,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875631990,"endTime":1542875631990,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","description":"","startTime":1542875631990,"endTime":1542875632009,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","startTime":1542875632009,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875632009,"endTime":1542875632049,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875632049,"endTime":1542875632050,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1542875632050,"endTime":1542875632211,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","startTime":1542875632211,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875632211,"endTime":1542875632212,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875632212,"endTime":1542875632212,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875632212,"endTime":1542875632238,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875632238,"endTime":1542875632238,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875632239,"endTime":1542875632239,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1542875632239,"endTime":1542875633231,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875632239,"endTime":1542875632272,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875632272,"endTime":1542875632288,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","description":"","startTime":1542875632288,"endTime":1542875632465,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","startTime":1542875632465,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875632465,"endTime":1542875632497,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875632497,"endTime":1542875632498,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","description":"","startTime":1542875632498,"endTime":1542875632712,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","startTime":1542875632712,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875632712,"endTime":1542875632744,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875632744,"endTime":1542875632745,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1542875632745,"endTime":1542875632770,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1542875632770,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875632770,"endTime":1542875632807,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875632807,"endTime":1542875632807,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","description":"","startTime":1542875632808,"endTime":1542875632987,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","startTime":1542875632987,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875632988,"endTime":1542875633014,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875633014,"endTime":1542875633015,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","description":"","startTime":1542875633015,"endTime":1542875633037,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","startTime":1542875633037,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875633037,"endTime":1542875633137,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875633138,"endTime":1542875633138,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1542875633138,"endTime":1542875633231,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","startTime":1542875633231,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875633231,"endTime":1542875633231,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875633231,"endTime":1542875633232,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875633233,"endTime":1542875633256,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875633256,"endTime":1542875633257,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875633257,"endTime":1542875633257,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1542875633257,"endTime":1542875634279,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875633257,"endTime":1542875633284,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875633284,"endTime":1542875633284,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","description":"","startTime":1542875633285,"endTime":1542875633464,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","startTime":1542875633464,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875633465,"endTime":1542875633495,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875633495,"endTime":1542875633495,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1542875633495,"endTime":1542875633517,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1542875633516,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875633517,"endTime":1542875633547,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875633548,"endTime":1542875633548,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1542875633548,"endTime":1542875633715,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1542875633715,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875633715,"endTime":1542875633742,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875633742,"endTime":1542875633743,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1542875633743,"endTime":1542875633979,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1542875633979,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875633979,"endTime":1542875634010,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875634010,"endTime":1542875634010,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","description":"","startTime":1542875634010,"endTime":1542875634028,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","startTime":1542875634028,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875634028,"endTime":1542875634093,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875634093,"endTime":1542875634094,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1542875634094,"endTime":1542875634279,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","startTime":1542875634279,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875634279,"endTime":1542875634279,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875634279,"endTime":1542875634280,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875634280,"endTime":1542875634313,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875634313,"endTime":1542875634314,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875634314,"endTime":1542875634316,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1542875634316,"endTime":1542875635073,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875634316,"endTime":1542875634341,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875634341,"endTime":1542875634342,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","description":"","startTime":1542875634342,"endTime":1542875634527,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","startTime":1542875634527,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875634527,"endTime":1542875634554,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875634554,"endTime":1542875634555,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1542875634555,"endTime":1542875634573,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1542875634573,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875634573,"endTime":1542875634602,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875634603,"endTime":1542875634603,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1542875634603,"endTime":1542875634780,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1542875634780,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875634780,"endTime":1542875634811,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875634811,"endTime":1542875634811,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","description":"","startTime":1542875634812,"endTime":1542875634829,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","startTime":1542875634829,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875634829,"endTime":1542875634858,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875634858,"endTime":1542875634859,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","description":"","startTime":1542875634859,"endTime":1542875635028,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","startTime":1542875635027,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875635028,"endTime":1542875635054,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875635055,"endTime":1542875635055,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1542875635055,"endTime":1542875635073,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","startTime":1542875635073,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875635073,"endTime":1542875635073,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875635073,"endTime":1542875635074,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875635074,"endTime":1542875635097,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875635097,"endTime":1542875635097,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875635098,"endTime":1542875635098,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1542875635098,"endTime":1542875636205,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875635098,"endTime":1542875635154,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875635154,"endTime":1542875635154,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","description":"","startTime":1542875635155,"endTime":1542875635315,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","startTime":1542875635315,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875635315,"endTime":1542875635345,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875635345,"endTime":1542875635346,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","description":"","startTime":1542875635346,"endTime":1542875635460,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","startTime":1542875635460,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875635460,"endTime":1542875635543,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875635543,"endTime":1542875635543,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1542875635543,"endTime":1542875635565,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1542875635565,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875635565,"endTime":1542875635598,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875635598,"endTime":1542875635598,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1542875635599,"endTime":1542875635972,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1542875635972,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875635972,"endTime":1542875635999,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875635999,"endTime":1542875636000,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","description":"","startTime":1542875636000,"endTime":1542875636020,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","startTime":1542875636020,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875636020,"endTime":1542875636181,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875636181,"endTime":1542875636181,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1542875636181,"endTime":1542875636205,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","startTime":1542875636205,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875636205,"endTime":1542875636205,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875636206,"endTime":1542875636206,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1542875636206,"endTime":1542875639571,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1542875636206,"endTime":1542875636519,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1542875636519,"endTime":1542875638521,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1542875638521,"endTime":1542875638558,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1542875638558,"endTime":1542875638558,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1542875638558,"endTime":1542875638558,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1542875638559,"endTime":1542875639571,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1542875638559,"endTime":1542875638581,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1542875638582,"endTime":1542875638583,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1542875638583,"endTime":1542875638584,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1542875638584,"endTime":1542875639570,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875638584,"endTime":1542875638622,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875638622,"endTime":1542875638622,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","description":"","startTime":1542875638623,"endTime":1542875638849,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","startTime":1542875638849,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875638849,"endTime":1542875638969,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875638969,"endTime":1542875638969,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","description":"","startTime":1542875638969,"endTime":1542875639070,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","startTime":1542875639070,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875639070,"endTime":1542875639104,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875639104,"endTime":1542875639105,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1542875639105,"endTime":1542875639127,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1542875639127,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875639127,"endTime":1542875639270,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875639270,"endTime":1542875639270,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","description":"","startTime":1542875639271,"endTime":1542875639314,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","startTime":1542875639313,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875639314,"endTime":1542875639344,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875639344,"endTime":1542875639344,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","description":"","startTime":1542875639344,"endTime":1542875639363,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","startTime":1542875639363,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1542875639363,"endTime":1542875639495,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1542875639496,"endTime":1542875639496,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1542875639497,"endTime":1542875639570,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","startTime":1542875639570,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1542875639570,"endTime":1542875639570,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1542875639570,"endTime":1542875639570,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/DataTable","startTime":1542875639571,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}