{"devicePlatform":"","logFolder":"E:\\WORK\\Katalon_CURA Testproject\\Reports\\Demo\\20181126_164803","runData":{"hostName":"longnguyen - LONGNGUYEN.vodc.lan","os":"Windows 10 64bit","katalonVersion":"5.8.6.1","browser":"Chrome 70.0.3538.102","dbServerInfo":"Microsoft SQL Server 12.00.4100","hostAddress":"10.10.10.62","sessionId":"cb99642e09a63645cde209f763603bc5","seleniumVersion":"3.7.1","proxyInformation":"ProxyInformation{proxyOption\u003dNO_PROXY, proxyServerType\u003dHTTP, password\u003d, proxyServerAddress\u003d, proxyServerPort\u003d0}","platform":"Windows 10"},"type":"TEST_SUITE","name":"Demo","id":"Test Suites/Demo","source":"","message":"Test Cases/Demo/DataTable_Normal","description":"","startTime":1543225689031,"endTime":1543225948112,"childRecords":[{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/DataTable_Pagination","id":"Test Cases/Demo/DataTable_Pagination","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\DataTable_Pagination.tc","message":"Test Cases/Demo/DataTable_Pagination","description":"","startTime":1543225690309,"endTime":1543225840398,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543225690396,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225690400,"endTime":1543225690528,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543225690502,"endTime":1543225690522,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225690523,"endTime":1543225690527,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543225691389,"endTime":1543225698044,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543225698043,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543225698044,"endTime":1543225699943,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543225699941,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543225699945,"endTime":1543225701830,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543225701821,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"scrollToPosition","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","description":"","startTime":1543225701831,"endTime":1543225701903,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","startTime":1543225701902,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - driver \u003d com.kms.katalon.core.webui.driver.DriverFactory.getWebDriver()","description":"","startTime":1543225701903,"endTime":1543225701914,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - pagination \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\"example_paginate\"]/span/a\"))","description":"","startTime":1543225701915,"endTime":1543225702186,"childRecords":[],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - size \u003d pagination.size()","description":"","startTime":1543225702187,"endTime":1543225702188,"childRecords":[],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Total Pages of this site is :\" + size)","description":"","startTime":1543225702189,"endTime":1543225702194,"childRecords":[],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d 1","description":"","startTime":1543225702194,"endTime":1543225702197,"childRecords":[],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([i \u003d 1, i \u003c\u003d size, (i++)])","description":"","startTime":1543225702198,"endTime":1543225840397,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543225702198,"endTime":1543225736526,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543225702199,"endTime":1543225702690,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543225702692,"endTime":1543225704701,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543225704702,"endTime":1543225704739,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543225704741,"endTime":1543225704742,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543225704742,"endTime":1543225704750,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543225704750,"endTime":1543225736526,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225704751,"endTime":1543225704866,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225704866,"endTime":1543225704867,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225704868,"endTime":1543225704871,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543225704872,"endTime":1543225709248,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225704872,"endTime":1543225704976,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225704976,"endTime":1543225704977,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1543225704977,"endTime":1543225706382,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1543225706376,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225706383,"endTime":1543225706517,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225706518,"endTime":1543225706518,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543225706520,"endTime":1543225706643,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543225706642,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225706643,"endTime":1543225706680,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225706681,"endTime":1543225706682,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225706682,"endTime":1543225707226,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225707226,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225707226,"endTime":1543225707379,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225707380,"endTime":1543225707380,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1543225707381,"endTime":1543225707929,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1543225707929,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225707930,"endTime":1543225708168,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225708169,"endTime":1543225708169,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1543225708175,"endTime":1543225708623,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1543225708623,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225708625,"endTime":1543225708683,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225708683,"endTime":1543225708684,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543225708684,"endTime":1543225709247,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1543225709246,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225709248,"endTime":1543225709249,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225709249,"endTime":1543225709250,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225709250,"endTime":1543225709542,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225709542,"endTime":1543225709543,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225709543,"endTime":1543225709544,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543225709544,"endTime":1543225711822,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225709546,"endTime":1543225709870,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225709870,"endTime":1543225709871,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1543225709871,"endTime":1543225709921,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1543225709920,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225709921,"endTime":1543225710141,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225710142,"endTime":1543225710142,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1543225710143,"endTime":1543225710287,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1543225710287,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225710288,"endTime":1543225710385,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225710385,"endTime":1543225710386,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225710386,"endTime":1543225710570,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225710570,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225710571,"endTime":1543225710634,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225710634,"endTime":1543225710635,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1543225710636,"endTime":1543225710688,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1543225710687,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225710688,"endTime":1543225710764,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225710765,"endTime":1543225710765,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1543225710766,"endTime":1543225711293,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1543225711293,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225711294,"endTime":1543225711526,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225711527,"endTime":1543225711527,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543225711528,"endTime":1543225711822,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1543225711821,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225711822,"endTime":1543225711823,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225711825,"endTime":1543225711825,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225711826,"endTime":1543225712289,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225712290,"endTime":1543225712292,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225712293,"endTime":1543225712293,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543225712293,"endTime":1543225715885,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225712294,"endTime":1543225712553,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225712553,"endTime":1543225712554,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1543225712554,"endTime":1543225712735,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1543225712735,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225712735,"endTime":1543225712778,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225712779,"endTime":1543225712780,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1543225712780,"endTime":1543225712988,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1543225712987,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225712988,"endTime":1543225713208,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225713208,"endTime":1543225713209,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225713209,"endTime":1543225713343,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225713343,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225713343,"endTime":1543225713517,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225713518,"endTime":1543225713518,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543225713519,"endTime":1543225714704,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543225714703,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225714704,"endTime":1543225715208,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225715208,"endTime":1543225715209,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1543225715209,"endTime":1543225715578,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1543225715577,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225715578,"endTime":1543225715617,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225715617,"endTime":1543225715618,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543225715618,"endTime":1543225715884,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1543225715884,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225715885,"endTime":1543225715885,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225715885,"endTime":1543225715886,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225715886,"endTime":1543225715911,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225715912,"endTime":1543225715912,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225715913,"endTime":1543225715913,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543225715914,"endTime":1543225717448,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225715915,"endTime":1543225715954,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225715955,"endTime":1543225715955,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1543225715956,"endTime":1543225716155,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1543225716155,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225716156,"endTime":1543225716260,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225716260,"endTime":1543225716261,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225716261,"endTime":1543225716401,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225716401,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225716401,"endTime":1543225716465,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225716465,"endTime":1543225716466,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225716466,"endTime":1543225716730,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225716729,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225716730,"endTime":1543225716894,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225716895,"endTime":1543225716896,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1543225716896,"endTime":1543225716932,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1543225716931,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225716932,"endTime":1543225717179,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225717179,"endTime":1543225717180,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1543225717180,"endTime":1543225717208,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1543225717208,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225717209,"endTime":1543225717242,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225717242,"endTime":1543225717243,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543225717243,"endTime":1543225717448,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1543225717448,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225717449,"endTime":1543225717449,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225717449,"endTime":1543225717450,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225717451,"endTime":1543225717485,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225717486,"endTime":1543225717486,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225717486,"endTime":1543225717487,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543225717487,"endTime":1543225720028,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225717487,"endTime":1543225717523,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225717524,"endTime":1543225717525,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1543225717525,"endTime":1543225717720,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1543225717719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225717720,"endTime":1543225717752,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225717753,"endTime":1543225717753,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225717754,"endTime":1543225718020,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225718019,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225718020,"endTime":1543225718071,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225718071,"endTime":1543225718072,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225718072,"endTime":1543225718626,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225718626,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225718626,"endTime":1543225718871,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225718872,"endTime":1543225718872,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543225718874,"endTime":1543225718917,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543225718917,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225718918,"endTime":1543225718951,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225718952,"endTime":1543225718952,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1543225718954,"endTime":1543225719483,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1543225719483,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225719484,"endTime":1543225719538,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225719538,"endTime":1543225719539,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543225719539,"endTime":1543225720027,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1543225720027,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225720028,"endTime":1543225720030,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225720030,"endTime":1543225720030,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225720031,"endTime":1543225720064,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225720065,"endTime":1543225720065,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225720065,"endTime":1543225720066,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543225720066,"endTime":1543225722938,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225720066,"endTime":1543225720757,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225720757,"endTime":1543225720758,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1543225720758,"endTime":1543225721072,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1543225721072,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225721074,"endTime":1543225721275,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225721275,"endTime":1543225721275,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543225721276,"endTime":1543225721331,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543225721331,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225721331,"endTime":1543225721421,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225721421,"endTime":1543225721422,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225721423,"endTime":1543225721537,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225721537,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225721537,"endTime":1543225721571,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225721571,"endTime":1543225721572,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543225721572,"endTime":1543225721841,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543225721840,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225721841,"endTime":1543225721882,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225721882,"endTime":1543225721883,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1543225721883,"endTime":1543225722343,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1543225722343,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225722343,"endTime":1543225722628,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225722628,"endTime":1543225722629,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543225722629,"endTime":1543225722937,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1543225722937,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225722938,"endTime":1543225722938,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225722938,"endTime":1543225722939,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225722939,"endTime":1543225723224,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225723225,"endTime":1543225723225,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225723226,"endTime":1543225723226,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543225723226,"endTime":1543225727448,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225723226,"endTime":1543225723368,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225723368,"endTime":1543225723369,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1543225723369,"endTime":1543225723619,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1543225723619,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225723620,"endTime":1543225723784,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225723784,"endTime":1543225723785,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1543225723785,"endTime":1543225724949,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1543225724949,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225724949,"endTime":1543225725303,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225725303,"endTime":1543225725303,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225725304,"endTime":1543225725740,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225725740,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225725741,"endTime":1543225725778,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225725778,"endTime":1543225725779,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1543225725779,"endTime":1543225725907,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1543225725907,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225725907,"endTime":1543225726038,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225726039,"endTime":1543225726039,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1543225726039,"endTime":1543225727016,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1543225727016,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225727016,"endTime":1543225727199,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225727200,"endTime":1543225727200,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543225727200,"endTime":1543225727448,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1543225727448,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225727448,"endTime":1543225727448,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225727449,"endTime":1543225727449,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225727449,"endTime":1543225727508,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225727508,"endTime":1543225727509,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225727509,"endTime":1543225727509,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543225727509,"endTime":1543225732041,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225727510,"endTime":1543225727693,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225727693,"endTime":1543225727694,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1543225727694,"endTime":1543225728375,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1543225728372,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225728376,"endTime":1543225728613,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225728613,"endTime":1543225728614,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1543225728614,"endTime":1543225728663,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1543225728663,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225728664,"endTime":1543225728696,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225728696,"endTime":1543225728697,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225728697,"endTime":1543225729895,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225729895,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225729895,"endTime":1543225730512,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225730512,"endTime":1543225730513,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543225730513,"endTime":1543225731305,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543225731304,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225731305,"endTime":1543225731433,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225731434,"endTime":1543225731434,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1543225731435,"endTime":1543225731777,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1543225731777,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225731777,"endTime":1543225731814,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225731814,"endTime":1543225731815,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543225731815,"endTime":1543225732040,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1543225732040,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225732041,"endTime":1543225732041,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225732041,"endTime":1543225732042,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225732042,"endTime":1543225732158,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225732159,"endTime":1543225732159,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225732159,"endTime":1543225732160,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543225732160,"endTime":1543225734057,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225732160,"endTime":1543225732307,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225732307,"endTime":1543225732308,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1543225732308,"endTime":1543225732348,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1543225732347,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225732348,"endTime":1543225732451,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225732452,"endTime":1543225732452,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543225732452,"endTime":1543225732951,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543225732951,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225732951,"endTime":1543225733014,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225733014,"endTime":1543225733014,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225733014,"endTime":1543225733231,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225733231,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225733231,"endTime":1543225733411,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225733411,"endTime":1543225733412,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1543225733412,"endTime":1543225733499,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1543225733499,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225733499,"endTime":1543225733532,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225733533,"endTime":1543225733533,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1543225733534,"endTime":1543225733723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1543225733723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225733723,"endTime":1543225733766,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225733766,"endTime":1543225733767,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543225733767,"endTime":1543225734056,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1543225734055,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225734057,"endTime":1543225734058,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225734058,"endTime":1543225734059,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225734059,"endTime":1543225734198,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225734198,"endTime":1543225734198,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225734198,"endTime":1543225734199,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543225734199,"endTime":1543225736525,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225734199,"endTime":1543225734261,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225734261,"endTime":1543225734262,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1543225734262,"endTime":1543225734830,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1543225734829,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225734830,"endTime":1543225735131,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225735131,"endTime":1543225735131,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1543225735132,"endTime":1543225735386,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1543225735386,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225735386,"endTime":1543225735629,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225735629,"endTime":1543225735630,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225735630,"endTime":1543225735705,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225735704,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225735705,"endTime":1543225735880,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225735880,"endTime":1543225735880,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1543225735880,"endTime":1543225735913,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1543225735913,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225735913,"endTime":1543225735957,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225735957,"endTime":1543225735957,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1543225735958,"endTime":1543225736164,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1543225736164,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225736164,"endTime":1543225736202,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225736202,"endTime":1543225736203,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543225736203,"endTime":1543225736525,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1543225736525,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225736525,"endTime":1543225736526,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225736526,"endTime":1543225736526,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543225736526,"endTime":1543225791621,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543225736527,"endTime":1543225736965,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543225736965,"endTime":1543225738966,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543225738966,"endTime":1543225739018,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543225739018,"endTime":1543225739019,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543225739019,"endTime":1543225739019,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543225739019,"endTime":1543225791621,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225739020,"endTime":1543225739068,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225739068,"endTime":1543225739069,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225739069,"endTime":1543225739069,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1543225739069,"endTime":1543225742682,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225739070,"endTime":1543225739422,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225739424,"endTime":1543225739425,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","description":"","startTime":1543225739425,"endTime":1543225739488,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","startTime":1543225739488,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225739488,"endTime":1543225739547,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225739547,"endTime":1543225739548,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","description":"","startTime":1543225739548,"endTime":1543225741272,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","startTime":1543225741271,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225741272,"endTime":1543225741516,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225741516,"endTime":1543225741517,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225741517,"endTime":1543225741594,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225741594,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225741595,"endTime":1543225741635,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225741636,"endTime":1543225741636,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","description":"","startTime":1543225741637,"endTime":1543225741674,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","startTime":1543225741674,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225741674,"endTime":1543225741737,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225741738,"endTime":1543225741738,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","description":"","startTime":1543225741738,"endTime":1543225741774,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","startTime":1543225741773,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225741774,"endTime":1543225741871,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225741872,"endTime":1543225741872,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1543225741873,"endTime":1543225742682,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","startTime":1543225742682,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225742683,"endTime":1543225742683,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225742683,"endTime":1543225742683,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225742684,"endTime":1543225742734,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225742734,"endTime":1543225742735,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225742735,"endTime":1543225742735,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1543225742735,"endTime":1543225749171,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225742736,"endTime":1543225742971,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225742972,"endTime":1543225742972,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","description":"","startTime":1543225742972,"endTime":1543225743162,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","startTime":1543225743162,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225743162,"endTime":1543225743207,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225743208,"endTime":1543225743208,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543225743208,"endTime":1543225743443,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543225743443,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225743443,"endTime":1543225743588,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225743588,"endTime":1543225743589,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543225743589,"endTime":1543225743752,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543225743751,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225743752,"endTime":1543225743847,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225743847,"endTime":1543225743848,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543225743848,"endTime":1543225744014,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543225744014,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225744014,"endTime":1543225744557,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225744558,"endTime":1543225744559,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","description":"","startTime":1543225744559,"endTime":1543225749065,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","startTime":1543225744928,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225749065,"endTime":1543225749128,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225749128,"endTime":1543225749129,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1543225749129,"endTime":1543225749171,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","startTime":1543225749170,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225749171,"endTime":1543225749171,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225749172,"endTime":1543225749172,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225749172,"endTime":1543225749202,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225749203,"endTime":1543225749203,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225749203,"endTime":1543225749204,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1543225749204,"endTime":1543225750886,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225749204,"endTime":1543225749266,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225749266,"endTime":1543225749266,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","description":"","startTime":1543225749267,"endTime":1543225749499,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","startTime":1543225749499,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225749500,"endTime":1543225749681,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225750088,"endTime":1543225750089,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","description":"","startTime":1543225750089,"endTime":1543225750460,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","startTime":1543225750459,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225750460,"endTime":1543225750621,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225750621,"endTime":1543225750621,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225750622,"endTime":1543225750654,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225750654,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225750654,"endTime":1543225750727,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225750728,"endTime":1543225750728,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","description":"","startTime":1543225750728,"endTime":1543225750754,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","startTime":1543225750754,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225750755,"endTime":1543225750782,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225750783,"endTime":1543225750783,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","description":"","startTime":1543225750783,"endTime":1543225750820,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","startTime":1543225750819,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225750820,"endTime":1543225750854,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225750855,"endTime":1543225750855,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1543225750855,"endTime":1543225750886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","startTime":1543225750886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225750886,"endTime":1543225750887,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225750887,"endTime":1543225750887,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225750887,"endTime":1543225751061,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225751061,"endTime":1543225751062,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225751062,"endTime":1543225751062,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1543225751062,"endTime":1543225760897,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225751062,"endTime":1543225751105,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225751106,"endTime":1543225751107,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","description":"","startTime":1543225751107,"endTime":1543225751425,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","startTime":1543225751424,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225751425,"endTime":1543225751683,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225751683,"endTime":1543225751683,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543225751684,"endTime":1543225751717,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543225751716,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225751717,"endTime":1543225751750,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225751751,"endTime":1543225751751,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225751751,"endTime":1543225752634,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225752634,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225752634,"endTime":1543225753201,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225753201,"endTime":1543225753202,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","description":"","startTime":1543225753202,"endTime":1543225753864,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","startTime":1543225753864,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225753864,"endTime":1543225754447,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225754447,"endTime":1543225754448,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","description":"","startTime":1543225754448,"endTime":1543225756304,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","startTime":1543225756304,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225756304,"endTime":1543225757204,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225757204,"endTime":1543225757204,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1543225757205,"endTime":1543225760897,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","startTime":1543225760897,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225760897,"endTime":1543225760897,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225760898,"endTime":1543225760898,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225760898,"endTime":1543225762234,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225762234,"endTime":1543225762234,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225762235,"endTime":1543225762235,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1543225762235,"endTime":1543225769072,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225762235,"endTime":1543225762842,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225762842,"endTime":1543225762843,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","description":"","startTime":1543225762843,"endTime":1543225764153,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","startTime":1543225764153,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225764154,"endTime":1543225764836,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225764836,"endTime":1543225764837,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","description":"","startTime":1543225764837,"endTime":1543225766779,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","startTime":1543225766779,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225766779,"endTime":1543225766953,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225766953,"endTime":1543225766953,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225766954,"endTime":1543225767054,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225767054,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225767054,"endTime":1543225767088,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225767088,"endTime":1543225767090,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","description":"","startTime":1543225767090,"endTime":1543225767278,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","startTime":1543225767277,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225767278,"endTime":1543225767563,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225767564,"endTime":1543225767564,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","description":"","startTime":1543225767564,"endTime":1543225768149,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","startTime":1543225768149,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225768149,"endTime":1543225768447,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225768448,"endTime":1543225768448,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1543225768448,"endTime":1543225769071,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","startTime":1543225769071,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225769072,"endTime":1543225769073,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225769074,"endTime":1543225769074,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225769074,"endTime":1543225769533,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225769533,"endTime":1543225769533,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225769533,"endTime":1543225769534,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1543225769534,"endTime":1543225780480,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225769534,"endTime":1543225769869,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225769869,"endTime":1543225769869,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","description":"","startTime":1543225769870,"endTime":1543225771117,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","startTime":1543225771117,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225771117,"endTime":1543225772368,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225772369,"endTime":1543225772369,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","description":"","startTime":1543225772369,"endTime":1543225774096,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","startTime":1543225774096,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225774096,"endTime":1543225774779,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225774780,"endTime":1543225774780,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225774781,"endTime":1543225777300,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225777299,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225777300,"endTime":1543225778022,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225778022,"endTime":1543225778023,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543225778023,"endTime":1543225778699,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543225778699,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225778699,"endTime":1543225779002,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225779002,"endTime":1543225779002,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","description":"","startTime":1543225779003,"endTime":1543225779671,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","startTime":1543225779671,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225779671,"endTime":1543225779921,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225779921,"endTime":1543225779922,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1543225779923,"endTime":1543225780480,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","startTime":1543225780480,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225780480,"endTime":1543225780480,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225780481,"endTime":1543225780481,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225780481,"endTime":1543225781033,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225781033,"endTime":1543225781033,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225781034,"endTime":1543225781034,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1543225781034,"endTime":1543225787349,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225781034,"endTime":1543225781653,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225781654,"endTime":1543225781654,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","description":"","startTime":1543225781654,"endTime":1543225782135,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","startTime":1543225782135,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225782135,"endTime":1543225783095,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225783096,"endTime":1543225783096,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","description":"","startTime":1543225783096,"endTime":1543225784093,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","startTime":1543225784093,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225784093,"endTime":1543225784337,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225784338,"endTime":1543225784338,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225784338,"endTime":1543225784765,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225784764,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225784765,"endTime":1543225785092,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225785092,"endTime":1543225785092,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","description":"","startTime":1543225785093,"endTime":1543225785238,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","startTime":1543225785237,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225785238,"endTime":1543225785523,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225785523,"endTime":1543225785526,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","description":"","startTime":1543225785527,"endTime":1543225786070,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","startTime":1543225786069,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225786070,"endTime":1543225786347,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225786347,"endTime":1543225786347,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1543225786348,"endTime":1543225787348,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","startTime":1543225787348,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225787349,"endTime":1543225787349,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225787349,"endTime":1543225787350,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225787350,"endTime":1543225787370,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225787371,"endTime":1543225787371,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225787371,"endTime":1543225787371,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1543225787372,"endTime":1543225789251,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225787372,"endTime":1543225787398,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225787398,"endTime":1543225787398,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","description":"","startTime":1543225787399,"endTime":1543225787454,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","startTime":1543225787453,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225787454,"endTime":1543225787532,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225787533,"endTime":1543225787533,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543225787533,"endTime":1543225787559,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543225787559,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225787559,"endTime":1543225787737,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225787738,"endTime":1543225787738,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225787738,"endTime":1543225787863,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225787863,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225787864,"endTime":1543225787896,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225787896,"endTime":1543225787897,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543225787897,"endTime":1543225788090,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543225788090,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225788090,"endTime":1543225788220,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225788220,"endTime":1543225788221,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","description":"","startTime":1543225788221,"endTime":1543225789201,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","startTime":1543225789200,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225789201,"endTime":1543225789229,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225789229,"endTime":1543225789230,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1543225789230,"endTime":1543225789251,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","startTime":1543225789251,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225789251,"endTime":1543225789252,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225789252,"endTime":1543225789252,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225789252,"endTime":1543225789286,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225789286,"endTime":1543225789287,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225789287,"endTime":1543225789287,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1543225789287,"endTime":1543225790387,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225789287,"endTime":1543225789323,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225789323,"endTime":1543225789324,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","description":"","startTime":1543225789324,"endTime":1543225789352,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","startTime":1543225789351,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225789352,"endTime":1543225789376,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225789376,"endTime":1543225789376,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","description":"","startTime":1543225789377,"endTime":1543225789398,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","startTime":1543225789397,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225789398,"endTime":1543225789421,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225789421,"endTime":1543225789422,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225789422,"endTime":1543225790019,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225790019,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225790019,"endTime":1543225790044,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225790044,"endTime":1543225790044,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543225790045,"endTime":1543225790077,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543225790077,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225790078,"endTime":1543225790119,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225790119,"endTime":1543225790120,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","description":"","startTime":1543225790120,"endTime":1543225790178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","startTime":1543225790178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225790178,"endTime":1543225790281,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225790281,"endTime":1543225790282,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1543225790282,"endTime":1543225790387,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","startTime":1543225790387,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225790387,"endTime":1543225790388,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225790388,"endTime":1543225790388,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225790388,"endTime":1543225790417,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225790417,"endTime":1543225790417,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225790417,"endTime":1543225790418,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1543225790418,"endTime":1543225791620,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225790418,"endTime":1543225790518,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225790519,"endTime":1543225790519,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","description":"","startTime":1543225790519,"endTime":1543225790538,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","startTime":1543225790538,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225790539,"endTime":1543225790588,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225790589,"endTime":1543225790589,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","description":"","startTime":1543225790589,"endTime":1543225790797,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","startTime":1543225790797,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225790797,"endTime":1543225790938,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225790938,"endTime":1543225790939,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225790939,"endTime":1543225791146,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225791146,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225791146,"endTime":1543225791216,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225791216,"endTime":1543225791217,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543225791217,"endTime":1543225791379,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543225791379,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225791379,"endTime":1543225791413,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225791413,"endTime":1543225791414,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","description":"","startTime":1543225791414,"endTime":1543225791469,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","startTime":1543225791469,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225791469,"endTime":1543225791598,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225791598,"endTime":1543225791599,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1543225791599,"endTime":1543225791620,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","startTime":1543225791619,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225791620,"endTime":1543225791620,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225791620,"endTime":1543225791621,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543225791621,"endTime":1543225836383,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543225791621,"endTime":1543225791921,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543225791921,"endTime":1543225793924,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543225793924,"endTime":1543225794216,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543225794216,"endTime":1543225794217,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543225794217,"endTime":1543225794217,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543225794217,"endTime":1543225836383,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225794218,"endTime":1543225794698,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225794698,"endTime":1543225794698,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225794698,"endTime":1543225794699,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1543225794699,"endTime":1543225801551,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225794699,"endTime":1543225794744,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225794744,"endTime":1543225794744,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","description":"","startTime":1543225794745,"endTime":1543225794943,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","startTime":1543225794943,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225794943,"endTime":1543225795161,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225795161,"endTime":1543225795161,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543225795162,"endTime":1543225796133,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543225796133,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225796133,"endTime":1543225796559,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225796560,"endTime":1543225796560,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","description":"","startTime":1543225796560,"endTime":1543225797388,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","startTime":1543225797388,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225797389,"endTime":1543225797847,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225797847,"endTime":1543225797847,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543225797847,"endTime":1543225799412,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543225799412,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225799412,"endTime":1543225799812,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225799813,"endTime":1543225799813,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","description":"","startTime":1543225799813,"endTime":1543225800848,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","startTime":1543225800848,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225800848,"endTime":1543225800873,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225800874,"endTime":1543225800874,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1543225800874,"endTime":1543225801551,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","startTime":1543225801550,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225801551,"endTime":1543225801551,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225801552,"endTime":1543225801552,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225801552,"endTime":1543225801579,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225801580,"endTime":1543225801580,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225801580,"endTime":1543225801581,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1543225801581,"endTime":1543225802373,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225801581,"endTime":1543225801912,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225801912,"endTime":1543225801912,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","description":"","startTime":1543225801912,"endTime":1543225802088,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","startTime":1543225802088,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225802089,"endTime":1543225802116,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225802117,"endTime":1543225802117,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","description":"","startTime":1543225802117,"endTime":1543225802172,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","startTime":1543225802171,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225802173,"endTime":1543225802202,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225802202,"endTime":1543225802203,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225802203,"endTime":1543225802237,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225802237,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225802237,"endTime":1543225802262,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225802263,"endTime":1543225802263,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543225802263,"endTime":1543225802282,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543225802281,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225802282,"endTime":1543225802309,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225802309,"endTime":1543225802310,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","description":"","startTime":1543225802310,"endTime":1543225802327,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","startTime":1543225802327,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225802328,"endTime":1543225802352,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225802352,"endTime":1543225802352,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1543225802352,"endTime":1543225802373,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","startTime":1543225802372,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225802373,"endTime":1543225802374,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225802374,"endTime":1543225802374,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225802374,"endTime":1543225802395,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225802396,"endTime":1543225802396,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225802396,"endTime":1543225802396,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1543225802396,"endTime":1543225807836,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225802397,"endTime":1543225802420,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225802421,"endTime":1543225802421,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","description":"","startTime":1543225802421,"endTime":1543225803277,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","startTime":1543225803276,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225803277,"endTime":1543225803301,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225803301,"endTime":1543225803302,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543225803302,"endTime":1543225803360,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543225803360,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225803361,"endTime":1543225803781,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225803781,"endTime":1543225803781,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543225803782,"endTime":1543225804721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543225804721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225804721,"endTime":1543225805052,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225805052,"endTime":1543225805053,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","description":"","startTime":1543225805053,"endTime":1543225805705,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","startTime":1543225805705,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225805707,"endTime":1543225806154,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225806154,"endTime":1543225806155,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","description":"","startTime":1543225806156,"endTime":1543225806962,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","startTime":1543225806962,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225806962,"endTime":1543225807287,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225807287,"endTime":1543225807287,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1543225807288,"endTime":1543225807836,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","startTime":1543225807836,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225807837,"endTime":1543225807837,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225807837,"endTime":1543225807837,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225807837,"endTime":1543225808285,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225808285,"endTime":1543225808286,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225808286,"endTime":1543225808286,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1543225808286,"endTime":1543225814929,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225808286,"endTime":1543225809164,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225809164,"endTime":1543225809165,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","description":"","startTime":1543225809165,"endTime":1543225809551,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","startTime":1543225809551,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225809551,"endTime":1543225810001,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225810002,"endTime":1543225810002,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","description":"","startTime":1543225810002,"endTime":1543225810542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","startTime":1543225810542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225810542,"endTime":1543225811096,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225811096,"endTime":1543225811096,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225811097,"endTime":1543225811229,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225811229,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225811229,"endTime":1543225811593,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225811593,"endTime":1543225811594,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","description":"","startTime":1543225811594,"endTime":1543225812721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","startTime":1543225812721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225812721,"endTime":1543225812970,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225812971,"endTime":1543225812971,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","description":"","startTime":1543225812971,"endTime":1543225813596,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","startTime":1543225813595,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225813596,"endTime":1543225813841,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225813841,"endTime":1543225813841,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1543225813842,"endTime":1543225814929,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","startTime":1543225814929,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225814929,"endTime":1543225814930,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225814930,"endTime":1543225814930,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225814930,"endTime":1543225815083,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225815083,"endTime":1543225815083,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225815083,"endTime":1543225815084,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1543225815084,"endTime":1543225821686,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225815084,"endTime":1543225815758,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225815758,"endTime":1543225815759,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","description":"","startTime":1543225815759,"endTime":1543225817217,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","startTime":1543225817217,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225817217,"endTime":1543225817963,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225817964,"endTime":1543225817964,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","description":"","startTime":1543225817964,"endTime":1543225819747,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","startTime":1543225819747,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225819747,"endTime":1543225820233,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225820233,"endTime":1543225820234,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225820234,"endTime":1543225821085,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225821085,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225821085,"endTime":1543225821402,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225821402,"endTime":1543225821402,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543225821402,"endTime":1543225821430,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543225821429,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225821430,"endTime":1543225821456,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225821457,"endTime":1543225821457,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","description":"","startTime":1543225821457,"endTime":1543225821484,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","startTime":1543225821484,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225821485,"endTime":1543225821662,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225821662,"endTime":1543225821662,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1543225821663,"endTime":1543225821686,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","startTime":1543225821686,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225821686,"endTime":1543225821686,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225821687,"endTime":1543225821690,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225821690,"endTime":1543225821731,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225821732,"endTime":1543225821732,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225821732,"endTime":1543225821732,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1543225821733,"endTime":1543225829103,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225821733,"endTime":1543225822265,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225822265,"endTime":1543225822265,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","description":"","startTime":1543225822265,"endTime":1543225823169,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","startTime":1543225823169,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225823169,"endTime":1543225823520,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225823520,"endTime":1543225823520,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543225823520,"endTime":1543225824415,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543225824414,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225824415,"endTime":1543225825153,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225825153,"endTime":1543225825154,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225825154,"endTime":1543225826020,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225826020,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225826020,"endTime":1543225826570,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225826571,"endTime":1543225826571,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","description":"","startTime":1543225826571,"endTime":1543225827169,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","startTime":1543225827168,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225827169,"endTime":1543225827409,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225827410,"endTime":1543225827410,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","description":"","startTime":1543225827410,"endTime":1543225828027,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","startTime":1543225828027,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225828027,"endTime":1543225828269,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225828269,"endTime":1543225828269,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1543225828269,"endTime":1543225829103,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","startTime":1543225829103,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225829106,"endTime":1543225829106,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225829106,"endTime":1543225829107,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225829107,"endTime":1543225829714,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225829714,"endTime":1543225829715,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225829715,"endTime":1543225829715,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1543225829715,"endTime":1543225831720,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225829715,"endTime":1543225830337,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225830337,"endTime":1543225830337,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","description":"","startTime":1543225830337,"endTime":1543225830598,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","startTime":1543225830598,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225830598,"endTime":1543225830627,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225830627,"endTime":1543225830628,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","description":"","startTime":1543225830628,"endTime":1543225831193,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","startTime":1543225831193,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225831193,"endTime":1543225831389,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225831389,"endTime":1543225831390,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225831390,"endTime":1543225831427,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225831427,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225831427,"endTime":1543225831455,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225831456,"endTime":1543225831456,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","description":"","startTime":1543225831457,"endTime":1543225831475,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","startTime":1543225831474,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225831475,"endTime":1543225831498,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225831498,"endTime":1543225831498,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","description":"","startTime":1543225831498,"endTime":1543225831539,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","startTime":1543225831539,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225831539,"endTime":1543225831691,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225831691,"endTime":1543225831692,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1543225831692,"endTime":1543225831720,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","startTime":1543225831720,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225831721,"endTime":1543225831721,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225831721,"endTime":1543225831721,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225831721,"endTime":1543225831897,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225831898,"endTime":1543225831898,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225831898,"endTime":1543225831898,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1543225831899,"endTime":1543225833026,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225831899,"endTime":1543225831949,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225831949,"endTime":1543225831949,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","description":"","startTime":1543225831949,"endTime":1543225832166,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","startTime":1543225832165,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225832166,"endTime":1543225832196,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225832197,"endTime":1543225832197,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225832197,"endTime":1543225832226,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225832226,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225832226,"endTime":1543225832335,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225832335,"endTime":1543225832335,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225832335,"endTime":1543225832430,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225832430,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225832431,"endTime":1543225832461,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225832461,"endTime":1543225832461,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543225832461,"endTime":1543225832719,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543225832719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225832719,"endTime":1543225832751,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225832751,"endTime":1543225832751,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","description":"","startTime":1543225832752,"endTime":1543225832773,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","startTime":1543225832773,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225832773,"endTime":1543225832931,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225832931,"endTime":1543225832932,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1543225832933,"endTime":1543225833026,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","startTime":1543225833026,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225833026,"endTime":1543225833026,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225833027,"endTime":1543225833027,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225833027,"endTime":1543225833144,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225833144,"endTime":1543225833145,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225833145,"endTime":1543225833145,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1543225833145,"endTime":1543225834819,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225833146,"endTime":1543225833243,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225833243,"endTime":1543225833244,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","description":"","startTime":1543225833244,"endTime":1543225833266,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","startTime":1543225833266,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225833266,"endTime":1543225833295,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225833296,"endTime":1543225833296,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543225833296,"endTime":1543225833480,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543225833480,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225833480,"endTime":1543225833529,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225833529,"endTime":1543225833530,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225833530,"endTime":1543225833731,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225833731,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225833731,"endTime":1543225833759,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225833760,"endTime":1543225833760,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","description":"","startTime":1543225833760,"endTime":1543225833779,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","startTime":1543225833778,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225833779,"endTime":1543225833803,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225833803,"endTime":1543225833803,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","description":"","startTime":1543225833803,"endTime":1543225833996,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","startTime":1543225833996,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225833997,"endTime":1543225834573,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225834574,"endTime":1543225834574,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1543225834574,"endTime":1543225834819,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","startTime":1543225834819,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225834819,"endTime":1543225834819,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225834819,"endTime":1543225834820,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225834820,"endTime":1543225834845,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225834845,"endTime":1543225834846,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225834846,"endTime":1543225834846,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1543225834846,"endTime":1543225836382,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225834846,"endTime":1543225834891,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225834891,"endTime":1543225834892,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","description":"","startTime":1543225834892,"endTime":1543225835067,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","startTime":1543225835067,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225835067,"endTime":1543225835098,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225835098,"endTime":1543225835099,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","description":"","startTime":1543225835099,"endTime":1543225835133,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","startTime":1543225835133,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225835133,"endTime":1543225835253,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225835253,"endTime":1543225835253,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225835254,"endTime":1543225835339,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225835338,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225835339,"endTime":1543225835409,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225835410,"endTime":1543225835410,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543225835414,"endTime":1543225835930,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543225835930,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225835930,"endTime":1543225835964,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225835965,"endTime":1543225835965,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","description":"","startTime":1543225835965,"endTime":1543225835986,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","startTime":1543225835986,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225835986,"endTime":1543225836054,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225836054,"endTime":1543225836054,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1543225836055,"endTime":1543225836382,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","startTime":1543225836382,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225836382,"endTime":1543225836382,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225836382,"endTime":1543225836383,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543225836383,"endTime":1543225840397,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543225836383,"endTime":1543225836771,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543225836772,"endTime":1543225838774,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543225838774,"endTime":1543225838895,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543225838895,"endTime":1543225838896,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543225838896,"endTime":1543225838896,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543225838896,"endTime":1543225840397,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225838896,"endTime":1543225839082,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225839083,"endTime":1543225839083,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225839083,"endTime":1543225839083,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543225839083,"endTime":1543225840396,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225839084,"endTime":1543225839220,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225839220,"endTime":1543225839220,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","description":"","startTime":1543225839220,"endTime":1543225839306,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","startTime":1543225839306,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225839307,"endTime":1543225839451,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225839451,"endTime":1543225839451,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","description":"","startTime":1543225839451,"endTime":1543225839599,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","startTime":1543225839599,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225839599,"endTime":1543225839630,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225839630,"endTime":1543225839630,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225839630,"endTime":1543225839819,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225839819,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225839819,"endTime":1543225839855,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225839856,"endTime":1543225839857,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","description":"","startTime":1543225839857,"endTime":1543225839882,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","startTime":1543225839881,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225839882,"endTime":1543225839946,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225839946,"endTime":1543225839947,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","description":"","startTime":1543225839947,"endTime":1543225840105,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","startTime":1543225840104,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225840105,"endTime":1543225840365,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225840365,"endTime":1543225840366,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543225840366,"endTime":1543225840396,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","startTime":1543225840395,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543225840396,"endTime":1543225840396,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543225840396,"endTime":1543225840397,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/DataTable_Pagination","startTime":1543225840398,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/Excel_with_Database","id":"Test Cases/Demo/Excel_with_Database","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\Excel_with_Database.tc","message":"Test Cases/Demo/Excel_with_Database","description":"","startTime":1543225840439,"endTime":1543225903600,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543225840567,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225840567,"endTime":1543225840570,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543225840569,"endTime":1543225840569,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225840569,"endTime":1543225840570,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - downloadPath \u003d \"C:\\Users\\longnguyen\\Downloads\\Selenium Easy - Download Table Data to CSV, Excel, PDF and Print.xlsx\"","description":"","startTime":1543225841246,"endTime":1543225841247,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - sheetname \u003d \"Sheet1\"","description":"","startTime":1543225841247,"endTime":1543225841248,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - total_excel_row \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841248,"endTime":1543225841248,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841248,"endTime":1543225841249,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841249,"endTime":1543225841249,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841249,"endTime":1543225841250,"childRecords":[],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841250,"endTime":1543225841250,"childRecords":[],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841250,"endTime":1543225841251,"childRecords":[],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841251,"endTime":1543225841251,"childRecords":[],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543225841251,"endTime":1543225841253,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543225841253,"endTime":1543225852323,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"WARNING"},"type":"MESSAGE","name":"","message":"A browser is already opened. Closing browser and opening a new one","startTime":1543225841260,"endTime":0,"childRecords":[],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543225852322,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543225852323,"endTime":1543225857298,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543225857298,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543225857299,"endTime":1543225858640,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543225858638,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 1 second(s)","description":"","startTime":1543225858640,"endTime":1543225859667,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 1 second(s)","startTime":1543225859667,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"click","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","description":"","startTime":1543225859668,"endTime":1543225860564,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","startTime":1543225860564,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 2 second(s)","description":"","startTime":1543225860564,"endTime":1543225862566,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 2 second(s)","startTime":1543225862566,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":17,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"demo.ReadExcel.setExcelFile","message":"demo.ReadExcel.setExcelFile is PASSED","description":"","startTime":1543225862566,"endTime":1543225865183,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.setExcelFile is PASSED","startTime":1543225865183,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":18,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - total_excel_row \u003d CustomKeywords.demo.ReadExcel.getRowCount(sheetname)","message":"demo.ReadExcel.getRowCount is PASSED","description":"","startTime":1543225865183,"endTime":1543225865347,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getRowCount is PASSED","startTime":1543225865346,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":19,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(total_excel_row)","description":"","startTime":1543225865347,"endTime":1543225865352,"childRecords":[],"interuppted":false},{"index":20,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 1, row \u003c total_excel_row, (row++)])","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543225865352,"endTime":1543225903599,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225865353,"endTime":1543225865365,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225865365,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225865366,"endTime":1543225865367,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225865367,"endTime":1543225865367,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225865367,"endTime":1543225865479,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225865478,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225865479,"endTime":1543225865480,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225865479,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225865480,"endTime":1543225865483,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225865483,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225865484,"endTime":1543225865486,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225865486,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225865486,"endTime":1543225865489,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225865487,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225865489,"endTime":1543225865490,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225865490,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225865490,"endTime":1543225865492,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1543225865493,"endTime":1543225866736,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1543225866736,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543225866736,"endTime":1543225867144,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543225867144,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225867144,"endTime":1543225867686,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225867686,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1543225867687,"endTime":1543225868022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1543225868021,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1543225868022,"endTime":1543225868636,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1543225868636,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543225868636,"endTime":1543225868714,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1543225868713,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225868714,"endTime":1543225868714,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225868714,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225868714,"endTime":1543225868715,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225868715,"endTime":1543225868715,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225868715,"endTime":1543225868716,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225868716,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225868716,"endTime":1543225868716,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225868716,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225868717,"endTime":1543225868717,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225868717,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225868717,"endTime":1543225868718,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225868718,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225868718,"endTime":1543225868718,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225868718,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225868719,"endTime":1543225868720,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225868719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225868720,"endTime":1543225868720,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1543225868720,"endTime":1543225868748,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1543225868748,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1543225868748,"endTime":1543225868936,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1543225868936,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225868936,"endTime":1543225868985,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225868984,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1543225868985,"endTime":1543225869075,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1543225869075,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1543225869075,"endTime":1543225869195,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1543225869194,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543225869195,"endTime":1543225869218,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1543225869218,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225869218,"endTime":1543225869219,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225869219,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225869219,"endTime":1543225869219,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225869219,"endTime":1543225869220,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225869220,"endTime":1543225869220,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225869220,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225869220,"endTime":1543225869223,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225869222,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225869223,"endTime":1543225869224,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225869224,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225869224,"endTime":1543225869226,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225869226,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225869226,"endTime":1543225869227,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225869226,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225869227,"endTime":1543225869227,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225869227,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225869227,"endTime":1543225869228,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1543225869228,"endTime":1543225869252,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1543225869251,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1543225869252,"endTime":1543225869460,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1543225869460,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225869460,"endTime":1543225869485,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225869485,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543225869485,"endTime":1543225869508,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543225869507,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1543225869508,"endTime":1543225869977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1543225869977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543225869977,"endTime":1543225870000,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1543225870000,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225870001,"endTime":1543225870001,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225870001,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225870001,"endTime":1543225870001,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225870002,"endTime":1543225870002,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870002,"endTime":1543225870003,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870003,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870003,"endTime":1543225870004,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870003,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870004,"endTime":1543225870004,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870004,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870004,"endTime":1543225870006,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870006,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870006,"endTime":1543225870006,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870006,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870007,"endTime":1543225870007,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870007,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225870007,"endTime":1543225870007,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1543225870008,"endTime":1543225870044,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1543225870044,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225870045,"endTime":1543225870229,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225870229,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225870229,"endTime":1543225870261,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225870261,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1543225870261,"endTime":1543225870280,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1543225870280,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1543225870280,"endTime":1543225870305,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1543225870304,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543225870305,"endTime":1543225870487,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1543225870487,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225870487,"endTime":1543225870488,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225870488,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225870489,"endTime":1543225870489,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225870489,"endTime":1543225870489,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870489,"endTime":1543225870490,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870490,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870490,"endTime":1543225870490,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870490,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870490,"endTime":1543225870491,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870491,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870491,"endTime":1543225870491,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870491,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870492,"endTime":1543225870492,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870492,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870492,"endTime":1543225870493,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870492,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225870493,"endTime":1543225870495,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1543225870495,"endTime":1543225870520,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1543225870520,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225870520,"endTime":1543225870545,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225870545,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225870545,"endTime":1543225870732,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225870732,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543225870732,"endTime":1543225870752,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543225870752,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1543225870752,"endTime":1543225870776,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1543225870776,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543225870776,"endTime":1543225870799,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1543225870799,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225870799,"endTime":1543225870800,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225870799,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225870800,"endTime":1543225870800,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225870800,"endTime":1543225870800,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870801,"endTime":1543225870801,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870801,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870801,"endTime":1543225870802,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870802,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870802,"endTime":1543225870803,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870802,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870803,"endTime":1543225870803,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870803,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870803,"endTime":1543225870804,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870804,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225870804,"endTime":1543225870805,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225870805,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225870806,"endTime":1543225870806,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1543225870806,"endTime":1543225871038,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1543225871037,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543225871038,"endTime":1543225871061,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543225871060,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225871061,"endTime":1543225871081,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225871081,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543225871081,"endTime":1543225871266,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543225871266,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1543225871266,"endTime":1543225871297,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1543225871297,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543225871297,"endTime":1543225871317,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1543225871317,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225871317,"endTime":1543225871317,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225871317,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225871317,"endTime":1543225871318,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225871318,"endTime":1543225871318,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871318,"endTime":1543225871319,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871318,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871319,"endTime":1543225871319,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871319,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871319,"endTime":1543225871320,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871320,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871320,"endTime":1543225871320,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871320,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871320,"endTime":1543225871322,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871321,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871322,"endTime":1543225871323,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871323,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225871323,"endTime":1543225871323,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1543225871323,"endTime":1543225871511,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1543225871511,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1543225871512,"endTime":1543225871531,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1543225871531,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225871531,"endTime":1543225871585,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225871584,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1543225871585,"endTime":1543225871777,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1543225871776,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1543225871777,"endTime":1543225871804,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1543225871804,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543225871804,"endTime":1543225871828,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1543225871828,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225871828,"endTime":1543225871829,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225871828,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225871829,"endTime":1543225871829,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225871829,"endTime":1543225871829,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871829,"endTime":1543225871830,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871830,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871830,"endTime":1543225871830,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871830,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871831,"endTime":1543225871831,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871831,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871831,"endTime":1543225871831,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871831,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871832,"endTime":1543225871832,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871832,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225871832,"endTime":1543225871832,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225871832,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225871833,"endTime":1543225871833,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1543225871833,"endTime":1543225872295,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1543225872295,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1543225872295,"endTime":1543225872330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1543225872329,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225872330,"endTime":1543225872545,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225872545,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543225872545,"endTime":1543225872565,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543225872565,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1543225872565,"endTime":1543225872617,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1543225872617,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543225872617,"endTime":1543225872794,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1543225872794,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225872794,"endTime":1543225872795,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225872795,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225872795,"endTime":1543225872795,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225872795,"endTime":1543225872795,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225872795,"endTime":1543225872796,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225872796,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225872796,"endTime":1543225872797,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225872796,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225872797,"endTime":1543225872797,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225872797,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225872797,"endTime":1543225872798,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225872798,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225872798,"endTime":1543225872798,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225872798,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225872799,"endTime":1543225872799,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225872799,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225872799,"endTime":1543225872799,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1543225872799,"endTime":1543225873151,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1543225873151,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543225873151,"endTime":1543225873173,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543225873173,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225873174,"endTime":1543225873414,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225873414,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1543225873414,"endTime":1543225873436,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1543225873436,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1543225873436,"endTime":1543225873460,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1543225873459,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543225873460,"endTime":1543225873482,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1543225873482,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225873482,"endTime":1543225873483,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225873483,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225873483,"endTime":1543225873483,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225873484,"endTime":1543225873484,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225873484,"endTime":1543225873484,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225873484,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225873485,"endTime":1543225873486,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225873485,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225873486,"endTime":1543225873486,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225873486,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225873486,"endTime":1543225873487,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225873487,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225873487,"endTime":1543225873488,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225873487,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225873488,"endTime":1543225873489,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225873489,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225873489,"endTime":1543225873490,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1543225873490,"endTime":1543225873699,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1543225873699,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1543225873699,"endTime":1543225873731,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1543225873731,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225873731,"endTime":1543225873932,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225873931,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1543225873932,"endTime":1543225873990,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1543225873987,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1543225873990,"endTime":1543225874199,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1543225874199,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543225874199,"endTime":1543225874229,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1543225874229,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225874229,"endTime":1543225874230,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225874229,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225874230,"endTime":1543225874230,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225874230,"endTime":1543225874230,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225874230,"endTime":1543225874231,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225874231,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225874231,"endTime":1543225874232,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225874231,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225874232,"endTime":1543225874232,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225874232,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225874232,"endTime":1543225874233,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225874233,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225874233,"endTime":1543225874234,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225874234,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225874234,"endTime":1543225874235,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225874234,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225874235,"endTime":1543225874235,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","description":"","startTime":1543225874235,"endTime":1543225874760,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","startTime":1543225874759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","description":"","startTime":1543225874760,"endTime":1543225874796,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","startTime":1543225874796,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225874796,"endTime":1543225875005,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225875004,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","description":"","startTime":1543225875005,"endTime":1543225875035,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","startTime":1543225875035,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","description":"","startTime":1543225875035,"endTime":1543225875064,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","startTime":1543225875064,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1543225875065,"endTime":1543225875246,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","startTime":1543225875246,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225875247,"endTime":1543225875247,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225875247,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225875247,"endTime":1543225875248,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225875248,"endTime":1543225875248,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225875248,"endTime":1543225875249,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225875248,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225875249,"endTime":1543225875250,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225875249,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225875250,"endTime":1543225875250,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225875250,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225875250,"endTime":1543225875251,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225875251,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225875251,"endTime":1543225875252,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225875252,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225875252,"endTime":1543225875253,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225875253,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225875253,"endTime":1543225875253,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","description":"","startTime":1543225875253,"endTime":1543225875281,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","startTime":1543225875280,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543225875281,"endTime":1543225875527,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543225875527,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543225875527,"endTime":1543225875552,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543225875552,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543225875552,"endTime":1543225875945,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543225875945,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","description":"","startTime":1543225875945,"endTime":1543225876048,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","startTime":1543225876048,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1543225876048,"endTime":1543225876073,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","startTime":1543225876073,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225876073,"endTime":1543225876074,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225876074,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225876074,"endTime":1543225876074,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225876074,"endTime":1543225876075,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876075,"endTime":1543225876076,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876075,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876076,"endTime":1543225876077,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876077,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876077,"endTime":1543225876078,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876078,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876078,"endTime":1543225876079,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876078,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876079,"endTime":1543225876079,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876079,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876079,"endTime":1543225876080,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876080,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225876080,"endTime":1543225876080,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","description":"","startTime":1543225876080,"endTime":1543225876303,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","startTime":1543225876303,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","description":"","startTime":1543225876303,"endTime":1543225876328,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","startTime":1543225876328,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225876328,"endTime":1543225876370,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225876370,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","description":"","startTime":1543225876370,"endTime":1543225876560,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","startTime":1543225876560,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","description":"","startTime":1543225876561,"endTime":1543225876580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","startTime":1543225876580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1543225876580,"endTime":1543225876612,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","startTime":1543225876612,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225876613,"endTime":1543225876613,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225876613,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225876613,"endTime":1543225876613,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225876614,"endTime":1543225876614,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876614,"endTime":1543225876614,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876614,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876615,"endTime":1543225876616,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876616,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876616,"endTime":1543225876616,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876616,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876617,"endTime":1543225876617,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876617,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876617,"endTime":1543225876618,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876618,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225876618,"endTime":1543225876618,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225876618,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225876619,"endTime":1543225876619,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","description":"","startTime":1543225876619,"endTime":1543225877087,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","startTime":1543225877087,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543225877087,"endTime":1543225877114,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543225877114,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225877114,"endTime":1543225877145,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225877145,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","description":"","startTime":1543225877145,"endTime":1543225877650,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","startTime":1543225877650,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","description":"","startTime":1543225877650,"endTime":1543225877715,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","startTime":1543225877715,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1543225877715,"endTime":1543225877918,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","startTime":1543225877917,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225877918,"endTime":1543225877918,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225877918,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225877918,"endTime":1543225877918,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225877918,"endTime":1543225877919,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225877919,"endTime":1543225877919,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225877919,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225877919,"endTime":1543225877920,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225877919,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225877920,"endTime":1543225877921,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225877921,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225877922,"endTime":1543225877923,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225877922,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225877923,"endTime":1543225877923,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225877923,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225877923,"endTime":1543225877924,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225877923,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225877924,"endTime":1543225877924,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","description":"","startTime":1543225877924,"endTime":1543225878336,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","startTime":1543225878336,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","description":"","startTime":1543225878336,"endTime":1543225878370,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","startTime":1543225878370,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225878371,"endTime":1543225878602,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225878601,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","description":"","startTime":1543225878602,"endTime":1543225878630,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","startTime":1543225878630,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","description":"","startTime":1543225878630,"endTime":1543225878649,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","startTime":1543225878648,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1543225878649,"endTime":1543225878848,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","startTime":1543225878848,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225878849,"endTime":1543225878849,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225878849,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225878850,"endTime":1543225878850,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225878850,"endTime":1543225878850,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225878850,"endTime":1543225878851,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225878851,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225878851,"endTime":1543225878851,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225878851,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225878852,"endTime":1543225878853,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225878853,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225878853,"endTime":1543225878854,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225878853,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225878854,"endTime":1543225878856,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225878855,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225878856,"endTime":1543225878856,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225878856,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225878856,"endTime":1543225878857,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","description":"","startTime":1543225878857,"endTime":1543225878881,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","startTime":1543225878881,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","description":"","startTime":1543225878882,"endTime":1543225878905,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","startTime":1543225878905,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225878905,"endTime":1543225879089,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225879089,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543225879089,"endTime":1543225879120,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543225879120,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","description":"","startTime":1543225879120,"endTime":1543225879145,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","startTime":1543225879145,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1543225879145,"endTime":1543225879259,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","startTime":1543225879259,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225879259,"endTime":1543225879260,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225879259,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225879260,"endTime":1543225879260,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225879260,"endTime":1543225879260,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879260,"endTime":1543225879261,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879261,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879261,"endTime":1543225879261,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879261,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879261,"endTime":1543225879262,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879261,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879262,"endTime":1543225879262,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879262,"endTime":1543225879263,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879263,"endTime":1543225879263,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879263,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225879263,"endTime":1543225879263,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","description":"","startTime":1543225879264,"endTime":1543225879619,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","startTime":1543225879619,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","description":"","startTime":1543225879619,"endTime":1543225879643,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","startTime":1543225879643,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225879643,"endTime":1543225879666,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225879666,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","description":"","startTime":1543225879666,"endTime":1543225879689,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","startTime":1543225879689,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","description":"","startTime":1543225879689,"endTime":1543225879869,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","startTime":1543225879869,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1543225879870,"endTime":1543225879892,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","startTime":1543225879891,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225879892,"endTime":1543225879892,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225879892,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225879892,"endTime":1543225879893,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225879893,"endTime":1543225879893,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879893,"endTime":1543225879894,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879893,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879894,"endTime":1543225879894,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879894,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879894,"endTime":1543225879895,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879895,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879895,"endTime":1543225879895,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879895,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879895,"endTime":1543225879896,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879896,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225879896,"endTime":1543225879898,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225879898,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225879898,"endTime":1543225879899,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","description":"","startTime":1543225879899,"endTime":1543225880115,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","startTime":1543225880115,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543225880115,"endTime":1543225880136,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543225880136,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225880136,"endTime":1543225880154,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225880154,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543225880155,"endTime":1543225880178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543225880177,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","description":"","startTime":1543225880178,"endTime":1543225880324,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","startTime":1543225880324,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1543225880324,"endTime":1543225880409,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","startTime":1543225880409,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225880409,"endTime":1543225880410,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225880410,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225880410,"endTime":1543225880410,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225880411,"endTime":1543225880411,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880411,"endTime":1543225880411,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880411,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880411,"endTime":1543225880412,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880412,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880412,"endTime":1543225880412,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880412,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880413,"endTime":1543225880413,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880413,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880413,"endTime":1543225880413,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880413,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880414,"endTime":1543225880414,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880414,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225880414,"endTime":1543225880414,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","description":"","startTime":1543225880414,"endTime":1543225880435,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","startTime":1543225880435,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","description":"","startTime":1543225880435,"endTime":1543225880666,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","startTime":1543225880666,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225880666,"endTime":1543225880687,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225880687,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543225880687,"endTime":1543225880882,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543225880882,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","description":"","startTime":1543225880883,"endTime":1543225880912,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","startTime":1543225880912,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1543225880912,"endTime":1543225880933,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","startTime":1543225880933,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225880933,"endTime":1543225880934,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225880934,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225880934,"endTime":1543225880934,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225880934,"endTime":1543225880934,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880935,"endTime":1543225880935,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880935,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880935,"endTime":1543225880936,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880936,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880936,"endTime":1543225880936,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880936,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880936,"endTime":1543225880937,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880937,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880937,"endTime":1543225880939,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880937,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225880939,"endTime":1543225880940,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225880939,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225880940,"endTime":1543225880940,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","description":"","startTime":1543225880940,"endTime":1543225881120,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","startTime":1543225881120,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","description":"","startTime":1543225881121,"endTime":1543225881148,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","startTime":1543225881148,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225881148,"endTime":1543225881187,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225881187,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543225881187,"endTime":1543225881376,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543225881376,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","description":"","startTime":1543225881376,"endTime":1543225881617,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","startTime":1543225881617,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1543225881618,"endTime":1543225881650,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","startTime":1543225881650,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225881650,"endTime":1543225881651,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225881650,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225881651,"endTime":1543225881651,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225881651,"endTime":1543225881651,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225881651,"endTime":1543225881652,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225881652,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225881652,"endTime":1543225881652,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225881652,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225881652,"endTime":1543225881653,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225881653,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225881653,"endTime":1543225881654,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225881653,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225881654,"endTime":1543225881655,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225881655,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225881655,"endTime":1543225881655,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225881655,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225881655,"endTime":1543225881656,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","description":"","startTime":1543225881656,"endTime":1543225881895,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","startTime":1543225881895,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543225881895,"endTime":1543225881928,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543225881927,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","description":"","startTime":1543225881928,"endTime":1543225881964,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","startTime":1543225881963,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543225881964,"endTime":1543225882160,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543225882160,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","description":"","startTime":1543225882160,"endTime":1543225882199,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","startTime":1543225882199,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1543225882199,"endTime":1543225882382,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","startTime":1543225882382,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225882382,"endTime":1543225882383,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225882383,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225882383,"endTime":1543225882383,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225882383,"endTime":1543225882383,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882383,"endTime":1543225882384,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882384,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882384,"endTime":1543225882384,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882384,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882385,"endTime":1543225882385,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882385,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882385,"endTime":1543225882386,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882385,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882386,"endTime":1543225882386,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882386,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882386,"endTime":1543225882387,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882387,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225882387,"endTime":1543225882387,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","description":"","startTime":1543225882387,"endTime":1543225882407,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","startTime":1543225882407,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","description":"","startTime":1543225882407,"endTime":1543225882426,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","startTime":1543225882426,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225882427,"endTime":1543225882445,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225882444,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543225882445,"endTime":1543225882632,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543225882632,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","description":"","startTime":1543225882633,"endTime":1543225882652,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","startTime":1543225882651,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1543225882652,"endTime":1543225882670,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","startTime":1543225882670,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225882670,"endTime":1543225882670,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225882670,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225882670,"endTime":1543225882671,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225882671,"endTime":1543225882672,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882672,"endTime":1543225882673,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882672,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882673,"endTime":1543225882673,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882673,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882673,"endTime":1543225882674,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882674,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882674,"endTime":1543225882674,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882674,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882674,"endTime":1543225882675,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882675,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225882675,"endTime":1543225882675,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225882675,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225882675,"endTime":1543225882676,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","description":"","startTime":1543225882676,"endTime":1543225883164,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","startTime":1543225883163,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543225883164,"endTime":1543225883199,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543225883199,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543225883199,"endTime":1543225883220,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543225883220,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","description":"","startTime":1543225883220,"endTime":1543225883501,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","startTime":1543225883501,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","description":"","startTime":1543225883501,"endTime":1543225883521,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","startTime":1543225883520,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1543225883521,"endTime":1543225883539,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","startTime":1543225883539,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225883539,"endTime":1543225883540,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225883540,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225883540,"endTime":1543225883540,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225883540,"endTime":1543225883540,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225883541,"endTime":1543225883541,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225883541,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225883541,"endTime":1543225883542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225883542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225883542,"endTime":1543225883542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225883542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225883542,"endTime":1543225883543,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225883543,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225883543,"endTime":1543225883543,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225883543,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225883543,"endTime":1543225883544,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225883544,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225883544,"endTime":1543225883544,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","description":"","startTime":1543225883544,"endTime":1543225883716,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","startTime":1543225883716,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","description":"","startTime":1543225883716,"endTime":1543225883740,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","startTime":1543225883740,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225883741,"endTime":1543225883771,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225883770,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","description":"","startTime":1543225883771,"endTime":1543225883963,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","startTime":1543225883963,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","description":"","startTime":1543225883963,"endTime":1543225884026,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","startTime":1543225884026,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1543225884027,"endTime":1543225884264,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","startTime":1543225884264,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225884264,"endTime":1543225884264,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225884264,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225884265,"endTime":1543225884265,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225884265,"endTime":1543225884265,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884265,"endTime":1543225884265,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884265,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884266,"endTime":1543225884266,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884266,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884266,"endTime":1543225884266,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884266,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884267,"endTime":1543225884267,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884267,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884267,"endTime":1543225884267,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884267,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884268,"endTime":1543225884268,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884268,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225884268,"endTime":1543225884268,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","description":"","startTime":1543225884268,"endTime":1543225884499,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","startTime":1543225884499,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","description":"","startTime":1543225884499,"endTime":1543225884525,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","startTime":1543225884525,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225884525,"endTime":1543225884547,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225884547,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543225884547,"endTime":1543225884567,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543225884566,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","description":"","startTime":1543225884567,"endTime":1543225884748,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","startTime":1543225884747,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1543225884748,"endTime":1543225884996,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","startTime":1543225884996,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225884997,"endTime":1543225884997,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225884997,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225884997,"endTime":1543225884997,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225884997,"endTime":1543225884998,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884998,"endTime":1543225884998,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884998,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884998,"endTime":1543225884999,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225884999,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225884999,"endTime":1543225885000,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885000,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885000,"endTime":1543225885001,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885001,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885001,"endTime":1543225885002,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885001,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885002,"endTime":1543225885002,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885002,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225885003,"endTime":1543225885003,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","description":"","startTime":1543225885003,"endTime":1543225885035,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","startTime":1543225885035,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543225885036,"endTime":1543225885058,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543225885058,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225885058,"endTime":1543225885244,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225885244,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","description":"","startTime":1543225885244,"endTime":1543225885513,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","startTime":1543225885513,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","description":"","startTime":1543225885513,"endTime":1543225885539,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","startTime":1543225885539,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1543225885539,"endTime":1543225885565,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","startTime":1543225885564,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225885565,"endTime":1543225885565,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225885565,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225885565,"endTime":1543225885566,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225885566,"endTime":1543225885566,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885566,"endTime":1543225885566,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885566,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885567,"endTime":1543225885567,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885567,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885567,"endTime":1543225885568,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885567,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885568,"endTime":1543225885568,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885568,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885568,"endTime":1543225885569,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885569,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225885569,"endTime":1543225885569,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225885569,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225885569,"endTime":1543225885570,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","description":"","startTime":1543225885570,"endTime":1543225885761,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","startTime":1543225885761,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","description":"","startTime":1543225885761,"endTime":1543225885779,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","startTime":1543225885779,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225885779,"endTime":1543225885801,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225885800,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","description":"","startTime":1543225885801,"endTime":1543225885820,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","startTime":1543225885820,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","description":"","startTime":1543225885820,"endTime":1543225885976,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","startTime":1543225885976,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1543225885976,"endTime":1543225886024,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","startTime":1543225886024,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225886024,"endTime":1543225886025,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225886025,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225886025,"endTime":1543225886025,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225886025,"endTime":1543225886025,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886025,"endTime":1543225886026,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886026,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886026,"endTime":1543225886027,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886026,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886027,"endTime":1543225886027,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886027,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886027,"endTime":1543225886028,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886027,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886028,"endTime":1543225886028,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886028,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886028,"endTime":1543225886029,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886028,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225886029,"endTime":1543225886029,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","description":"","startTime":1543225886029,"endTime":1543225886073,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","startTime":1543225886071,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225886073,"endTime":1543225886262,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225886262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225886262,"endTime":1543225886290,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225886290,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543225886290,"endTime":1543225886329,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543225886329,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","description":"","startTime":1543225886329,"endTime":1543225886758,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","startTime":1543225886758,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1543225886758,"endTime":1543225886797,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","startTime":1543225886797,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225886797,"endTime":1543225886798,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225886798,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225886798,"endTime":1543225886798,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225886798,"endTime":1543225886798,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886798,"endTime":1543225886799,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886799,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886799,"endTime":1543225886799,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886799,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886799,"endTime":1543225886800,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886800,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886800,"endTime":1543225886800,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886800,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886800,"endTime":1543225886801,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886801,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225886801,"endTime":1543225886801,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225886801,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225886801,"endTime":1543225886802,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","description":"","startTime":1543225886802,"endTime":1543225886820,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","startTime":1543225886819,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543225886820,"endTime":1543225886997,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543225886997,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225886997,"endTime":1543225887028,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225887028,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","description":"","startTime":1543225887028,"endTime":1543225887049,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","startTime":1543225887049,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","description":"","startTime":1543225887049,"endTime":1543225887547,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","startTime":1543225887547,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1543225887547,"endTime":1543225887576,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","startTime":1543225887575,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225887576,"endTime":1543225887576,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225887576,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225887576,"endTime":1543225887576,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225887577,"endTime":1543225887577,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225887577,"endTime":1543225887577,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225887577,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225887577,"endTime":1543225887578,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225887578,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225887578,"endTime":1543225887579,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225887579,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225887582,"endTime":1543225887587,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225887587,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225887587,"endTime":1543225887589,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225887588,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225887589,"endTime":1543225887589,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225887589,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225887589,"endTime":1543225887590,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","description":"","startTime":1543225887590,"endTime":1543225887664,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","startTime":1543225887663,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","description":"","startTime":1543225887664,"endTime":1543225887865,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","startTime":1543225887865,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225887865,"endTime":1543225887886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225887886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543225887886,"endTime":1543225887904,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543225887904,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","description":"","startTime":1543225887904,"endTime":1543225888086,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","startTime":1543225888086,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1543225888086,"endTime":1543225888108,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","startTime":1543225888108,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543225888108,"endTime":1543225888108,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543225888108,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543225888108,"endTime":1543225888108,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543225888109,"endTime":1543225888109,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225888109,"endTime":1543225888109,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225888109,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225888109,"endTime":1543225888110,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225888109,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225888110,"endTime":1543225888110,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225888110,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225888110,"endTime":1543225888110,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225888110,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225888110,"endTime":1543225888111,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225888111,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543225888111,"endTime":1543225888111,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543225888111,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543225888111,"endTime":1543225888111,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","description":"","startTime":1543225888111,"endTime":1543225888337,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","startTime":1543225888337,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","description":"","startTime":1543225888337,"endTime":1543225888602,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","startTime":1543225888602,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225888602,"endTime":1543225903245,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225903245,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","description":"","startTime":1543225903245,"endTime":1543225903560,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","startTime":1543225903560,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","description":"","startTime":1543225903560,"endTime":1543225903578,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","startTime":1543225903578,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543225903578,"endTime":1543225903599,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","startTime":1543225903599,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/Excel_with_Database","startTime":1543225903599,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/Download","id":"Test Cases/Demo/Download","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\Download.tc","message":"Test Cases/Demo/Download","description":"","startTime":1543225903614,"endTime":1543225922705,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543225903628,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225903629,"endTime":1543225903630,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543225903629,"endTime":1543225903629,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225903629,"endTime":1543225903630,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - downloadPath \u003d \"C:\\Users\\longnguyen\\Downloads\"","description":"","startTime":1543225904073,"endTime":1543225904075,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543225904159,"endTime":1543225909967,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"WARNING"},"type":"MESSAGE","name":"","message":"A browser is already opened. Closing browser and opening a new one","startTime":1543225904160,"endTime":0,"childRecords":[],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543225909967,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543225909967,"endTime":1543225917446,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543225917446,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543225917446,"endTime":1543225918983,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543225918982,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 1 second(s)","description":"","startTime":1543225918983,"endTime":1543225919985,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 1 second(s)","startTime":1543225919985,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"click","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","description":"","startTime":1543225919985,"endTime":1543225920498,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","startTime":1543225920497,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 2 second(s)","description":"","startTime":1543225920498,"endTime":1543225922499,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 2 second(s)","startTime":1543225922499,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - org.testng.Assert.assertTrue(CustomKeywords.demo.Downloadfile.isFileDownloaded(downloadPath, \"Selenium Easy - Download Table Data to CSV, Excel, PDF and Print.xlsx\"), \"Failed to download Expected document\")","message":"demo.Downloadfile.isFileDownloaded is PASSED","description":"","startTime":1543225922499,"endTime":1543225922703,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.Downloadfile.isFileDownloaded is PASSED","startTime":1543225922696,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/Download","startTime":1543225922704,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/DataTable_Normal","id":"Test Cases/Demo/DataTable_Normal","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\DataTable_Normal.tc","message":"Test Cases/Demo/DataTable_Normal","description":"","startTime":1543225922795,"endTime":1543225948112,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543225922815,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225922815,"endTime":1543225922816,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543225922816,"endTime":1543225922816,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543225922816,"endTime":1543225922816,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543225923915,"endTime":1543225929712,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"WARNING"},"type":"MESSAGE","name":"","message":"A browser is already opened. Closing browser and opening a new one","startTime":1543225923916,"endTime":0,"childRecords":[],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543225929712,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543225929712,"endTime":1543225933047,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543225933047,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543225933048,"endTime":1543225934596,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543225934596,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"scrollToPosition","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","description":"","startTime":1543225934596,"endTime":1543225934610,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","startTime":1543225934609,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - driver \u003d com.kms.katalon.core.webui.driver.DriverFactory.getWebDriver()","description":"","startTime":1543225934610,"endTime":1543225934610,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543225934611,"endTime":1543225948112,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543225934611,"endTime":1543225934652,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543225934652,"endTime":1543225934653,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page are : \" + row_count)","description":"","startTime":1543225934653,"endTime":1543225934653,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543225934653,"endTime":1543225948112,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225934655,"endTime":1543225934816,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225934817,"endTime":1543225934817,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225934817,"endTime":1543225934817,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543225934817,"endTime":1543225935969,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225934818,"endTime":1543225934913,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225934913,"endTime":1543225934914,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1543225934914,"endTime":1543225934946,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1543225934946,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225934946,"endTime":1543225935114,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225935114,"endTime":1543225935114,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543225935115,"endTime":1543225935136,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543225935136,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225935136,"endTime":1543225935180,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225935180,"endTime":1543225935180,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543225935180,"endTime":1543225935434,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543225935433,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225935434,"endTime":1543225935474,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225935474,"endTime":1543225935474,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1543225935474,"endTime":1543225935649,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1543225935649,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225935649,"endTime":1543225935678,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225935679,"endTime":1543225935679,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1543225935679,"endTime":1543225935696,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1543225935696,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225935696,"endTime":1543225935880,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225935880,"endTime":1543225935880,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543225935880,"endTime":1543225935969,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1543225935969,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225935969,"endTime":1543225936164,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225936164,"endTime":1543225936164,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225936164,"endTime":1543225936164,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543225936164,"endTime":1543225936961,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225936165,"endTime":1543225936194,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225936195,"endTime":1543225936195,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1543225936195,"endTime":1543225936217,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1543225936216,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225936217,"endTime":1543225936244,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225936244,"endTime":1543225936245,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1543225936245,"endTime":1543225936413,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1543225936413,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225936413,"endTime":1543225936441,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225936441,"endTime":1543225936442,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225936442,"endTime":1543225936463,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225936463,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225936463,"endTime":1543225936491,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225936492,"endTime":1543225936492,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1543225936492,"endTime":1543225936664,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1543225936664,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225936664,"endTime":1543225936696,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225936697,"endTime":1543225936697,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1543225936697,"endTime":1543225936718,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1543225936718,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225936718,"endTime":1543225936827,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225936827,"endTime":1543225936827,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543225936828,"endTime":1543225936961,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1543225936961,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225936961,"endTime":1543225936985,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225936985,"endTime":1543225936986,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225936986,"endTime":1543225936986,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543225936986,"endTime":1543225937934,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225936986,"endTime":1543225937093,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225937093,"endTime":1543225937093,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1543225937093,"endTime":1543225937176,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1543225937176,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225937176,"endTime":1543225937203,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225937203,"endTime":1543225937203,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1543225937204,"endTime":1543225937224,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1543225937224,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225937224,"endTime":1543225937338,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225937338,"endTime":1543225937338,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225937338,"endTime":1543225937442,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225937442,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225937442,"endTime":1543225937474,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225937474,"endTime":1543225937474,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543225937474,"endTime":1543225937663,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543225937663,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225937663,"endTime":1543225937695,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225937696,"endTime":1543225937696,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1543225937696,"endTime":1543225937716,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1543225937715,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225937716,"endTime":1543225937755,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225937756,"endTime":1543225937756,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543225937756,"endTime":1543225937933,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1543225937933,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225937934,"endTime":1543225937956,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225937956,"endTime":1543225937957,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225937957,"endTime":1543225937957,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543225937957,"endTime":1543225938731,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225937957,"endTime":1543225937995,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225937995,"endTime":1543225937995,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1543225937995,"endTime":1543225938179,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1543225938179,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938179,"endTime":1543225938207,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225938208,"endTime":1543225938208,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225938208,"endTime":1543225938225,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225938224,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938225,"endTime":1543225938252,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225938253,"endTime":1543225938253,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543225938253,"endTime":1543225938430,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543225938430,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938430,"endTime":1543225938459,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225938459,"endTime":1543225938459,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1543225938460,"endTime":1543225938476,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1543225938476,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938476,"endTime":1543225938502,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225938502,"endTime":1543225938503,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1543225938503,"endTime":1543225938679,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1543225938679,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938679,"endTime":1543225938713,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225938713,"endTime":1543225938713,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543225938713,"endTime":1543225938731,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1543225938731,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225938731,"endTime":1543225938754,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225938754,"endTime":1543225938754,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225938754,"endTime":1543225938755,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543225938755,"endTime":1543225939748,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938755,"endTime":1543225938920,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225938921,"endTime":1543225938921,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1543225938921,"endTime":1543225938944,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1543225938944,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938944,"endTime":1543225938974,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225938974,"endTime":1543225938975,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543225938975,"endTime":1543225938995,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543225938995,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225938995,"endTime":1543225939022,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225939022,"endTime":1543225939022,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225939023,"endTime":1543225939195,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225939195,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225939195,"endTime":1543225939222,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225939223,"endTime":1543225939223,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543225939223,"endTime":1543225939495,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543225939495,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225939495,"endTime":1543225939523,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225939523,"endTime":1543225939524,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1543225939524,"endTime":1543225939543,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1543225939543,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225939543,"endTime":1543225939584,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225939584,"endTime":1543225939584,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543225939584,"endTime":1543225939748,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1543225939748,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225939749,"endTime":1543225939803,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225939803,"endTime":1543225939804,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225939804,"endTime":1543225939804,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543225939804,"endTime":1543225944214,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225939805,"endTime":1543225939929,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225939929,"endTime":1543225939929,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1543225939930,"endTime":1543225940021,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1543225940021,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225940021,"endTime":1543225940049,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225940050,"endTime":1543225940050,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543225940050,"endTime":1543225940073,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543225940073,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225940073,"endTime":1543225940176,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225940177,"endTime":1543225940177,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225940177,"endTime":1543225944032,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225944032,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944032,"endTime":1543225944074,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944074,"endTime":1543225944074,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543225944074,"endTime":1543225944113,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543225944113,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944113,"endTime":1543225944142,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944143,"endTime":1543225944143,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1543225944143,"endTime":1543225944161,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1543225944161,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944161,"endTime":1543225944188,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944188,"endTime":1543225944188,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543225944188,"endTime":1543225944214,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1543225944214,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225944215,"endTime":1543225944278,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225944278,"endTime":1543225944278,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225944278,"endTime":1543225944278,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543225944279,"endTime":1543225945083,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944279,"endTime":1543225944319,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944319,"endTime":1543225944320,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1543225944320,"endTime":1543225944509,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1543225944509,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944509,"endTime":1543225944535,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944535,"endTime":1543225944536,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1543225944536,"endTime":1543225944557,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1543225944557,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944557,"endTime":1543225944587,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944588,"endTime":1543225944588,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543225944588,"endTime":1543225944776,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543225944776,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944776,"endTime":1543225944809,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944809,"endTime":1543225944809,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1543225944809,"endTime":1543225944827,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1543225944827,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225944827,"endTime":1543225944897,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225944897,"endTime":1543225944897,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1543225944897,"endTime":1543225945034,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1543225945034,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225945034,"endTime":1543225945065,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225945065,"endTime":1543225945066,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543225945066,"endTime":1543225945083,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1543225945083,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225945083,"endTime":1543225945222,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225945222,"endTime":1543225945223,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225945223,"endTime":1543225945223,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543225945223,"endTime":1543225946054,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225945223,"endTime":1543225945292,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225945293,"endTime":1543225945293,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1543225945293,"endTime":1543225945315,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1543225945315,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225945315,"endTime":1543225945419,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225945420,"endTime":1543225945420,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1543225945420,"endTime":1543225945549,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1543225945549,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225945549,"endTime":1543225945578,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225945578,"endTime":1543225945578,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543225945578,"endTime":1543225945597,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543225945597,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225945597,"endTime":1543225945631,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225945631,"endTime":1543225945632,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543225945632,"endTime":1543225945808,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543225945808,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225945808,"endTime":1543225945835,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225945836,"endTime":1543225945836,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1543225945836,"endTime":1543225945853,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1543225945853,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225945853,"endTime":1543225945880,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225945881,"endTime":1543225945881,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543225945881,"endTime":1543225946054,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1543225946054,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225946055,"endTime":1543225946077,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225946078,"endTime":1543225946078,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225946078,"endTime":1543225946078,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543225946078,"endTime":1543225946880,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225946078,"endTime":1543225946115,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225946115,"endTime":1543225946115,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1543225946116,"endTime":1543225946304,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1543225946304,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225946304,"endTime":1543225946332,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225946332,"endTime":1543225946332,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543225946332,"endTime":1543225946366,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543225946366,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225946366,"endTime":1543225946397,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225946397,"endTime":1543225946397,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225946397,"endTime":1543225946570,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225946569,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225946570,"endTime":1543225946598,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225946598,"endTime":1543225946598,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1543225946598,"endTime":1543225946615,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1543225946615,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225946615,"endTime":1543225946641,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225946641,"endTime":1543225946641,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1543225946642,"endTime":1543225946821,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1543225946820,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225946821,"endTime":1543225946861,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225946861,"endTime":1543225946861,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543225946861,"endTime":1543225946880,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1543225946880,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543225946881,"endTime":1543225946925,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543225946926,"endTime":1543225946926,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543225946926,"endTime":1543225946926,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543225946926,"endTime":1543225948111,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225946926,"endTime":1543225947069,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225947070,"endTime":1543225947071,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1543225947071,"endTime":1543225947107,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1543225947107,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225947107,"endTime":1543225947134,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225947135,"endTime":1543225947135,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1543225947135,"endTime":1543225947322,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1543225947322,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225947322,"endTime":1543225947363,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225947363,"endTime":1543225947364,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543225947364,"endTime":1543225947383,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543225947382,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225947383,"endTime":1543225947469,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225947470,"endTime":1543225947470,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1543225947470,"endTime":1543225947598,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1543225947598,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225947598,"endTime":1543225947633,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225947633,"endTime":1543225947634,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1543225947634,"endTime":1543225947834,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1543225947834,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543225947834,"endTime":1543225947883,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543225947883,"endTime":1543225947884,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543225947884,"endTime":1543225948111,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1543225948111,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/DataTable_Normal","startTime":1543225948112,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}