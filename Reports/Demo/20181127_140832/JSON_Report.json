{"devicePlatform":"","logFolder":"E:\\WORK\\Katalon_CURA Testproject\\Reports\\Demo\\20181127_140832","runData":{"hostName":"longnguyen - LONGNGUYEN.vodc.lan","os":"Windows 10 64bit","katalonVersion":"5.8.6.1","browser":"Chrome 70.0.3538.102","dbServerInfo":"Microsoft SQL Server 12.00.4100","hostAddress":"10.10.10.62","sessionId":"d56a7f9fccc62b8bae4ad5ec6cf0fabf","seleniumVersion":"3.7.1","proxyInformation":"ProxyInformation{proxyOption\u003dNO_PROXY, proxyServerType\u003dHTTP, password\u003d, proxyServerAddress\u003d, proxyServerPort\u003d0}","platform":"Windows 10"},"type":"TEST_SUITE","name":"Demo","id":"Test Suites/Demo","source":"","message":"Test Cases/Demo/Excel_with_Database","description":"","startTime":1543302516444,"endTime":1543302675255,"childRecords":[{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/DataTable_Normal","id":"Test Cases/Demo/DataTable_Normal","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\DataTable_Normal.tc","message":"Test Cases/Demo/DataTable_Normal","description":"","startTime":1543302517254,"endTime":1543302535336,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543302517305,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302517348,"endTime":1543302517462,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543302517443,"endTime":1543302517452,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302517454,"endTime":1543302517454,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543302518051,"endTime":1543302525049,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543302525048,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543302525050,"endTime":1543302526359,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543302526358,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543302526360,"endTime":1543302527576,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543302527576,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"scrollToPosition","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","description":"","startTime":1543302527583,"endTime":1543302527853,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","startTime":1543302527852,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - driver \u003d com.kms.katalon.core.webui.driver.DriverFactory.getWebDriver()","description":"","startTime":1543302527853,"endTime":1543302527863,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543302527863,"endTime":1543302535336,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543302527865,"endTime":1543302528196,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543302528197,"endTime":1543302528199,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page are : \" + row_count)","description":"","startTime":1543302528200,"endTime":1543302528204,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543302528206,"endTime":1543302535336,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302528208,"endTime":1543302528257,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302528257,"endTime":1543302528257,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302528257,"endTime":1543302528267,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543302528267,"endTime":1543302529668,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302528267,"endTime":1543302528303,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302528304,"endTime":1543302528305,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1543302528306,"endTime":1543302529022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1543302529022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529022,"endTime":1543302529073,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529074,"endTime":1543302529074,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543302529074,"endTime":1543302529181,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543302529173,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529181,"endTime":1543302529213,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529213,"endTime":1543302529213,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302529221,"endTime":1543302529344,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302529344,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529344,"endTime":1543302529395,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529395,"endTime":1543302529395,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1543302529395,"endTime":1543302529445,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1543302529445,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529445,"endTime":1543302529494,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529495,"endTime":1543302529495,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1543302529496,"endTime":1543302529596,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1543302529596,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529596,"endTime":1543302529635,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529637,"endTime":1543302529637,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543302529637,"endTime":1543302529668,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1543302529668,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302529668,"endTime":1543302529708,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302529708,"endTime":1543302529708,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302529716,"endTime":1543302529716,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543302529716,"endTime":1543302530262,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529716,"endTime":1543302529748,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529748,"endTime":1543302529748,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1543302529748,"endTime":1543302529779,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1543302529777,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529779,"endTime":1543302529817,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529817,"endTime":1543302529817,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1543302529817,"endTime":1543302529883,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1543302529883,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529886,"endTime":1543302529918,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529918,"endTime":1543302529918,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302529918,"endTime":1543302529950,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302529950,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302529950,"endTime":1543302529981,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302529981,"endTime":1543302529981,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1543302529981,"endTime":1543302530022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1543302530022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530022,"endTime":1543302530064,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530064,"endTime":1543302530064,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1543302530064,"endTime":1543302530110,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1543302530110,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530110,"endTime":1543302530148,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530149,"endTime":1543302530150,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543302530150,"endTime":1543302530262,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1543302530262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302530262,"endTime":1543302530313,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302530313,"endTime":1543302530313,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302530313,"endTime":1543302530313,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543302530313,"endTime":1543302530839,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530313,"endTime":1543302530374,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530374,"endTime":1543302530374,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1543302530374,"endTime":1543302530404,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1543302530402,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530404,"endTime":1543302530445,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530445,"endTime":1543302530445,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1543302530445,"endTime":1543302530475,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1543302530475,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530483,"endTime":1543302530515,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530515,"endTime":1543302530515,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302530515,"endTime":1543302530556,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302530556,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530556,"endTime":1543302530606,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530606,"endTime":1543302530606,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543302530606,"endTime":1543302530657,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543302530657,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530657,"endTime":1543302530687,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530687,"endTime":1543302530687,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1543302530687,"endTime":1543302530747,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1543302530747,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530747,"endTime":1543302530798,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530798,"endTime":1543302530798,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543302530798,"endTime":1543302530839,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1543302530839,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302530839,"endTime":1543302530877,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302530877,"endTime":1543302530877,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302530877,"endTime":1543302530877,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543302530877,"endTime":1543302531334,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530877,"endTime":1543302530900,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530900,"endTime":1543302530900,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1543302530900,"endTime":1543302530932,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1543302530931,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530932,"endTime":1543302530961,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302530961,"endTime":1543302530961,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302530961,"endTime":1543302530987,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302530987,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302530988,"endTime":1543302531022,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531022,"endTime":1543302531022,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302531022,"endTime":1543302531102,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302531102,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531102,"endTime":1543302531133,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531133,"endTime":1543302531133,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1543302531133,"endTime":1543302531163,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1543302531163,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531163,"endTime":1543302531221,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531221,"endTime":1543302531223,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1543302531223,"endTime":1543302531243,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1543302531243,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531243,"endTime":1543302531293,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531293,"endTime":1543302531293,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543302531293,"endTime":1543302531334,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1543302531334,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302531334,"endTime":1543302531372,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302531372,"endTime":1543302531374,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302531374,"endTime":1543302531374,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543302531374,"endTime":1543302531878,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531374,"endTime":1543302531416,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531416,"endTime":1543302531416,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1543302531416,"endTime":1543302531435,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1543302531435,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531435,"endTime":1543302531477,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531477,"endTime":1543302531477,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302531477,"endTime":1543302531503,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302531503,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531503,"endTime":1543302531535,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531535,"endTime":1543302531535,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302531535,"endTime":1543302531555,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302531555,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531555,"endTime":1543302531596,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531596,"endTime":1543302531596,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543302531596,"endTime":1543302531616,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543302531616,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531616,"endTime":1543302531656,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531656,"endTime":1543302531656,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1543302531656,"endTime":1543302531687,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1543302531685,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531687,"endTime":1543302531757,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302531757,"endTime":1543302531757,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543302531757,"endTime":1543302531878,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1543302531876,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302531878,"endTime":1543302531928,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302531928,"endTime":1543302531928,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302531928,"endTime":1543302531928,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543302531928,"endTime":1543302532815,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302531928,"endTime":1543302532001,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302532001,"endTime":1543302532002,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1543302532002,"endTime":1543302532079,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1543302532079,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302532079,"endTime":1543302532271,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302532271,"endTime":1543302532271,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543302532271,"endTime":1543302532372,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543302532372,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302532372,"endTime":1543302532432,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302532432,"endTime":1543302532432,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302532432,"endTime":1543302532502,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302532502,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302532502,"endTime":1543302532641,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302532641,"endTime":1543302532641,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543302532641,"endTime":1543302532673,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543302532673,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302532681,"endTime":1543302532713,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302532713,"endTime":1543302532713,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1543302532713,"endTime":1543302532744,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1543302532744,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302532744,"endTime":1543302532784,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302532784,"endTime":1543302532784,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543302532784,"endTime":1543302532815,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1543302532815,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302532815,"endTime":1543302532880,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302532880,"endTime":1543302532880,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302532880,"endTime":1543302532882,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543302532882,"endTime":1543302533498,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302532882,"endTime":1543302532927,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302532927,"endTime":1543302532927,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1543302532927,"endTime":1543302532953,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1543302532945,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302532953,"endTime":1543302533015,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533015,"endTime":1543302533015,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1543302533015,"endTime":1543302533043,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1543302533043,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533043,"endTime":1543302533075,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533075,"endTime":1543302533075,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302533075,"endTime":1543302533104,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302533104,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533104,"endTime":1543302533134,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533136,"endTime":1543302533136,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1543302533136,"endTime":1543302533216,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1543302533216,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533216,"endTime":1543302533236,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533236,"endTime":1543302533236,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1543302533236,"endTime":1543302533266,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1543302533266,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533266,"endTime":1543302533457,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533457,"endTime":1543302533457,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543302533457,"endTime":1543302533498,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1543302533498,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302533498,"endTime":1543302533548,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302533548,"endTime":1543302533548,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302533548,"endTime":1543302533548,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543302533548,"endTime":1543302534023,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533548,"endTime":1543302533588,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533588,"endTime":1543302533588,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1543302533588,"endTime":1543302533628,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1543302533628,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533628,"endTime":1543302533678,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533678,"endTime":1543302533678,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1543302533678,"endTime":1543302533698,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1543302533698,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533698,"endTime":1543302533740,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533740,"endTime":1543302533740,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302533740,"endTime":1543302533759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302533759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533759,"endTime":1543302533801,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533801,"endTime":1543302533801,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543302533802,"endTime":1543302533819,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543302533819,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533819,"endTime":1543302533880,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533880,"endTime":1543302533880,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1543302533880,"endTime":1543302533962,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1543302533962,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302533962,"endTime":1543302533997,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302533997,"endTime":1543302533997,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543302533998,"endTime":1543302534023,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1543302534023,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302534023,"endTime":1543302534063,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302534063,"endTime":1543302534063,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302534063,"endTime":1543302534063,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543302534063,"endTime":1543302534760,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534063,"endTime":1543302534121,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534121,"endTime":1543302534121,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1543302534123,"endTime":1543302534144,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1543302534144,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534144,"endTime":1543302534173,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534173,"endTime":1543302534173,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543302534173,"endTime":1543302534376,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543302534376,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534376,"endTime":1543302534406,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534406,"endTime":1543302534406,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302534406,"endTime":1543302534426,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302534426,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534426,"endTime":1543302534505,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534507,"endTime":1543302534507,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1543302534507,"endTime":1543302534638,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1543302534638,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534638,"endTime":1543302534681,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534681,"endTime":1543302534681,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1543302534682,"endTime":1543302534699,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1543302534699,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534699,"endTime":1543302534732,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534732,"endTime":1543302534732,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543302534733,"endTime":1543302534760,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1543302534760,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302534760,"endTime":1543302534790,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302534790,"endTime":1543302534790,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302534790,"endTime":1543302534790,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543302534790,"endTime":1543302535336,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534790,"endTime":1543302534820,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534820,"endTime":1543302534820,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1543302534820,"endTime":1543302534868,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1543302534868,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534868,"endTime":1543302534909,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534909,"endTime":1543302534909,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1543302534909,"endTime":1543302534929,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1543302534929,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534929,"endTime":1543302534961,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302534961,"endTime":1543302534961,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302534961,"endTime":1543302534984,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302534984,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302534984,"endTime":1543302535042,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302535042,"endTime":1543302535042,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1543302535042,"endTime":1543302535063,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1543302535063,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302535063,"endTime":1543302535158,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302535158,"endTime":1543302535159,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1543302535159,"endTime":1543302535255,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1543302535255,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302535256,"endTime":1543302535300,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302535302,"endTime":1543302535302,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543302535302,"endTime":1543302535336,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1543302535336,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/DataTable_Normal","startTime":1543302535336,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/DataTable_Pagination","id":"Test Cases/Demo/DataTable_Pagination","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\DataTable_Pagination.tc","message":"Test Cases/Demo/DataTable_Pagination","description":"","startTime":1543302535336,"endTime":1543302573002,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543302535427,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302535427,"endTime":1543302535427,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543302535427,"endTime":1543302535427,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302535427,"endTime":1543302535427,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543302536040,"endTime":1543302539887,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"WARNING"},"type":"MESSAGE","name":"","message":"A browser is already opened. Closing browser and opening a new one","startTime":1543302536040,"endTime":0,"childRecords":[],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543302539887,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543302539887,"endTime":1543302541375,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543302541375,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543302541375,"endTime":1543302542825,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543302542825,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"scrollToPosition","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","description":"","startTime":1543302542825,"endTime":1543302542900,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is scrolled to position x \u003d 250, y \u003d 250","startTime":1543302542900,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - driver \u003d com.kms.katalon.core.webui.driver.DriverFactory.getWebDriver()","description":"","startTime":1543302542901,"endTime":1543302542901,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - pagination \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\"example_paginate\"]/span/a\"))","description":"","startTime":1543302542901,"endTime":1543302542942,"childRecords":[],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - size \u003d pagination.size()","description":"","startTime":1543302542942,"endTime":1543302542943,"childRecords":[],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Total Pages of this site is :\" + size)","description":"","startTime":1543302542943,"endTime":1543302542943,"childRecords":[],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d 1","description":"","startTime":1543302542943,"endTime":1543302542944,"childRecords":[],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([i \u003d 1, i \u003c\u003d size, (i++)])","description":"","startTime":1543302542944,"endTime":1543302573002,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543302542944,"endTime":1543302550037,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543302542944,"endTime":1543302543093,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543302543094,"endTime":1543302545108,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543302545108,"endTime":1543302545130,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543302545130,"endTime":1543302545130,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543302545130,"endTime":1543302545138,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543302545138,"endTime":1543302550037,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302545138,"endTime":1543302545168,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302545168,"endTime":1543302545168,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302545168,"endTime":1543302545170,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543302545170,"endTime":1543302545552,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545170,"endTime":1543302545210,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545210,"endTime":1543302545210,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1543302545210,"endTime":1543302545240,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1543302545239,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545240,"endTime":1543302545280,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545280,"endTime":1543302545280,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543302545280,"endTime":1543302545310,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543302545310,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545310,"endTime":1543302545341,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545341,"endTime":1543302545341,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302545341,"endTime":1543302545361,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302545361,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545361,"endTime":1543302545391,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545391,"endTime":1543302545391,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1543302545391,"endTime":1543302545422,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1543302545422,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545422,"endTime":1543302545462,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545462,"endTime":1543302545462,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1543302545462,"endTime":1543302545483,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1543302545483,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545483,"endTime":1543302545522,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545522,"endTime":1543302545522,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543302545522,"endTime":1543302545550,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1543302545550,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302545552,"endTime":1543302545552,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302545552,"endTime":1543302545552,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302545552,"endTime":1543302545633,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302545633,"endTime":1543302545633,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302545633,"endTime":1543302545633,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543302545633,"endTime":1543302546280,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545633,"endTime":1543302545694,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545694,"endTime":1543302545694,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1543302545694,"endTime":1543302545764,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1543302545764,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545764,"endTime":1543302545794,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545794,"endTime":1543302545794,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1543302545794,"endTime":1543302545814,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1543302545814,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545814,"endTime":1543302545855,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545855,"endTime":1543302545863,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302545863,"endTime":1543302545885,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302545885,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545885,"endTime":1543302545915,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302545915,"endTime":1543302545915,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1543302545915,"endTime":1543302545965,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1543302545965,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302545965,"endTime":1543302546006,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546006,"endTime":1543302546006,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1543302546006,"endTime":1543302546235,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1543302546235,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546235,"endTime":1543302546257,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546257,"endTime":1543302546257,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543302546257,"endTime":1543302546280,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1543302546280,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302546280,"endTime":1543302546280,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302546281,"endTime":1543302546281,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302546281,"endTime":1543302546318,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302546318,"endTime":1543302546318,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302546318,"endTime":1543302546318,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543302546318,"endTime":1543302546695,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546318,"endTime":1543302546359,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546359,"endTime":1543302546359,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1543302546359,"endTime":1543302546378,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1543302546378,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546378,"endTime":1543302546421,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546421,"endTime":1543302546421,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1543302546421,"endTime":1543302546438,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1543302546438,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546438,"endTime":1543302546478,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546478,"endTime":1543302546478,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302546478,"endTime":1543302546507,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302546507,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546507,"endTime":1543302546540,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546540,"endTime":1543302546540,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543302546540,"endTime":1543302546565,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543302546565,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546565,"endTime":1543302546617,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546619,"endTime":1543302546619,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1543302546619,"endTime":1543302546643,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1543302546642,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546643,"endTime":1543302546669,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546669,"endTime":1543302546669,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543302546669,"endTime":1543302546694,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1543302546694,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302546695,"endTime":1543302546695,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302546695,"endTime":1543302546695,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302546695,"endTime":1543302546720,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302546720,"endTime":1543302546720,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302546720,"endTime":1543302546720,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543302546720,"endTime":1543302547148,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546720,"endTime":1543302546760,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546760,"endTime":1543302546760,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1543302546760,"endTime":1543302546790,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1543302546790,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546790,"endTime":1543302546820,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546820,"endTime":1543302546820,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302546820,"endTime":1543302546869,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302546869,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546869,"endTime":1543302546911,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546911,"endTime":1543302546911,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302546911,"endTime":1543302546962,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302546962,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302546962,"endTime":1543302546992,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302546992,"endTime":1543302546992,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1543302546992,"endTime":1543302547022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1543302547022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547022,"endTime":1543302547062,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547062,"endTime":1543302547062,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1543302547062,"endTime":1543302547093,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1543302547093,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547093,"endTime":1543302547123,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547123,"endTime":1543302547123,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543302547123,"endTime":1543302547148,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1543302547148,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302547148,"endTime":1543302547148,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302547148,"endTime":1543302547148,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302547151,"endTime":1543302547183,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302547183,"endTime":1543302547183,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302547183,"endTime":1543302547183,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543302547183,"endTime":1543302547646,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547183,"endTime":1543302547223,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547231,"endTime":1543302547231,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1543302547231,"endTime":1543302547251,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1543302547251,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547251,"endTime":1543302547283,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547283,"endTime":1543302547283,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302547283,"endTime":1543302547319,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302547319,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547319,"endTime":1543302547454,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547454,"endTime":1543302547454,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302547454,"endTime":1543302547475,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302547475,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547475,"endTime":1543302547515,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547515,"endTime":1543302547515,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543302547515,"endTime":1543302547536,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543302547536,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547536,"endTime":1543302547576,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547576,"endTime":1543302547576,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1543302547576,"endTime":1543302547596,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1543302547596,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547599,"endTime":1543302547624,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547624,"endTime":1543302547624,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543302547624,"endTime":1543302547646,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1543302547646,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302547646,"endTime":1543302547646,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302547646,"endTime":1543302547646,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302547646,"endTime":1543302547679,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302547679,"endTime":1543302547685,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302547685,"endTime":1543302547685,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543302547685,"endTime":1543302548191,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547685,"endTime":1543302547727,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547727,"endTime":1543302547727,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1543302547727,"endTime":1543302547748,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1543302547748,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547748,"endTime":1543302547788,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547788,"endTime":1543302547788,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543302547788,"endTime":1543302547896,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543302547896,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547896,"endTime":1543302547918,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302547918,"endTime":1543302547926,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302547926,"endTime":1543302547970,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302547970,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302547970,"endTime":1543302548019,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548019,"endTime":1543302548019,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543302548019,"endTime":1543302548059,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543302548059,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548059,"endTime":1543302548100,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548100,"endTime":1543302548100,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1543302548100,"endTime":1543302548128,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1543302548121,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548128,"endTime":1543302548168,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548168,"endTime":1543302548170,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543302548170,"endTime":1543302548191,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1543302548191,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302548191,"endTime":1543302548191,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302548191,"endTime":1543302548199,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302548199,"endTime":1543302548296,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302548296,"endTime":1543302548297,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302548297,"endTime":1543302548297,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543302548297,"endTime":1543302548746,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548297,"endTime":1543302548373,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548373,"endTime":1543302548381,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1543302548381,"endTime":1543302548399,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1543302548399,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548399,"endTime":1543302548443,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548452,"endTime":1543302548452,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1543302548452,"endTime":1543302548473,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1543302548473,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548473,"endTime":1543302548504,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548504,"endTime":1543302548504,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302548504,"endTime":1543302548535,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302548535,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548535,"endTime":1543302548576,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548576,"endTime":1543302548576,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1543302548576,"endTime":1543302548595,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1543302548595,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548595,"endTime":1543302548674,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548676,"endTime":1543302548676,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1543302548676,"endTime":1543302548696,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1543302548694,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548696,"endTime":1543302548726,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548726,"endTime":1543302548726,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543302548726,"endTime":1543302548746,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1543302548746,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302548746,"endTime":1543302548746,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302548746,"endTime":1543302548746,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302548746,"endTime":1543302548776,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302548776,"endTime":1543302548776,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302548776,"endTime":1543302548776,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543302548776,"endTime":1543302549150,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548776,"endTime":1543302548807,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548807,"endTime":1543302548815,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1543302548815,"endTime":1543302548837,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1543302548837,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548837,"endTime":1543302548867,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548867,"endTime":1543302548867,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1543302548867,"endTime":1543302548887,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1543302548887,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548887,"endTime":1543302548937,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548937,"endTime":1543302548937,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302548937,"endTime":1543302548957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302548957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302548957,"endTime":1543302548998,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302548998,"endTime":1543302548998,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543302548998,"endTime":1543302549026,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543302549026,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549026,"endTime":1543302549061,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549061,"endTime":1543302549061,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1543302549061,"endTime":1543302549096,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1543302549096,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549096,"endTime":1543302549129,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549129,"endTime":1543302549129,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543302549129,"endTime":1543302549150,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1543302549150,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302549150,"endTime":1543302549150,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302549150,"endTime":1543302549150,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302549150,"endTime":1543302549187,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302549187,"endTime":1543302549187,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302549187,"endTime":1543302549187,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543302549187,"endTime":1543302549593,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549189,"endTime":1543302549218,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549218,"endTime":1543302549220,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1543302549220,"endTime":1543302549240,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1543302549240,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549240,"endTime":1543302549268,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549268,"endTime":1543302549268,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543302549270,"endTime":1543302549290,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543302549290,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549290,"endTime":1543302549332,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549332,"endTime":1543302549332,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302549332,"endTime":1543302549351,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302549351,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549351,"endTime":1543302549391,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549391,"endTime":1543302549391,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1543302549391,"endTime":1543302549429,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1543302549429,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549429,"endTime":1543302549472,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549472,"endTime":1543302549472,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1543302549472,"endTime":1543302549497,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1543302549497,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549497,"endTime":1543302549561,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549561,"endTime":1543302549561,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543302549561,"endTime":1543302549593,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1543302549593,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302549594,"endTime":1543302549594,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302549594,"endTime":1543302549594,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302549594,"endTime":1543302549624,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302549624,"endTime":1543302549624,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302549624,"endTime":1543302549624,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543302549632,"endTime":1543302550037,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549632,"endTime":1543302549664,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549664,"endTime":1543302549664,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1543302549664,"endTime":1543302549694,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1543302549694,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549694,"endTime":1543302549724,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549724,"endTime":1543302549724,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1543302549724,"endTime":1543302549742,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1543302549742,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549742,"endTime":1543302549775,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549775,"endTime":1543302549775,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302549775,"endTime":1543302549806,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302549806,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549806,"endTime":1543302549855,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549855,"endTime":1543302549855,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1543302549855,"endTime":1543302549886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1543302549886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549894,"endTime":1543302549956,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302549956,"endTime":1543302549956,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1543302549956,"endTime":1543302549976,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1543302549976,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302549976,"endTime":1543302550007,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302550007,"endTime":1543302550007,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543302550007,"endTime":1543302550037,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1543302550037,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302550037,"endTime":1543302550037,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302550037,"endTime":1543302550037,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543302550037,"endTime":1543302564574,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543302550037,"endTime":1543302550181,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543302550182,"endTime":1543302552183,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543302552183,"endTime":1543302552195,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543302552195,"endTime":1543302552195,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543302552195,"endTime":1543302552195,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543302552195,"endTime":1543302564574,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302552195,"endTime":1543302552225,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302552225,"endTime":1543302552225,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302552225,"endTime":1543302552225,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1543302552225,"endTime":1543302552628,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552225,"endTime":1543302552265,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552265,"endTime":1543302552265,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","description":"","startTime":1543302552265,"endTime":1543302552287,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","startTime":1543302552287,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552287,"endTime":1543302552322,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552323,"endTime":1543302552323,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","description":"","startTime":1543302552323,"endTime":1543302552336,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","startTime":1543302552336,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552336,"endTime":1543302552376,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552376,"endTime":1543302552376,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302552377,"endTime":1543302552426,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302552426,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552426,"endTime":1543302552467,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552467,"endTime":1543302552467,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","description":"","startTime":1543302552467,"endTime":1543302552487,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","startTime":1543302552487,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552487,"endTime":1543302552527,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552527,"endTime":1543302552527,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","description":"","startTime":1543302552527,"endTime":1543302552568,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","startTime":1543302552568,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552568,"endTime":1543302552609,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552609,"endTime":1543302552609,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1543302552609,"endTime":1543302552628,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","startTime":1543302552628,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302552628,"endTime":1543302552628,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302552628,"endTime":1543302552628,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302552628,"endTime":1543302552658,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302552666,"endTime":1543302552666,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302552666,"endTime":1543302552666,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1543302552666,"endTime":1543302553251,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552667,"endTime":1543302552688,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552688,"endTime":1543302552688,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","description":"","startTime":1543302552688,"endTime":1543302552719,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","startTime":1543302552719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552719,"endTime":1543302552749,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552749,"endTime":1543302552749,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543302552749,"endTime":1543302552850,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543302552850,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552850,"endTime":1543302552908,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552908,"endTime":1543302552910,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543302552910,"endTime":1543302552940,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543302552940,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552940,"endTime":1543302552974,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302552974,"endTime":1543302552974,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543302552974,"endTime":1543302552991,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543302552991,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302552991,"endTime":1543302553041,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302553041,"endTime":1543302553041,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","description":"","startTime":1543302553041,"endTime":1543302553182,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","startTime":1543302553182,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302553182,"endTime":1543302553213,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302553213,"endTime":1543302553213,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1543302553213,"endTime":1543302553251,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","startTime":1543302553251,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302553251,"endTime":1543302553253,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302553253,"endTime":1543302553253,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302553253,"endTime":1543302553394,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302553394,"endTime":1543302553394,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302553394,"endTime":1543302553394,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1543302553394,"endTime":1543302554581,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302553394,"endTime":1543302553515,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302553515,"endTime":1543302553515,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","description":"","startTime":1543302553515,"endTime":1543302553600,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","startTime":1543302553600,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302553600,"endTime":1543302553665,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302553667,"endTime":1543302553667,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","description":"","startTime":1543302553667,"endTime":1543302553766,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","startTime":1543302553766,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302553766,"endTime":1543302553885,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302553885,"endTime":1543302553886,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302553886,"endTime":1543302553997,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302553997,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302553997,"endTime":1543302554039,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554039,"endTime":1543302554039,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","description":"","startTime":1543302554039,"endTime":1543302554140,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","startTime":1543302554140,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554140,"endTime":1543302554472,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554472,"endTime":1543302554472,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","description":"","startTime":1543302554472,"endTime":1543302554513,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","startTime":1543302554513,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554513,"endTime":1543302554551,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554551,"endTime":1543302554551,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1543302554551,"endTime":1543302554581,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","startTime":1543302554581,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302554581,"endTime":1543302554583,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302554583,"endTime":1543302554583,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302554583,"endTime":1543302554605,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302554612,"endTime":1543302554612,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302554612,"endTime":1543302554612,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1543302554612,"endTime":1543302555057,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554612,"endTime":1543302554644,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554644,"endTime":1543302554644,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","description":"","startTime":1543302554644,"endTime":1543302554665,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","startTime":1543302554665,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554665,"endTime":1543302554704,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554704,"endTime":1543302554704,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543302554704,"endTime":1543302554714,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543302554714,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554714,"endTime":1543302554748,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554748,"endTime":1543302554748,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302554748,"endTime":1543302554766,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302554766,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554766,"endTime":1543302554803,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554803,"endTime":1543302554803,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","description":"","startTime":1543302554803,"endTime":1543302554815,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","startTime":1543302554815,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554815,"endTime":1543302554855,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554855,"endTime":1543302554855,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","description":"","startTime":1543302554855,"endTime":1543302554873,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","startTime":1543302554865,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302554873,"endTime":1543302554906,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302554906,"endTime":1543302554906,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1543302554906,"endTime":1543302555057,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","startTime":1543302555057,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302555057,"endTime":1543302555057,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302555057,"endTime":1543302555057,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302555057,"endTime":1543302555171,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302555172,"endTime":1543302555172,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302555172,"endTime":1543302555172,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1543302555172,"endTime":1543302561935,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302555172,"endTime":1543302555208,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302555208,"endTime":1543302555208,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","description":"","startTime":1543302555208,"endTime":1543302555228,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","startTime":1543302555228,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302555228,"endTime":1543302555260,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302555260,"endTime":1543302555260,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","description":"","startTime":1543302555260,"endTime":1543302555279,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","startTime":1543302555279,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302555279,"endTime":1543302555309,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302555309,"endTime":1543302555309,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302555317,"endTime":1543302555340,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302555340,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302555340,"endTime":1543302555369,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302555369,"endTime":1543302555369,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","description":"","startTime":1543302555369,"endTime":1543302555397,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","startTime":1543302555397,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302555397,"endTime":1543302555420,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302555428,"endTime":1543302555428,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","description":"","startTime":1543302555428,"endTime":1543302555440,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","startTime":1543302555440,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302555440,"endTime":1543302561216,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302561216,"endTime":1543302561216,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1543302561216,"endTime":1543302561934,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","startTime":1543302561934,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302561935,"endTime":1543302561935,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302561935,"endTime":1543302561935,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302561935,"endTime":1543302561969,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302561969,"endTime":1543302561969,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302561969,"endTime":1543302561969,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1543302561969,"endTime":1543302562341,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302561969,"endTime":1543302561995,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302561995,"endTime":1543302561995,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","description":"","startTime":1543302561995,"endTime":1543302562079,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","startTime":1543302562079,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562079,"endTime":1543302562107,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562115,"endTime":1543302562115,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","description":"","startTime":1543302562115,"endTime":1543302562127,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","startTime":1543302562127,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562127,"endTime":1543302562158,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562158,"endTime":1543302562159,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302562159,"endTime":1543302562177,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302562177,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562177,"endTime":1543302562197,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562197,"endTime":1543302562207,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543302562207,"endTime":1543302562219,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543302562219,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562219,"endTime":1543302562240,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562240,"endTime":1543302562240,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","description":"","startTime":1543302562240,"endTime":1543302562270,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","startTime":1543302562270,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562270,"endTime":1543302562310,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562310,"endTime":1543302562310,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1543302562310,"endTime":1543302562341,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","startTime":1543302562341,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302562341,"endTime":1543302562341,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302562341,"endTime":1543302562341,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302562341,"endTime":1543302562361,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302562361,"endTime":1543302562361,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302562361,"endTime":1543302562361,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1543302562361,"endTime":1543302562719,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562361,"endTime":1543302562411,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562411,"endTime":1543302562411,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","description":"","startTime":1543302562411,"endTime":1543302562451,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","startTime":1543302562451,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562451,"endTime":1543302562471,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562471,"endTime":1543302562471,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","description":"","startTime":1543302562471,"endTime":1543302562501,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","startTime":1543302562501,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562501,"endTime":1543302562541,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562541,"endTime":1543302562541,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302562541,"endTime":1543302562559,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302562559,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562559,"endTime":1543302562582,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562582,"endTime":1543302562582,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","description":"","startTime":1543302562582,"endTime":1543302562606,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","startTime":1543302562606,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562606,"endTime":1543302562644,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562644,"endTime":1543302562644,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","description":"","startTime":1543302562644,"endTime":1543302562682,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","startTime":1543302562682,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562682,"endTime":1543302562700,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562700,"endTime":1543302562700,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1543302562700,"endTime":1543302562719,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","startTime":1543302562719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302562719,"endTime":1543302562719,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302562719,"endTime":1543302562719,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302562719,"endTime":1543302562750,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302562750,"endTime":1543302562750,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302562750,"endTime":1543302562750,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1543302562750,"endTime":1543302563153,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562750,"endTime":1543302562781,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562781,"endTime":1543302562781,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","description":"","startTime":1543302562781,"endTime":1543302562802,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","startTime":1543302562802,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562802,"endTime":1543302562837,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562837,"endTime":1543302562837,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543302562837,"endTime":1543302562869,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543302562869,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562869,"endTime":1543302562913,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302562913,"endTime":1543302562913,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302562913,"endTime":1543302562945,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302562945,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302562945,"endTime":1543302563002,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563002,"endTime":1543302563002,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543302563002,"endTime":1543302563024,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543302563024,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563024,"endTime":1543302563064,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563064,"endTime":1543302563064,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","description":"","startTime":1543302563064,"endTime":1543302563095,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","startTime":1543302563095,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563095,"endTime":1543302563129,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563129,"endTime":1543302563129,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1543302563129,"endTime":1543302563145,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","startTime":1543302563145,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302563153,"endTime":1543302563153,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302563153,"endTime":1543302563153,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302563153,"endTime":1543302563195,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302563195,"endTime":1543302563195,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302563195,"endTime":1543302563195,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1543302563195,"endTime":1543302563599,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563195,"endTime":1543302563226,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563226,"endTime":1543302563226,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","description":"","startTime":1543302563226,"endTime":1543302563246,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","startTime":1543302563246,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563246,"endTime":1543302563332,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563332,"endTime":1543302563332,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","description":"","startTime":1543302563332,"endTime":1543302563351,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","startTime":1543302563351,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563351,"endTime":1543302563398,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563398,"endTime":1543302563398,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302563398,"endTime":1543302563418,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302563418,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563418,"endTime":1543302563458,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563458,"endTime":1543302563458,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543302563458,"endTime":1543302563478,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543302563478,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563478,"endTime":1543302563519,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563519,"endTime":1543302563519,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","description":"","startTime":1543302563519,"endTime":1543302563547,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","startTime":1543302563547,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563547,"endTime":1543302563579,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563579,"endTime":1543302563579,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1543302563579,"endTime":1543302563599,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","startTime":1543302563599,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302563599,"endTime":1543302563599,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302563599,"endTime":1543302563599,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302563599,"endTime":1543302563619,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302563619,"endTime":1543302563619,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302563619,"endTime":1543302563619,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1543302563619,"endTime":1543302564574,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563619,"endTime":1543302563660,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563660,"endTime":1543302563660,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","description":"","startTime":1543302563660,"endTime":1543302563678,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","startTime":1543302563678,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563678,"endTime":1543302563700,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563700,"endTime":1543302563700,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","description":"","startTime":1543302563700,"endTime":1543302563750,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","startTime":1543302563750,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563750,"endTime":1543302563790,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563790,"endTime":1543302563790,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302563790,"endTime":1543302563811,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302563810,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302563811,"endTime":1543302563840,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302563840,"endTime":1543302563840,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543302563840,"endTime":1543302564176,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543302564176,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302564176,"endTime":1543302564261,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302564261,"endTime":1543302564261,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","description":"","startTime":1543302564261,"endTime":1543302564355,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","startTime":1543302564355,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302564355,"endTime":1543302564439,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302564439,"endTime":1543302564439,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1543302564439,"endTime":1543302564574,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","startTime":1543302564566,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302564574,"endTime":1543302564574,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302564574,"endTime":1543302564574,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543302564574,"endTime":1543302570460,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543302564574,"endTime":1543302564806,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543302564806,"endTime":1543302566819,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543302566819,"endTime":1543302566850,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543302566850,"endTime":1543302566850,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543302566850,"endTime":1543302566850,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543302566850,"endTime":1543302570460,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302566850,"endTime":1543302566866,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302566866,"endTime":1543302566866,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302566866,"endTime":1543302566866,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1543302566866,"endTime":1543302567157,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302566866,"endTime":1543302566909,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302566909,"endTime":1543302566909,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","description":"","startTime":1543302566909,"endTime":1543302566932,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","startTime":1543302566931,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302566932,"endTime":1543302566957,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302566957,"endTime":1543302566957,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543302566957,"endTime":1543302566973,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543302566973,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302566973,"endTime":1543302567011,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567011,"endTime":1543302567012,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","description":"","startTime":1543302567012,"endTime":1543302567017,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","startTime":1543302567017,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567017,"endTime":1543302567051,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567051,"endTime":1543302567051,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543302567051,"endTime":1543302567059,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543302567059,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567059,"endTime":1543302567090,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567090,"endTime":1543302567090,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","description":"","startTime":1543302567090,"endTime":1543302567106,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","startTime":1543302567106,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567106,"endTime":1543302567135,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567135,"endTime":1543302567135,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1543302567135,"endTime":1543302567157,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","startTime":1543302567157,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302567157,"endTime":1543302567157,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302567157,"endTime":1543302567157,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302567157,"endTime":1543302567188,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302567188,"endTime":1543302567188,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302567188,"endTime":1543302567188,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1543302567188,"endTime":1543302567661,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567188,"endTime":1543302567214,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567214,"endTime":1543302567214,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","description":"","startTime":1543302567214,"endTime":1543302567235,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","startTime":1543302567235,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567235,"endTime":1543302567273,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567273,"endTime":1543302567273,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","description":"","startTime":1543302567273,"endTime":1543302567288,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","startTime":1543302567288,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567288,"endTime":1543302567315,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567315,"endTime":1543302567315,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302567315,"endTime":1543302567332,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302567332,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567332,"endTime":1543302567357,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567357,"endTime":1543302567357,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543302567357,"endTime":1543302567530,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543302567530,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567530,"endTime":1543302567569,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567569,"endTime":1543302567569,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","description":"","startTime":1543302567569,"endTime":1543302567581,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","startTime":1543302567581,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567581,"endTime":1543302567611,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567611,"endTime":1543302567611,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1543302567611,"endTime":1543302567661,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","startTime":1543302567661,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302567661,"endTime":1543302567661,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302567661,"endTime":1543302567661,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302567661,"endTime":1543302567686,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302567686,"endTime":1543302567686,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302567686,"endTime":1543302567686,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1543302567689,"endTime":1543302568044,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567689,"endTime":1543302567722,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567722,"endTime":1543302567722,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","description":"","startTime":1543302567722,"endTime":1543302567742,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","startTime":1543302567742,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567742,"endTime":1543302567762,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567762,"endTime":1543302567762,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543302567762,"endTime":1543302567782,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543302567782,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567782,"endTime":1543302567802,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567802,"endTime":1543302567810,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543302567810,"endTime":1543302567822,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543302567822,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567822,"endTime":1543302567870,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567870,"endTime":1543302567870,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","description":"","startTime":1543302567870,"endTime":1543302567882,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","startTime":1543302567882,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567882,"endTime":1543302567953,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302567953,"endTime":1543302567953,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","description":"","startTime":1543302567953,"endTime":1543302567976,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","startTime":1543302567975,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302567976,"endTime":1543302568024,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568032,"endTime":1543302568032,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1543302568032,"endTime":1543302568044,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","startTime":1543302568044,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302568044,"endTime":1543302568044,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302568044,"endTime":1543302568044,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302568044,"endTime":1543302568082,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302568082,"endTime":1543302568082,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302568082,"endTime":1543302568082,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1543302568082,"endTime":1543302568411,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568084,"endTime":1543302568125,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568125,"endTime":1543302568125,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","description":"","startTime":1543302568125,"endTime":1543302568153,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","startTime":1543302568153,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568153,"endTime":1543302568185,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568185,"endTime":1543302568185,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","description":"","startTime":1543302568185,"endTime":1543302568205,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","startTime":1543302568205,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568205,"endTime":1543302568233,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568233,"endTime":1543302568233,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302568233,"endTime":1543302568264,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302568264,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568264,"endTime":1543302568295,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568295,"endTime":1543302568295,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","description":"","startTime":1543302568295,"endTime":1543302568311,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","startTime":1543302568311,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568311,"endTime":1543302568349,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568349,"endTime":1543302568349,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","description":"","startTime":1543302568349,"endTime":1543302568364,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","startTime":1543302568364,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568364,"endTime":1543302568396,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568396,"endTime":1543302568396,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1543302568396,"endTime":1543302568411,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","startTime":1543302568411,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302568411,"endTime":1543302568411,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302568411,"endTime":1543302568411,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302568411,"endTime":1543302568433,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302568433,"endTime":1543302568433,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302568433,"endTime":1543302568433,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1543302568433,"endTime":1543302568734,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568433,"endTime":1543302568470,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568470,"endTime":1543302568470,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","description":"","startTime":1543302568470,"endTime":1543302568498,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","startTime":1543302568498,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568498,"endTime":1543302568533,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568533,"endTime":1543302568533,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","description":"","startTime":1543302568533,"endTime":1543302568549,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","startTime":1543302568549,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568549,"endTime":1543302568580,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568580,"endTime":1543302568580,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302568580,"endTime":1543302568599,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302568599,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568599,"endTime":1543302568627,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568627,"endTime":1543302568627,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543302568627,"endTime":1543302568633,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543302568633,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568633,"endTime":1543302568670,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568670,"endTime":1543302568670,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","description":"","startTime":1543302568670,"endTime":1543302568685,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","startTime":1543302568685,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568685,"endTime":1543302568715,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568715,"endTime":1543302568715,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1543302568715,"endTime":1543302568734,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","startTime":1543302568734,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302568734,"endTime":1543302568734,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302568734,"endTime":1543302568734,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302568734,"endTime":1543302568749,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302568749,"endTime":1543302568749,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302568749,"endTime":1543302568749,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1543302568764,"endTime":1543302569094,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568764,"endTime":1543302568802,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568802,"endTime":1543302568803,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","description":"","startTime":1543302568803,"endTime":1543302568807,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","startTime":1543302568807,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568807,"endTime":1543302568850,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568850,"endTime":1543302568850,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543302568850,"endTime":1543302568868,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543302568868,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568868,"endTime":1543302568899,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568899,"endTime":1543302568899,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302568899,"endTime":1543302568936,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302568936,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568936,"endTime":1543302568966,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302568966,"endTime":1543302568966,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","description":"","startTime":1543302568966,"endTime":1543302568993,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","startTime":1543302568993,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302568993,"endTime":1543302569030,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569030,"endTime":1543302569030,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","description":"","startTime":1543302569030,"endTime":1543302569047,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","startTime":1543302569047,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569047,"endTime":1543302569079,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569079,"endTime":1543302569079,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1543302569079,"endTime":1543302569094,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","startTime":1543302569094,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302569094,"endTime":1543302569094,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302569094,"endTime":1543302569094,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302569094,"endTime":1543302569127,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302569127,"endTime":1543302569127,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302569128,"endTime":1543302569128,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1543302569128,"endTime":1543302569428,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569128,"endTime":1543302569160,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569160,"endTime":1543302569160,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","description":"","startTime":1543302569160,"endTime":1543302569177,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","startTime":1543302569177,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569177,"endTime":1543302569214,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569214,"endTime":1543302569214,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","description":"","startTime":1543302569214,"endTime":1543302569233,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","startTime":1543302569233,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569234,"endTime":1543302569265,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569265,"endTime":1543302569265,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302569265,"endTime":1543302569285,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302569285,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569285,"endTime":1543302569314,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569314,"endTime":1543302569314,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","description":"","startTime":1543302569314,"endTime":1543302569333,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","startTime":1543302569333,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569333,"endTime":1543302569368,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569368,"endTime":1543302569368,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","description":"","startTime":1543302569368,"endTime":1543302569384,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","startTime":1543302569384,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569384,"endTime":1543302569414,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569414,"endTime":1543302569414,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1543302569414,"endTime":1543302569428,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","startTime":1543302569428,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302569428,"endTime":1543302569428,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302569428,"endTime":1543302569428,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302569428,"endTime":1543302569460,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302569460,"endTime":1543302569460,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302569460,"endTime":1543302569460,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1543302569460,"endTime":1543302569792,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569460,"endTime":1543302569496,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569496,"endTime":1543302569496,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","description":"","startTime":1543302569496,"endTime":1543302569514,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","startTime":1543302569514,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569514,"endTime":1543302569540,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569540,"endTime":1543302569540,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302569540,"endTime":1543302569555,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302569555,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569555,"endTime":1543302569588,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569588,"endTime":1543302569588,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302569588,"endTime":1543302569604,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302569604,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569604,"endTime":1543302569654,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569654,"endTime":1543302569654,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543302569654,"endTime":1543302569685,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543302569684,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569685,"endTime":1543302569725,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569725,"endTime":1543302569725,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","description":"","startTime":1543302569725,"endTime":1543302569741,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","startTime":1543302569741,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569741,"endTime":1543302569771,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569771,"endTime":1543302569771,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1543302569771,"endTime":1543302569792,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","startTime":1543302569792,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302569792,"endTime":1543302569792,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302569792,"endTime":1543302569792,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302569792,"endTime":1543302569814,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302569814,"endTime":1543302569814,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302569814,"endTime":1543302569814,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1543302569814,"endTime":1543302570150,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569814,"endTime":1543302569859,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569859,"endTime":1543302569859,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","description":"","startTime":1543302569859,"endTime":1543302569873,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","startTime":1543302569873,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569873,"endTime":1543302569904,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569904,"endTime":1543302569904,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543302569904,"endTime":1543302569948,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543302569948,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302569948,"endTime":1543302569984,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302569984,"endTime":1543302569984,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302569984,"endTime":1543302570003,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302570002,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570003,"endTime":1543302570024,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570026,"endTime":1543302570026,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","description":"","startTime":1543302570026,"endTime":1543302570036,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","startTime":1543302570036,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570036,"endTime":1543302570064,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570064,"endTime":1543302570064,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","description":"","startTime":1543302570064,"endTime":1543302570096,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","startTime":1543302570096,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570097,"endTime":1543302570124,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570124,"endTime":1543302570124,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1543302570124,"endTime":1543302570150,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","startTime":1543302570150,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302570150,"endTime":1543302570150,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302570150,"endTime":1543302570150,"childRecords":[],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302570150,"endTime":1543302570181,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302570181,"endTime":1543302570181,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302570181,"endTime":1543302570181,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1543302570181,"endTime":1543302570460,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570181,"endTime":1543302570203,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570203,"endTime":1543302570203,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","description":"","startTime":1543302570203,"endTime":1543302570224,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","startTime":1543302570224,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570224,"endTime":1543302570247,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570247,"endTime":1543302570247,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","description":"","startTime":1543302570247,"endTime":1543302570262,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","startTime":1543302570262,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570262,"endTime":1543302570288,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570288,"endTime":1543302570288,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302570288,"endTime":1543302570304,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302570304,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570304,"endTime":1543302570336,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570336,"endTime":1543302570336,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543302570336,"endTime":1543302570356,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543302570356,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570356,"endTime":1543302570387,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570387,"endTime":1543302570387,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","description":"","startTime":1543302570387,"endTime":1543302570405,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","startTime":1543302570405,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302570405,"endTime":1543302570443,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302570443,"endTime":1543302570443,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1543302570443,"endTime":1543302570460,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","startTime":1543302570460,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302570460,"endTime":1543302570460,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302570460,"endTime":1543302570460,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Try","description":"","startTime":1543302570460,"endTime":1543302573002,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - element \u003d driver.findElement(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example_paginate\u0027]/span/a[\" + i + \"]\")).click()","description":"","startTime":1543302570460,"endTime":1543302570595,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - java.lang.Thread.sleep(2000)","description":"","startTime":1543302570595,"endTime":1543302572604,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_table \u003d driver.findElements(org.openqa.selenium.By.xpath(\".//*[@id\u003d\u0027example\u0027]/tbody/tr\"))","description":"","startTime":1543302572604,"endTime":1543302572626,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_count \u003d row_table.size()","description":"","startTime":1543302572626,"endTime":1543302572626,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of rows of page \" + i + \" are : \" + row_count)","description":"","startTime":1543302572626,"endTime":1543302572626,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 0, row \u003c row_count, (row++)])","description":"","startTime":1543302572626,"endTime":1543302573002,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_table \u003d row_table.get(row).findElements(org.openqa.selenium.By.tagName(\"td\"))","description":"","startTime":1543302572626,"endTime":1543302572659,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column_count \u003d column_table.size()","description":"","startTime":1543302572659,"endTime":1543302572659,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"No of cell in rows : \" + row + \" are \" + column_count)","description":"","startTime":1543302572660,"endTime":1543302572660,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([column \u003d 0, column \u003c column_count, (column++)])","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543302572660,"endTime":1543302573002,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302572660,"endTime":1543302572702,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302572702,"endTime":1543302572702,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","description":"","startTime":1543302572702,"endTime":1543302572720,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","startTime":1543302572719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302572720,"endTime":1543302572758,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302572758,"endTime":1543302572758,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","description":"","startTime":1543302572758,"endTime":1543302572779,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","startTime":1543302572779,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302572779,"endTime":1543302572810,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302572810,"endTime":1543302572810,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302572810,"endTime":1543302572826,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302572826,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302572842,"endTime":1543302572873,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302572873,"endTime":1543302572873,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","description":"","startTime":1543302572873,"endTime":1543302572893,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","startTime":1543302572893,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302572893,"endTime":1543302572927,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302572927,"endTime":1543302572927,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","description":"","startTime":1543302572927,"endTime":1543302572958,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","startTime":1543302572958,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - cell_text \u003d column_table.get(column).getText()","description":"","startTime":1543302572958,"endTime":1543302572986,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(\"Cell value of row : \" + row + \" and cell \" + column + \" is \" + cell_text)","description":"","startTime":1543302572986,"endTime":1543302572986,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543302572986,"endTime":1543302573002,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","startTime":1543302573002,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - row_data_table \u003d row_data_table + 1","description":"","startTime":1543302573002,"endTime":1543302573002,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(row_data_table)","description":"","startTime":1543302573002,"endTime":1543302573002,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/DataTable_Pagination","startTime":1543302573002,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/Download","id":"Test Cases/Demo/Download","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\Download.tc","message":"Test Cases/Demo/Download","description":"","startTime":1543302573017,"endTime":1543302583546,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543302573027,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302573027,"endTime":1543302573027,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543302573027,"endTime":1543302573027,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302573027,"endTime":1543302573027,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - downloadPath \u003d \"C:\\Users\\longnguyen\\Downloads\"","description":"","startTime":1543302573350,"endTime":1543302573350,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543302573350,"endTime":1543302577334,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"WARNING"},"type":"MESSAGE","name":"","message":"A browser is already opened. Closing browser and opening a new one","startTime":1543302573350,"endTime":0,"childRecords":[],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543302577333,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543302577334,"endTime":1543302578752,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543302578751,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543302578752,"endTime":1543302580219,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543302580219,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 1 second(s)","description":"","startTime":1543302580219,"endTime":1543302581244,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 1 second(s)","startTime":1543302581243,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"click","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","description":"","startTime":1543302581244,"endTime":1543302581504,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","startTime":1543302581503,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 2 second(s)","description":"","startTime":1543302581504,"endTime":1543302583509,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 2 second(s)","startTime":1543302583509,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - org.testng.Assert.assertTrue(CustomKeywords.demo.Downloadfile.isFileDownloaded(downloadPath, \"Selenium Easy - Download Table Data to CSV, Excel, PDF and Print.xlsx\"), \"Failed to download Expected document\")","message":"demo.Downloadfile.isFileDownloaded is PASSED","description":"","startTime":1543302583509,"endTime":1543302583546,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.Downloadfile.isFileDownloaded is PASSED","startTime":1543302583531,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/Download","startTime":1543302583546,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"isOptional":false,"type":"TEST_CASE","name":"Test Cases/Demo/Excel_with_Database","id":"Test Cases/Demo/Excel_with_Database","source":"E:\\\\WORK\\\\Katalon_CURA Testproject\\\\Test Cases\\\\Demo\\\\Excel_with_Database.tc","message":"Test Cases/Demo/Excel_with_Database","description":"","startTime":1543302583551,"endTime":1543302675255,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"INFO"},"type":"MESSAGE","name":"","message":"Evaluating variables for test case","startTime":1543302584166,"endTime":0,"childRecords":[],"interuppted":false},{"index":-1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Start listener action : sampleBeforeTestCase","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302584167,"endTime":1543302584168,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseId())","description":"","startTime":1543302584167,"endTime":1543302584168,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(testCaseContext.getTestCaseVariables())","message":"Invoke \u0027com.kms.katalon.core.annotation.BeforeTestCase\u0027 method: \u0027NewTestListener.sampleBeforeTestCase(...)\u0027 completed.","description":"","startTime":1543302584168,"endTime":1543302584168,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - downloadPath \u003d \"C:\\Users\\longnguyen\\Downloads\\Selenium Easy - Download Table Data to CSV, Excel, PDF and Print.xlsx\"","description":"","startTime":1543302585324,"endTime":1543302585325,"childRecords":[],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - sheetname \u003d \"Sheet1\"","description":"","startTime":1543302585325,"endTime":1543302585325,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - total_excel_row \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585325,"endTime":1543302585325,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585325,"endTime":1543302585327,"childRecords":[],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585327,"endTime":1543302585328,"childRecords":[],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585328,"endTime":1543302585328,"childRecords":[],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585328,"endTime":1543302585328,"childRecords":[],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585329,"endTime":1543302585330,"childRecords":[],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585330,"endTime":1543302585331,"childRecords":[],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d \u003cnot implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression\u003e","description":"","startTime":1543302585332,"endTime":1543302585332,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"openBrowser","message":"Browser is opened with url: \u0027\u0027","description":"","startTime":1543302585332,"endTime":1543302590770,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"WARNING"},"type":"MESSAGE","name":"","message":"A browser is already opened. Closing browser and opening a new one","startTime":1543302585333,"endTime":0,"childRecords":[],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Browser is opened with url: \u0027\u0027","startTime":1543302590769,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"navigateToUrl","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","description":"","startTime":1543302590770,"endTime":1543302593347,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Navigate to \u0027file:/E:/WORK/PassPulFramework/PassPul/PassPul/SeleniumEasy/www.seleniumeasy.com/test/table-data-download-demo.html\u0027 successfully","startTime":1543302593347,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"maximizeWindow","message":"Current window maximized","description":"","startTime":1543302593347,"endTime":1543302594686,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Current window maximized","startTime":1543302594686,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 1 second(s)","description":"","startTime":1543302594686,"endTime":1543302595706,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 1 second(s)","startTime":1543302595706,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"click","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","description":"","startTime":1543302595706,"endTime":1543302595951,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Object: \u0027Object Repository/Demo/Upload_Download/a_Excel\u0027 is clicked on","startTime":1543302595951,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"delay","message":"Delayed 2 second(s)","description":"","startTime":1543302595951,"endTime":1543302597976,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Delayed 2 second(s)","startTime":1543302597976,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":17,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"demo.ReadExcel.setExcelFile","message":"demo.ReadExcel.setExcelFile is PASSED","description":"","startTime":1543302597976,"endTime":1543302600451,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.setExcelFile is PASSED","startTime":1543302600451,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":18,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - total_excel_row \u003d CustomKeywords.demo.ReadExcel.getRowCount(sheetname)","message":"demo.ReadExcel.getRowCount is PASSED","description":"","startTime":1543302600451,"endTime":1543302600492,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getRowCount is PASSED","startTime":1543302600492,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":19,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(total_excel_row)","description":"","startTime":1543302600492,"endTime":1543302600492,"childRecords":[],"interuppted":false},{"index":20,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - For ([row \u003d 1, row \u003c total_excel_row, (row++)])","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543302600492,"endTime":1543302675255,"childRecords":[{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302600492,"endTime":1543302600500,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302600500,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302600500,"endTime":1543302600500,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302600500,"endTime":1543302600500,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302600500,"endTime":1543302600552,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302600552,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302600552,"endTime":1543302600552,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302600552,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302600552,"endTime":1543302600552,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302600552,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302600552,"endTime":1543302600552,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302600552,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302600552,"endTime":1543302600552,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302600552,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302600552,"endTime":1543302600552,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302600552,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302600552,"endTime":1543302600552,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","description":"","startTime":1543302600552,"endTime":1543302600700,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Airi Satou\u0027 and expected text \u0027Airi Satou\u0027 are matched ","startTime":1543302600700,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543302600700,"endTime":1543302600797,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543302600797,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302600802,"endTime":1543302600926,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302600926,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","description":"","startTime":1543302600926,"endTime":1543302600986,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002733\u0027 and expected text \u002733\u0027 are matched ","startTime":1543302600986,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","description":"","startTime":1543302600986,"endTime":1543302601006,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/11/28\u0027 and expected text \u00272008/11/28\u0027 are matched ","startTime":1543302601006,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","description":"","startTime":1543302601006,"endTime":1543302601034,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$162,700\u0027 and expected text \u0027$162,700\u0027 are matched ","startTime":1543302601034,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302601034,"endTime":1543302601034,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302601034,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302601034,"endTime":1543302601034,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302601034,"endTime":1543302619846,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302619846,"endTime":1543302619846,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302619846,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302619846,"endTime":1543302619846,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302619846,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302619846,"endTime":1543302620583,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302619846,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620583,"endTime":1543302620583,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620583,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620583,"endTime":1543302620583,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620583,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620583,"endTime":1543302620583,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620583,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302620583,"endTime":1543302620583,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","description":"","startTime":1543302620583,"endTime":1543302620610,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Angelica Ramos\u0027 and expected text \u0027Angelica Ramos\u0027 are matched ","startTime":1543302620610,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","description":"","startTime":1543302620610,"endTime":1543302620621,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Executive Officer (CEO)\u0027 and expected text \u0027Chief Executive Officer (CEO)\u0027 are matched ","startTime":1543302620621,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302620621,"endTime":1543302620636,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302620636,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","description":"","startTime":1543302620636,"endTime":1543302620719,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002747\u0027 and expected text \u002747\u0027 are matched ","startTime":1543302620719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","description":"","startTime":1543302620719,"endTime":1543302620739,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/10/09\u0027 and expected text \u00272009/10/09\u0027 are matched ","startTime":1543302620739,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","description":"","startTime":1543302620739,"endTime":1543302620759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$1,200,000\u0027 and expected text \u0027$1,200,000\u0027 are matched ","startTime":1543302620759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302620759,"endTime":1543302620759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302620759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302620759,"endTime":1543302620759,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302620759,"endTime":1543302620759,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620759,"endTime":1543302620759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620759,"endTime":1543302620759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620759,"endTime":1543302620759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620759,"endTime":1543302620759,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620759,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620759,"endTime":1543302620767,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620767,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302620767,"endTime":1543302620767,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302620767,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302620767,"endTime":1543302620767,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","description":"","startTime":1543302620767,"endTime":1543302620779,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Ashton Cox\u0027 and expected text \u0027Ashton Cox\u0027 are matched ","startTime":1543302620779,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","description":"","startTime":1543302620779,"endTime":1543302620800,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Junior Technical Author\u0027 and expected text \u0027Junior Technical Author\u0027 are matched ","startTime":1543302620800,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302620800,"endTime":1543302620820,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302620820,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543302620820,"endTime":1543302620850,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543302620850,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","description":"","startTime":1543302620850,"endTime":1543302620990,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/01/12\u0027 and expected text \u00272009/01/12\u0027 are matched ","startTime":1543302620990,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","description":"","startTime":1543302620990,"endTime":1543302621020,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$86,000\u0027 and expected text \u0027$86,000\u0027 are matched ","startTime":1543302621020,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302621020,"endTime":1543302621022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302621020,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621022,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302621022,"endTime":1543302621022,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","description":"","startTime":1543302621022,"endTime":1543302621042,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Bradley Greer\u0027 and expected text \u0027Bradley Greer\u0027 are matched ","startTime":1543302621042,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302621042,"endTime":1543302621060,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302621060,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302621060,"endTime":1543302621122,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302621122,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","description":"","startTime":1543302621122,"endTime":1543302621152,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002741\u0027 and expected text \u002741\u0027 are matched ","startTime":1543302621152,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","description":"","startTime":1543302621152,"endTime":1543302621172,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/10/13\u0027 and expected text \u00272012/10/13\u0027 are matched ","startTime":1543302621172,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","description":"","startTime":1543302621172,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$132,000\u0027 and expected text \u0027$132,000\u0027 are matched ","startTime":1543302621210,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302621212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621212,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302621212,"endTime":1543302621212,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","description":"","startTime":1543302621212,"endTime":1543302621233,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brenden Wagner\u0027 and expected text \u0027Brenden Wagner\u0027 are matched ","startTime":1543302621233,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302621233,"endTime":1543302621251,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302621251,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302621251,"endTime":1543302621266,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302621266,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543302621266,"endTime":1543302621283,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543302621283,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","description":"","startTime":1543302621283,"endTime":1543302621301,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/07\u0027 and expected text \u00272011/06/07\u0027 are matched ","startTime":1543302621301,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","description":"","startTime":1543302621301,"endTime":1543302621313,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$206,850\u0027 and expected text \u0027$206,850\u0027 are matched ","startTime":1543302621313,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302621313,"endTime":1543302621313,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302621313,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302621313,"endTime":1543302621313,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302621313,"endTime":1543302621313,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621313,"endTime":1543302621313,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621313,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621313,"endTime":1543302621313,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621313,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621313,"endTime":1543302621313,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621313,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621313,"endTime":1543302621321,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621321,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621321,"endTime":1543302621321,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621321,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621321,"endTime":1543302621323,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621321,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302621323,"endTime":1543302621323,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","description":"","startTime":1543302621323,"endTime":1543302621333,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Brielle Williamson\u0027 and expected text \u0027Brielle Williamson\u0027 are matched ","startTime":1543302621333,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543302621333,"endTime":1543302621353,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543302621353,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302621353,"endTime":1543302621383,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302621383,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543302621383,"endTime":1543302621470,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543302621470,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","description":"","startTime":1543302621470,"endTime":1543302621565,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/02\u0027 and expected text \u00272012/12/02\u0027 are matched ","startTime":1543302621565,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","description":"","startTime":1543302621565,"endTime":1543302621692,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$372,000\u0027 and expected text \u0027$372,000\u0027 are matched ","startTime":1543302621692,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302621692,"endTime":1543302621692,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302621692,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302621693,"endTime":1543302621693,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302621693,"endTime":1543302621693,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621693,"endTime":1543302621694,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621694,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621694,"endTime":1543302621695,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621695,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621695,"endTime":1543302621697,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621696,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621697,"endTime":1543302621697,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621697,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621697,"endTime":1543302621698,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621698,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621698,"endTime":1543302621698,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621698,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302621699,"endTime":1543302621699,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","description":"","startTime":1543302621699,"endTime":1543302621806,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Caesar Vance\u0027 and expected text \u0027Caesar Vance\u0027 are matched ","startTime":1543302621806,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","description":"","startTime":1543302621806,"endTime":1543302621887,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Pre-Sales Support\u0027 and expected text \u0027Pre-Sales Support\u0027 are matched ","startTime":1543302621887,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302621887,"endTime":1543302621907,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302621907,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","description":"","startTime":1543302621907,"endTime":1543302621927,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002721\u0027 and expected text \u002721\u0027 are matched ","startTime":1543302621927,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","description":"","startTime":1543302621927,"endTime":1543302621943,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/12/12\u0027 and expected text \u00272011/12/12\u0027 are matched ","startTime":1543302621943,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","description":"","startTime":1543302621943,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$106,450\u0027 and expected text \u0027$106,450\u0027 are matched ","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302621957,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302621957,"endTime":1543302621957,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","description":"","startTime":1543302621957,"endTime":1543302621978,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Cedric Kelly\u0027 and expected text \u0027Cedric Kelly\u0027 are matched ","startTime":1543302621978,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","description":"","startTime":1543302621978,"endTime":1543302621998,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Javascript Developer\u0027 and expected text \u0027Senior Javascript Developer\u0027 are matched ","startTime":1543302621998,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302621998,"endTime":1543302622016,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302622016,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543302622016,"endTime":1543302622028,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543302622028,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","description":"","startTime":1543302622028,"endTime":1543302622049,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/03/29\u0027 and expected text \u00272012/03/29\u0027 are matched ","startTime":1543302622049,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","description":"","startTime":1543302622049,"endTime":1543302622067,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$433,060\u0027 and expected text \u0027$433,060\u0027 are matched ","startTime":1543302622067,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302622067,"endTime":1543302622067,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302622067,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302622067,"endTime":1543302622067,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302622067,"endTime":1543302622069,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622069,"endTime":1543302622069,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622069,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622069,"endTime":1543302622069,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622069,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622069,"endTime":1543302622069,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622069,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622069,"endTime":1543302622069,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622069,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622069,"endTime":1543302622069,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622069,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622069,"endTime":1543302622069,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622069,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302622069,"endTime":1543302622069,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","description":"","startTime":1543302622069,"endTime":1543302622441,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Charde Marshall\u0027 and expected text \u0027Charde Marshall\u0027 are matched ","startTime":1543302622441,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543302622441,"endTime":1543302622461,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543302622461,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302622461,"endTime":1543302622481,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302622481,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","description":"","startTime":1543302622481,"endTime":1543302622501,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002736\u0027 and expected text \u002736\u0027 are matched ","startTime":1543302622501,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","description":"","startTime":1543302622501,"endTime":1543302622522,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/10/16\u0027 and expected text \u00272008/10/16\u0027 are matched ","startTime":1543302622522,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","description":"","startTime":1543302622522,"endTime":1543302622540,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$470,600\u0027 and expected text \u0027$470,600\u0027 are matched ","startTime":1543302622540,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302622540,"endTime":1543302622542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302622542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622542,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302622542,"endTime":1543302622542,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","description":"","startTime":1543302622542,"endTime":1543302622562,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Colleen Hurst\u0027 and expected text \u0027Colleen Hurst\u0027 are matched ","startTime":1543302622562,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","description":"","startTime":1543302622562,"endTime":1543302622631,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Javascript Developer\u0027 and expected text \u0027Javascript Developer\u0027 are matched ","startTime":1543302622631,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302622633,"endTime":1543302622663,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302622663,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","description":"","startTime":1543302622663,"endTime":1543302622683,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002739\u0027 and expected text \u002739\u0027 are matched ","startTime":1543302622683,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","description":"","startTime":1543302622683,"endTime":1543302622701,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/09/15\u0027 and expected text \u00272009/09/15\u0027 are matched ","startTime":1543302622701,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","description":"","startTime":1543302622701,"endTime":1543302622723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$205,500\u0027 and expected text \u0027$205,500\u0027 are matched ","startTime":1543302622723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302622723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622723,"endTime":1543302622723,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622723,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622731,"endTime":1543302622731,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622731,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302622731,"endTime":1543302622731,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","description":"","startTime":1543302622731,"endTime":1543302622751,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Dai Rios\u0027 and expected text \u0027Dai Rios\u0027 are matched ","startTime":1543302622751,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","description":"","startTime":1543302622751,"endTime":1543302622782,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Personnel Lead\u0027 and expected text \u0027Personnel Lead\u0027 are matched ","startTime":1543302622782,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302622782,"endTime":1543302622794,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302622794,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","description":"","startTime":1543302622794,"endTime":1543302622814,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002735\u0027 and expected text \u002735\u0027 are matched ","startTime":1543302622814,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","description":"","startTime":1543302622814,"endTime":1543302622845,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/09/26\u0027 and expected text \u00272012/09/26\u0027 are matched ","startTime":1543302622845,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","description":"","startTime":1543302622845,"endTime":1543302622872,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$217,500\u0027 and expected text \u0027$217,500\u0027 are matched ","startTime":1543302622871,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302622872,"endTime":1543302622872,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302622872,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302622872,"endTime":1543302622873,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302622873,"endTime":1543302622873,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622873,"endTime":1543302622873,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622873,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622874,"endTime":1543302622874,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622874,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622874,"endTime":1543302622874,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622874,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622875,"endTime":1543302622875,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622875,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622875,"endTime":1543302622875,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622875,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622875,"endTime":1543302622875,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622875,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302622875,"endTime":1543302622875,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","description":"","startTime":1543302622875,"endTime":1543302622895,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Doris Wilder\u0027 and expected text \u0027Doris Wilder\u0027 are matched ","startTime":1543302622895,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543302622895,"endTime":1543302622905,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543302622905,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543302622913,"endTime":1543302622925,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543302622925,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543302622925,"endTime":1543302622946,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543302622946,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","description":"","startTime":1543302622946,"endTime":1543302622956,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/09/20\u0027 and expected text \u00272010/09/20\u0027 are matched ","startTime":1543302622956,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","description":"","startTime":1543302622956,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$85,600\u0027 and expected text \u0027$85,600\u0027 are matched ","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302622977,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302622977,"endTime":1543302622977,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","description":"","startTime":1543302622977,"endTime":1543302622997,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Fiona Green\u0027 and expected text \u0027Fiona Green\u0027 are matched ","startTime":1543302622997,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","description":"","startTime":1543302622997,"endTime":1543302623027,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Operating Officer (COO)\u0027 and expected text \u0027Chief Operating Officer (COO)\u0027 are matched ","startTime":1543302623027,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302623027,"endTime":1543302623047,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302623047,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","description":"","startTime":1543302623047,"endTime":1543302623065,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002748\u0027 and expected text \u002748\u0027 are matched ","startTime":1543302623061,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","description":"","startTime":1543302623065,"endTime":1543302623077,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/11\u0027 and expected text \u00272010/03/11\u0027 are matched ","startTime":1543302623077,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","description":"","startTime":1543302623077,"endTime":1543302623528,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$850,000\u0027 and expected text \u0027$850,000\u0027 are matched ","startTime":1543302623528,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302623528,"endTime":1543302623529,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302623529,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302623529,"endTime":1543302623529,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302623529,"endTime":1543302623529,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302623529,"endTime":1543302623530,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302623529,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302623530,"endTime":1543302623530,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302623530,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302623530,"endTime":1543302623530,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302623530,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302623530,"endTime":1543302623531,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302623531,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302623531,"endTime":1543302623531,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302623531,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302623531,"endTime":1543302623531,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302623531,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302623531,"endTime":1543302623532,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","description":"","startTime":1543302623532,"endTime":1543302624357,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Garrett Winters\u0027 and expected text \u0027Garrett Winters\u0027 are matched ","startTime":1543302624357,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","description":"","startTime":1543302624357,"endTime":1543302624417,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Accountant\u0027 and expected text \u0027Accountant\u0027 are matched ","startTime":1543302624417,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302624417,"endTime":1543302624508,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302624508,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","description":"","startTime":1543302624508,"endTime":1543302624538,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002763\u0027 and expected text \u002763\u0027 are matched ","startTime":1543302624538,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","description":"","startTime":1543302624538,"endTime":1543302624568,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/07/25\u0027 and expected text \u00272011/07/25\u0027 are matched ","startTime":1543302624568,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","description":"","startTime":1543302624568,"endTime":1543302624586,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$170,750\u0027 and expected text \u0027$170,750\u0027 are matched ","startTime":1543302624578,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302624586,"endTime":1543302624588,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302624586,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302624588,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302624588,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302624588,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302624588,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302624588,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302624588,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302624588,"endTime":1543302624588,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","description":"","startTime":1543302624588,"endTime":1543302624606,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gavin Joyce\u0027 and expected text \u0027Gavin Joyce\u0027 are matched ","startTime":1543302624606,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","description":"","startTime":1543302624606,"endTime":1543302624931,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Developer\u0027 and expected text \u0027Developer\u0027 are matched ","startTime":1543302624931,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302624931,"endTime":1543302624951,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302624951,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","description":"","startTime":1543302624951,"endTime":1543302624971,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002742\u0027 and expected text \u002742\u0027 are matched ","startTime":1543302624971,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","description":"","startTime":1543302624971,"endTime":1543302624981,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/12/22\u0027 and expected text \u00272010/12/22\u0027 are matched ","startTime":1543302624981,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","description":"","startTime":1543302624981,"endTime":1543302625021,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$92,575\u0027 and expected text \u0027$92,575\u0027 are matched ","startTime":1543302625019,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302625021,"endTime":1543302625021,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302625021,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302625021,"endTime":1543302625021,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302625021,"endTime":1543302625021,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626026,"endTime":1543302626029,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626028,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626029,"endTime":1543302626030,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626030,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626030,"endTime":1543302626031,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626030,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626031,"endTime":1543302626031,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626031,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626031,"endTime":1543302626032,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626032,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626032,"endTime":1543302626034,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626034,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302626034,"endTime":1543302626034,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","description":"","startTime":1543302626034,"endTime":1543302626063,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Gloria Little\u0027 and expected text \u0027Gloria Little\u0027 are matched ","startTime":1543302626063,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","description":"","startTime":1543302626063,"endTime":1543302626079,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Systems Administrator\u0027 and expected text \u0027Systems Administrator\u0027 are matched ","startTime":1543302626079,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302626079,"endTime":1543302626110,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302626110,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543302626110,"endTime":1543302626132,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543302626131,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","description":"","startTime":1543302626132,"endTime":1543302626149,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/04/10\u0027 and expected text \u00272009/04/10\u0027 are matched ","startTime":1543302626148,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","description":"","startTime":1543302626149,"endTime":1543302626179,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$237,500\u0027 and expected text \u0027$237,500\u0027 are matched ","startTime":1543302626179,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302626179,"endTime":1543302626179,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302626179,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302626179,"endTime":1543302626179,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302626180,"endTime":1543302626180,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626180,"endTime":1543302626180,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626180,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626180,"endTime":1543302626183,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626180,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626183,"endTime":1543302626183,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626183,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626183,"endTime":1543302626183,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626183,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626183,"endTime":1543302626183,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626183,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626183,"endTime":1543302626183,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626183,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302626183,"endTime":1543302626183,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","description":"","startTime":1543302626183,"endTime":1543302626203,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Haley Kennedy\u0027 and expected text \u0027Haley Kennedy\u0027 are matched ","startTime":1543302626203,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","description":"","startTime":1543302626203,"endTime":1543302626424,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Senior Marketing Designer\u0027 and expected text \u0027Senior Marketing Designer\u0027 are matched ","startTime":1543302626424,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302626424,"endTime":1543302626441,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302626441,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","description":"","startTime":1543302626441,"endTime":1543302626458,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002743\u0027 and expected text \u002743\u0027 are matched ","startTime":1543302626458,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","description":"","startTime":1543302626458,"endTime":1543302626474,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/12/18\u0027 and expected text \u00272012/12/18\u0027 are matched ","startTime":1543302626474,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","description":"","startTime":1543302626474,"endTime":1543302626494,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$313,500\u0027 and expected text \u0027$313,500\u0027 are matched ","startTime":1543302626494,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302626494,"endTime":1543302626494,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302626494,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302626494,"endTime":1543302626494,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302626494,"endTime":1543302626494,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626494,"endTime":1543302626494,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626494,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626494,"endTime":1543302626494,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626494,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626494,"endTime":1543302626494,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626494,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626494,"endTime":1543302626494,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626494,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626494,"endTime":1543302626502,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626502,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626502,"endTime":1543302626504,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626502,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302626504,"endTime":1543302626504,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","description":"","startTime":1543302626504,"endTime":1543302626544,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Herrod Chandler\u0027 and expected text \u0027Herrod Chandler\u0027 are matched ","startTime":1543302626544,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","description":"","startTime":1543302626544,"endTime":1543302626562,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sales Assistant\u0027 and expected text \u0027Sales Assistant\u0027 are matched ","startTime":1543302626554,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","description":"","startTime":1543302626562,"endTime":1543302626574,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027San Francisco\u0027 and expected text \u0027San Francisco\u0027 are matched ","startTime":1543302626574,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","description":"","startTime":1543302626574,"endTime":1543302626594,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002759\u0027 and expected text \u002759\u0027 are matched ","startTime":1543302626594,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","description":"","startTime":1543302626594,"endTime":1543302626610,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/08/06\u0027 and expected text \u00272012/08/06\u0027 are matched ","startTime":1543302626610,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","description":"","startTime":1543302626610,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$137,500\u0027 and expected text \u0027$137,500\u0027 are matched ","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626625,"endTime":1543302626625,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626625,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302626625,"endTime":1543302626633,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","description":"","startTime":1543302626633,"endTime":1543302626649,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jena Gaines\u0027 and expected text \u0027Jena Gaines\u0027 are matched ","startTime":1543302626649,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","description":"","startTime":1543302626649,"endTime":1543302626665,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Office Manager\u0027 and expected text \u0027Office Manager\u0027 are matched ","startTime":1543302626665,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302626665,"endTime":1543302626685,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302626685,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543302626685,"endTime":1543302626705,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543302626705,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","description":"","startTime":1543302626705,"endTime":1543302626733,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/19\u0027 and expected text \u00272008/12/19\u0027 are matched ","startTime":1543302626733,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","description":"","startTime":1543302626733,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$90,560\u0027 and expected text \u0027$90,560\u0027 are matched ","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626756,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302626756,"endTime":1543302626756,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","description":"","startTime":1543302626756,"endTime":1543302626794,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jenette Caldwell\u0027 and expected text \u0027Jenette Caldwell\u0027 are matched ","startTime":1543302626794,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","description":"","startTime":1543302626794,"endTime":1543302626806,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Development Lead\u0027 and expected text \u0027Development Lead\u0027 are matched ","startTime":1543302626806,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302626806,"endTime":1543302626837,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302626837,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","description":"","startTime":1543302626837,"endTime":1543302626856,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002730\u0027 and expected text \u002730\u0027 are matched ","startTime":1543302626856,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","description":"","startTime":1543302626856,"endTime":1543302626866,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/09/03\u0027 and expected text \u00272011/09/03\u0027 are matched ","startTime":1543302626866,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","description":"","startTime":1543302626866,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$345,000\u0027 and expected text \u0027$345,000\u0027 are matched ","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302626886,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302626886,"endTime":1543302626886,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","description":"","startTime":1543302626886,"endTime":1543302626906,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Jennifer Chang\u0027 and expected text \u0027Jennifer Chang\u0027 are matched ","startTime":1543302626906,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543302626906,"endTime":1543302626934,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543302626934,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","description":"","startTime":1543302626934,"endTime":1543302626946,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Singapore\u0027 and expected text \u0027Singapore\u0027 are matched ","startTime":1543302626946,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","description":"","startTime":1543302626946,"endTime":1543302626966,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002728\u0027 and expected text \u002728\u0027 are matched ","startTime":1543302626966,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","description":"","startTime":1543302626966,"endTime":1543302626986,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/11/14\u0027 and expected text \u00272010/11/14\u0027 are matched ","startTime":1543302626986,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","description":"","startTime":1543302626986,"endTime":1543302627036,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$357,650\u0027 and expected text \u0027$357,650\u0027 are matched ","startTime":1543302627036,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302627036,"endTime":1543302627036,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302627036,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302627036,"endTime":1543302627037,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302627037,"endTime":1543302627037,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627037,"endTime":1543302627037,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627037,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627037,"endTime":1543302627038,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627038,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627038,"endTime":1543302627039,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627039,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627039,"endTime":1543302627039,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627039,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627039,"endTime":1543302627039,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627039,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627040,"endTime":1543302627040,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627040,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302627040,"endTime":1543302627040,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","description":"","startTime":1543302627040,"endTime":1543302627075,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michael Silva\u0027 and expected text \u0027Michael Silva\u0027 are matched ","startTime":1543302627075,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","description":"","startTime":1543302627075,"endTime":1543302627087,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Marketing Designer\u0027 and expected text \u0027Marketing Designer\u0027 are matched ","startTime":1543302627087,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302627087,"endTime":1543302627116,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302627116,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","description":"","startTime":1543302627116,"endTime":1543302627137,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002766\u0027 and expected text \u002766\u0027 are matched ","startTime":1543302627137,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","description":"","startTime":1543302627137,"endTime":1543302627158,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272012/11/27\u0027 and expected text \u00272012/11/27\u0027 are matched ","startTime":1543302627158,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","description":"","startTime":1543302627158,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$198,500\u0027 and expected text \u0027$198,500\u0027 are matched ","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627178,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302627178,"endTime":1543302627178,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","description":"","startTime":1543302627178,"endTime":1543302627199,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Michelle House\u0027 and expected text \u0027Michelle House\u0027 are matched ","startTime":1543302627199,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543302627199,"endTime":1543302627209,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543302627209,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","description":"","startTime":1543302627209,"endTime":1543302627249,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sidney\u0027 and expected text \u0027Sidney\u0027 are matched ","startTime":1543302627249,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","description":"","startTime":1543302627249,"endTime":1543302627269,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002737\u0027 and expected text \u002737\u0027 are matched ","startTime":1543302627269,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","description":"","startTime":1543302627269,"endTime":1543302627290,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/06/02\u0027 and expected text \u00272011/06/02\u0027 are matched ","startTime":1543302627288,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","description":"","startTime":1543302627290,"endTime":1543302627328,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$95,400\u0027 and expected text \u0027$95,400\u0027 are matched ","startTime":1543302627328,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302627328,"endTime":1543302627330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302627328,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627330,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627330,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627330,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627330,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627330,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627330,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302627330,"endTime":1543302627330,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","description":"","startTime":1543302627330,"endTime":1543302627348,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Paul Byrd\u0027 and expected text \u0027Paul Byrd\u0027 are matched ","startTime":1543302627348,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","description":"","startTime":1543302627350,"endTime":1543302627368,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Financial Officer (CFO)\u0027 and expected text \u0027Chief Financial Officer (CFO)\u0027 are matched ","startTime":1543302627360,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302627368,"endTime":1543302627380,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302627380,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","description":"","startTime":1543302627380,"endTime":1543302627400,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002764\u0027 and expected text \u002764\u0027 are matched ","startTime":1543302627400,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","description":"","startTime":1543302627400,"endTime":1543302627410,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/06/09\u0027 and expected text \u00272010/06/09\u0027 are matched ","startTime":1543302627410,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","description":"","startTime":1543302627410,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$725,000\u0027 and expected text \u0027$725,000\u0027 are matched ","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302627431,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302627431,"endTime":1543302627431,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","description":"","startTime":1543302627431,"endTime":1543302627451,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Quinn Flynn\u0027 and expected text \u0027Quinn Flynn\u0027 are matched ","startTime":1543302627451,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","description":"","startTime":1543302627451,"endTime":1543302627461,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Support Lead\u0027 and expected text \u0027Support Lead\u0027 are matched ","startTime":1543302627461,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302627461,"endTime":1543302627481,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302627481,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","description":"","startTime":1543302627481,"endTime":1543302627502,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002722\u0027 and expected text \u002722\u0027 are matched ","startTime":1543302627502,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","description":"","startTime":1543302627502,"endTime":1543302627512,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272013/03/03\u0027 and expected text \u00272013/03/03\u0027 are matched ","startTime":1543302627512,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","description":"","startTime":1543302627512,"endTime":1543302673338,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$342,000\u0027 and expected text \u0027$342,000\u0027 are matched ","startTime":1543302673338,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302673339,"endTime":1543302673339,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302673339,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674166,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674166,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674166,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674166,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674166,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674166,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302674166,"endTime":1543302674166,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","description":"","startTime":1543302674166,"endTime":1543302674294,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Rhona Davidson\u0027 and expected text \u0027Rhona Davidson\u0027 are matched ","startTime":1543302674294,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","description":"","startTime":1543302674294,"endTime":1543302674416,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Integration Specialist\u0027 and expected text \u0027Integration Specialist\u0027 are matched ","startTime":1543302674416,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302674416,"endTime":1543302674521,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302674521,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","description":"","startTime":1543302674522,"endTime":1543302674550,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002755\u0027 and expected text \u002755\u0027 are matched ","startTime":1543302674550,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","description":"","startTime":1543302674550,"endTime":1543302674560,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/10/14\u0027 and expected text \u00272010/10/14\u0027 are matched ","startTime":1543302674560,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","description":"","startTime":1543302674560,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$327,900\u0027 and expected text \u0027$327,900\u0027 are matched ","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674580,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302674580,"endTime":1543302674580,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","description":"","startTime":1543302674580,"endTime":1543302674600,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Shou Itou\u0027 and expected text \u0027Shou Itou\u0027 are matched ","startTime":1543302674600,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","description":"","startTime":1543302674600,"endTime":1543302674639,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Marketing\u0027 and expected text \u0027Regional Marketing\u0027 are matched ","startTime":1543302674639,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","description":"","startTime":1543302674639,"endTime":1543302674651,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tokyo\u0027 and expected text \u0027Tokyo\u0027 are matched ","startTime":1543302674651,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","description":"","startTime":1543302674651,"endTime":1543302674671,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002720\u0027 and expected text \u002720\u0027 are matched ","startTime":1543302674671,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","description":"","startTime":1543302674671,"endTime":1543302674691,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/08/14\u0027 and expected text \u00272011/08/14\u0027 are matched ","startTime":1543302674691,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","description":"","startTime":1543302674691,"endTime":1543302674719,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$163,000\u0027 and expected text \u0027$163,000\u0027 are matched ","startTime":1543302674719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302674719,"endTime":1543302674719,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302674719,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302674719,"endTime":1543302674721,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674721,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302674721,"endTime":1543302674721,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","description":"","startTime":1543302674721,"endTime":1543302674739,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Sonya Frost\u0027 and expected text \u0027Sonya Frost\u0027 are matched ","startTime":1543302674739,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","description":"","startTime":1543302674739,"endTime":1543302674751,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Software Engineer\u0027 and expected text \u0027Software Engineer\u0027 are matched ","startTime":1543302674751,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302674751,"endTime":1543302674801,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302674801,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","description":"","startTime":1543302674801,"endTime":1543302674822,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002723\u0027 and expected text \u002723\u0027 are matched ","startTime":1543302674822,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","description":"","startTime":1543302674822,"endTime":1543302674843,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272008/12/13\u0027 and expected text \u00272008/12/13\u0027 are matched ","startTime":1543302674843,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","description":"","startTime":1543302674843,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$103,600\u0027 and expected text \u0027$103,600\u0027 are matched ","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302674862,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302674862,"endTime":1543302674862,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","description":"","startTime":1543302674862,"endTime":1543302674912,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tatyana Fitzpatrick\u0027 and expected text \u0027Tatyana Fitzpatrick\u0027 are matched ","startTime":1543302674912,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","description":"","startTime":1543302674912,"endTime":1543302674932,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Regional Director\u0027 and expected text \u0027Regional Director\u0027 are matched ","startTime":1543302674932,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","description":"","startTime":1543302674932,"endTime":1543302674950,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027London\u0027 and expected text \u0027London\u0027 are matched ","startTime":1543302674950,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","description":"","startTime":1543302674950,"endTime":1543302674962,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002719\u0027 and expected text \u002719\u0027 are matched ","startTime":1543302674962,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","description":"","startTime":1543302674962,"endTime":1543302674982,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272010/03/17\u0027 and expected text \u00272010/03/17\u0027 are matched ","startTime":1543302674982,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","description":"","startTime":1543302674982,"endTime":1543302674992,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$385,750\u0027 and expected text \u0027$385,750\u0027 are matched ","startTime":1543302674992,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302674992,"endTime":1543302674992,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302674992,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302674992,"endTime":1543302675000,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302675000,"endTime":1543302675000,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675000,"endTime":1543302675000,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675000,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675000,"endTime":1543302675000,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675000,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675000,"endTime":1543302675000,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675000,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675000,"endTime":1543302675000,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675000,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675000,"endTime":1543302675002,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675000,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675002,"endTime":1543302675002,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675002,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302675002,"endTime":1543302675002,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","description":"","startTime":1543302675002,"endTime":1543302675033,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Tiger Nixon\u0027 and expected text \u0027Tiger Nixon\u0027 are matched ","startTime":1543302675033,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","description":"","startTime":1543302675033,"endTime":1543302675061,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027System Architect\u0027 and expected text \u0027System Architect\u0027 are matched ","startTime":1543302675061,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","description":"","startTime":1543302675061,"endTime":1543302675073,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Edinburgh\u0027 and expected text \u0027Edinburgh\u0027 are matched ","startTime":1543302675073,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","description":"","startTime":1543302675073,"endTime":1543302675093,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002761\u0027 and expected text \u002761\u0027 are matched ","startTime":1543302675093,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","description":"","startTime":1543302675093,"endTime":1543302675121,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272011/04/25\u0027 and expected text \u00272011/04/25\u0027 are matched ","startTime":1543302675121,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","description":"","startTime":1543302675121,"endTime":1543302675133,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$320,800\u0027 and expected text \u0027$320,800\u0027 are matched ","startTime":1543302675133,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":1,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - excel_column \u003d CustomKeywords.demo.ReadExcel.getColumnCount(sheetname, row)","message":"demo.ReadExcel.getColumnCount is PASSED","description":"","startTime":1543302675133,"endTime":1543302675133,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getColumnCount is PASSED","startTime":1543302675133,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":2,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(excel_column)","description":"","startTime":1543302675133,"endTime":1543302675133,"childRecords":[],"interuppted":false},{"index":3,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - column \u003d 0","description":"","startTime":1543302675133,"endTime":1543302675133,"childRecords":[],"interuppted":false},{"index":4,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Name \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 0)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675133,"endTime":1543302675141,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675141,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":5,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Position \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 1)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675141,"endTime":1543302675141,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675141,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":6,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Office \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 2)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675141,"endTime":1543302675141,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675141,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":7,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Age \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 3)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675141,"endTime":1543302675141,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675141,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":8,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - StartDate \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 4)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675141,"endTime":1543302675141,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675141,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":9,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - Salary \u003d CustomKeywords.demo.ReadExcel.getCellData(row, 5)","message":"demo.ReadExcel.getCellData is PASSED","description":"","startTime":1543302675141,"endTime":1543302675141,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"demo.ReadExcel.getCellData is PASSED","startTime":1543302675141,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":10,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"Statement - println(Name + \" \" + Position + \" \" + Office + \" \" + Age + \" \" + StartDate + \" \" + Salary)","description":"","startTime":1543302675141,"endTime":1543302675143,"childRecords":[],"interuppted":false},{"index":11,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","description":"","startTime":1543302675143,"endTime":1543302675154,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Yuri Berry\u0027 and expected text \u0027Yuri Berry\u0027 are matched ","startTime":1543302675154,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":12,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","description":"","startTime":1543302675154,"endTime":1543302675175,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027Chief Marketing Officer (CMO)\u0027 and expected text \u0027Chief Marketing Officer (CMO)\u0027 are matched ","startTime":1543302675175,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":13,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","description":"","startTime":1543302675175,"endTime":1543302675184,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027New York\u0027 and expected text \u0027New York\u0027 are matched ","startTime":1543302675184,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":14,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","description":"","startTime":1543302675184,"endTime":1543302675224,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u002740\u0027 and expected text \u002740\u0027 are matched ","startTime":1543302675224,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":15,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","description":"","startTime":1543302675224,"endTime":1543302675244,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u00272009/06/25\u0027 and expected text \u00272009/06/25\u0027 are matched ","startTime":1543302675244,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false},{"index":16,"isIgnoredIfFailed":false,"type":"TEST_STEP","name":"verifyMatch","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","description":"","startTime":1543302675244,"endTime":1543302675255,"childRecords":[{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Actual text \u0027$675,000\u0027 and expected text \u0027$675,000\u0027 are matched ","startTime":1543302675255,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false},{"testStatus":{"stackTrace":"","statusValue":"PASSED"},"type":"MESSAGE","name":"","message":"Test Cases/Demo/Excel_with_Database","startTime":1543302675255,"endTime":0,"childRecords":[],"interuppted":false}],"interuppted":false}],"interuppted":false}